package soot.jimple.toolkits.transformation.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import soot.jimple.toolkits.transformation.dsl.services.TransformationLanguageGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalTransformationLanguageParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_LABELNAME", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'\\u00ABtransformation\\u00BB'", "'\\u00ABreplace\\u00BB'", "'\\u00ABend\\u00BB'", "'\\u00ABby\\u00BB'", "'\\u00ABwhere\\u00BB'", "'class'", "'interface'", "'extends'", "'implements'", "','", "'{'", "'}'", "'static'", "';'", "'('", "')'", "':'", "'breakpoint'", "'='", "':='", "'goto'", "'if'", "'tableswitch'", "'default'", "'lookupswitch'", "'entermonitor'", "'exitmonitor'", "'nop'", "'ret'", "'return'", "'case'", "'+'", "'&'", "'cmp'", "'cmpg'", "'cmpl'", "'/'", "'*'", "'|'", "'%'", "'<<'", "'>>'", "'-'", "'>>>'", "'^'", "'=='", "'>='", "'>'", "'<='", "'<'", "'!='", "'instanceof'", "'staticinvoke'", "'interfaceinvoke'", "'.'", "'specialinvoke'", "'virtualinvoke'", "'newarray'", "'new'", "'newmultiarray'", "'[]'", "'['", "']'", "'lengthof'", "'neg'", "'@'", "'this'", "'caughtexception'", "'null'", "'L'", "'D'", "'F'", "'\\u00AB'", "'\\u00BB'", "'||'", "'&&'", "'!'", "'boolean'", "'char'", "'byte'", "'short'", "'int'", "'long'", "'float'", "'double'", "'void'", "'true'", "'false'", "'::'", "'package'", "'public'", "'protected'", "'private'"
    };
    public static final int RULE_ID=4;
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__19=19;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__16=16;
    public static final int T__15=15;
    public static final int T__90=90;
    public static final int T__18=18;
    public static final int T__17=17;
    public static final int T__12=12;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int T__99=99;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int RULE_ML_COMMENT=8;
    public static final int RULE_STRING=7;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int RULE_LABELNAME=5;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__103=103;
    public static final int T__59=59;
    public static final int T__104=104;
    public static final int RULE_INT=6;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int RULE_SL_COMMENT=9;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=10;

    // delegates
    // delegators


        public InternalTransformationLanguageParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalTransformationLanguageParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalTransformationLanguageParser.tokenNames; }
    public String getGrammarFileName() { return "../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     
     	private TransformationLanguageGrammarAccess grammarAccess;
     	
        public InternalTransformationLanguageParser(TokenStream input, TransformationLanguageGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "Transformation";	
       	}
       	
       	@Override
       	protected TransformationLanguageGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleTransformation"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:74:1: entryRuleTransformation returns [EObject current=null] : iv_ruleTransformation= ruleTransformation EOF ;
    public final EObject entryRuleTransformation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTransformation = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:75:2: (iv_ruleTransformation= ruleTransformation EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:76:2: iv_ruleTransformation= ruleTransformation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTransformationRule()); 
            }
            pushFollow(FOLLOW_ruleTransformation_in_entryRuleTransformation81);
            iv_ruleTransformation=ruleTransformation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTransformation; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleTransformation91); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTransformation"


    // $ANTLR start "ruleTransformation"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:83:1: ruleTransformation returns [EObject current=null] : (otherlv_0= '\\u00ABtransformation\\u00BB' otherlv_1= '\\u00ABreplace\\u00BB' ( (lv_pattern_2_0= rulePattern ) ) otherlv_3= '\\u00ABend\\u00BB' otherlv_4= '\\u00ABby\\u00BB' ( (lv_replacement_5_0= ruleReplacement ) ) otherlv_6= '\\u00ABend\\u00BB' (otherlv_7= '\\u00ABwhere\\u00BB' ( (lv_condition_8_0= ruleWildcardExpression ) ) otherlv_9= '\\u00ABend\\u00BB' )? otherlv_10= '\\u00ABend\\u00BB' ) ;
    public final EObject ruleTransformation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_pattern_2_0 = null;

        EObject lv_replacement_5_0 = null;

        EObject lv_condition_8_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:86:28: ( (otherlv_0= '\\u00ABtransformation\\u00BB' otherlv_1= '\\u00ABreplace\\u00BB' ( (lv_pattern_2_0= rulePattern ) ) otherlv_3= '\\u00ABend\\u00BB' otherlv_4= '\\u00ABby\\u00BB' ( (lv_replacement_5_0= ruleReplacement ) ) otherlv_6= '\\u00ABend\\u00BB' (otherlv_7= '\\u00ABwhere\\u00BB' ( (lv_condition_8_0= ruleWildcardExpression ) ) otherlv_9= '\\u00ABend\\u00BB' )? otherlv_10= '\\u00ABend\\u00BB' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:87:1: (otherlv_0= '\\u00ABtransformation\\u00BB' otherlv_1= '\\u00ABreplace\\u00BB' ( (lv_pattern_2_0= rulePattern ) ) otherlv_3= '\\u00ABend\\u00BB' otherlv_4= '\\u00ABby\\u00BB' ( (lv_replacement_5_0= ruleReplacement ) ) otherlv_6= '\\u00ABend\\u00BB' (otherlv_7= '\\u00ABwhere\\u00BB' ( (lv_condition_8_0= ruleWildcardExpression ) ) otherlv_9= '\\u00ABend\\u00BB' )? otherlv_10= '\\u00ABend\\u00BB' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:87:1: (otherlv_0= '\\u00ABtransformation\\u00BB' otherlv_1= '\\u00ABreplace\\u00BB' ( (lv_pattern_2_0= rulePattern ) ) otherlv_3= '\\u00ABend\\u00BB' otherlv_4= '\\u00ABby\\u00BB' ( (lv_replacement_5_0= ruleReplacement ) ) otherlv_6= '\\u00ABend\\u00BB' (otherlv_7= '\\u00ABwhere\\u00BB' ( (lv_condition_8_0= ruleWildcardExpression ) ) otherlv_9= '\\u00ABend\\u00BB' )? otherlv_10= '\\u00ABend\\u00BB' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:87:3: otherlv_0= '\\u00ABtransformation\\u00BB' otherlv_1= '\\u00ABreplace\\u00BB' ( (lv_pattern_2_0= rulePattern ) ) otherlv_3= '\\u00ABend\\u00BB' otherlv_4= '\\u00ABby\\u00BB' ( (lv_replacement_5_0= ruleReplacement ) ) otherlv_6= '\\u00ABend\\u00BB' (otherlv_7= '\\u00ABwhere\\u00BB' ( (lv_condition_8_0= ruleWildcardExpression ) ) otherlv_9= '\\u00ABend\\u00BB' )? otherlv_10= '\\u00ABend\\u00BB'
            {
            otherlv_0=(Token)match(input,12,FOLLOW_12_in_ruleTransformation128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTransformationAccess().getTransformationKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,13,FOLLOW_13_in_ruleTransformation140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTransformationAccess().getReplaceKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:95:1: ( (lv_pattern_2_0= rulePattern ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:96:1: (lv_pattern_2_0= rulePattern )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:96:1: (lv_pattern_2_0= rulePattern )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:97:3: lv_pattern_2_0= rulePattern
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTransformationAccess().getPatternPatternParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_rulePattern_in_ruleTransformation161);
            lv_pattern_2_0=rulePattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTransformationRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_2_0, 
                      		"Pattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,14,FOLLOW_14_in_ruleTransformation173); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTransformationAccess().getEndKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,15,FOLLOW_15_in_ruleTransformation185); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTransformationAccess().getByKeyword_4());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:121:1: ( (lv_replacement_5_0= ruleReplacement ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:122:1: (lv_replacement_5_0= ruleReplacement )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:122:1: (lv_replacement_5_0= ruleReplacement )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:123:3: lv_replacement_5_0= ruleReplacement
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTransformationAccess().getReplacementReplacementParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleReplacement_in_ruleTransformation206);
            lv_replacement_5_0=ruleReplacement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTransformationRule());
              	        }
                     		set(
                     			current, 
                     			"replacement",
                      		lv_replacement_5_0, 
                      		"Replacement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleTransformation218); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getTransformationAccess().getEndKeyword_6());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:143:1: (otherlv_7= '\\u00ABwhere\\u00BB' ( (lv_condition_8_0= ruleWildcardExpression ) ) otherlv_9= '\\u00ABend\\u00BB' )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==16) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:143:3: otherlv_7= '\\u00ABwhere\\u00BB' ( (lv_condition_8_0= ruleWildcardExpression ) ) otherlv_9= '\\u00ABend\\u00BB'
                    {
                    otherlv_7=(Token)match(input,16,FOLLOW_16_in_ruleTransformation231); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getTransformationAccess().getWhereKeyword_7_0());
                          
                    }
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:147:1: ( (lv_condition_8_0= ruleWildcardExpression ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:148:1: (lv_condition_8_0= ruleWildcardExpression )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:148:1: (lv_condition_8_0= ruleWildcardExpression )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:149:3: lv_condition_8_0= ruleWildcardExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTransformationAccess().getConditionWildcardExpressionParserRuleCall_7_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardExpression_in_ruleTransformation252);
                    lv_condition_8_0=ruleWildcardExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTransformationRule());
                      	        }
                             		set(
                             			current, 
                             			"condition",
                              		lv_condition_8_0, 
                              		"WildcardExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,14,FOLLOW_14_in_ruleTransformation264); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getTransformationAccess().getEndKeyword_7_2());
                          
                    }

                    }
                    break;

            }

            otherlv_10=(Token)match(input,14,FOLLOW_14_in_ruleTransformation278); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getTransformationAccess().getEndKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTransformation"


    // $ANTLR start "entryRulePattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:181:1: entryRulePattern returns [EObject current=null] : iv_rulePattern= rulePattern EOF ;
    public final EObject entryRulePattern() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePattern = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:182:2: (iv_rulePattern= rulePattern EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:183:2: iv_rulePattern= rulePattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPatternRule()); 
            }
            pushFollow(FOLLOW_rulePattern_in_entryRulePattern314);
            iv_rulePattern=rulePattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePattern; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRulePattern324); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePattern"


    // $ANTLR start "rulePattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:190:1: rulePattern returns [EObject current=null] : (this_SequencePattern_0= ruleSequencePattern | this_MethodPattern_1= ruleMethodPattern | this_TypePattern_2= ruleTypePattern ) ;
    public final EObject rulePattern() throws RecognitionException {
        EObject current = null;

        EObject this_SequencePattern_0 = null;

        EObject this_MethodPattern_1 = null;

        EObject this_TypePattern_2 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:193:28: ( (this_SequencePattern_0= ruleSequencePattern | this_MethodPattern_1= ruleMethodPattern | this_TypePattern_2= ruleTypePattern ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:194:1: (this_SequencePattern_0= ruleSequencePattern | this_MethodPattern_1= ruleMethodPattern | this_TypePattern_2= ruleTypePattern )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:194:1: (this_SequencePattern_0= ruleSequencePattern | this_MethodPattern_1= ruleMethodPattern | this_TypePattern_2= ruleTypePattern )
            int alt2=3;
            switch ( input.LA(1) ) {
            case RULE_LABELNAME:
            case 29:
            case 32:
            case 33:
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 61:
            case 64:
            case 65:
            case 67:
            case 68:
            case 77:
            case 84:
                {
                alt2=1;
                }
                break;
            case RULE_ID:
                {
                int LA2_2 = input.LA(2);

                if ( ((LA2_2>=30 && LA2_2<=31)||LA2_2==66||LA2_2==73) ) {
                    alt2=1;
                }
                else if ( (LA2_2==RULE_ID||LA2_2==61) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 2, input);

                    throw nvae;
                }
                }
                break;
            case 101:
                {
                int LA2_3 = input.LA(2);

                if ( (LA2_3==RULE_ID||LA2_3==24) ) {
                    alt2=2;
                }
                else if ( ((LA2_3>=17 && LA2_3<=18)) ) {
                    alt2=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 3, input);

                    throw nvae;
                }
                }
                break;
            case 102:
                {
                int LA2_4 = input.LA(2);

                if ( ((LA2_4>=17 && LA2_4<=18)) ) {
                    alt2=3;
                }
                else if ( (LA2_4==RULE_ID||LA2_4==24) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 4, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA2_5 = input.LA(2);

                if ( (LA2_5==RULE_ID||LA2_5==24) ) {
                    alt2=2;
                }
                else if ( ((LA2_5>=17 && LA2_5<=18)) ) {
                    alt2=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 5, input);

                    throw nvae;
                }
                }
                break;
            case 104:
                {
                int LA2_6 = input.LA(2);

                if ( ((LA2_6>=17 && LA2_6<=18)) ) {
                    alt2=3;
                }
                else if ( (LA2_6==RULE_ID||LA2_6==24) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 6, input);

                    throw nvae;
                }
                }
                break;
            case 24:
                {
                alt2=2;
                }
                break;
            case 17:
            case 18:
                {
                alt2=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:195:2: this_SequencePattern_0= ruleSequencePattern
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getSequencePatternParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleSequencePattern_in_rulePattern374);
                    this_SequencePattern_0=ruleSequencePattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SequencePattern_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:208:2: this_MethodPattern_1= ruleMethodPattern
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getMethodPatternParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleMethodPattern_in_rulePattern404);
                    this_MethodPattern_1=ruleMethodPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_MethodPattern_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:221:2: this_TypePattern_2= ruleTypePattern
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPatternAccess().getTypePatternParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleTypePattern_in_rulePattern434);
                    this_TypePattern_2=ruleTypePattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypePattern_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePattern"


    // $ANTLR start "entryRuleSequencePattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:240:1: entryRuleSequencePattern returns [EObject current=null] : iv_ruleSequencePattern= ruleSequencePattern EOF ;
    public final EObject entryRuleSequencePattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequencePattern = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:241:2: (iv_ruleSequencePattern= ruleSequencePattern EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:242:2: iv_ruleSequencePattern= ruleSequencePattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequencePatternRule()); 
            }
            pushFollow(FOLLOW_ruleSequencePattern_in_entryRuleSequencePattern469);
            iv_ruleSequencePattern=ruleSequencePattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequencePattern; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSequencePattern479); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequencePattern"


    // $ANTLR start "ruleSequencePattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:249:1: ruleSequencePattern returns [EObject current=null] : ( (lv_sequence_0_0= ruleStatementSequence ) ) ;
    public final EObject ruleSequencePattern() throws RecognitionException {
        EObject current = null;

        EObject lv_sequence_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:252:28: ( ( (lv_sequence_0_0= ruleStatementSequence ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:253:1: ( (lv_sequence_0_0= ruleStatementSequence ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:253:1: ( (lv_sequence_0_0= ruleStatementSequence ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:254:1: (lv_sequence_0_0= ruleStatementSequence )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:254:1: (lv_sequence_0_0= ruleStatementSequence )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:255:3: lv_sequence_0_0= ruleStatementSequence
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSequencePatternAccess().getSequenceStatementSequenceParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleStatementSequence_in_ruleSequencePattern524);
            lv_sequence_0_0=ruleStatementSequence();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSequencePatternRule());
              	        }
                     		set(
                     			current, 
                     			"sequence",
                      		lv_sequence_0_0, 
                      		"StatementSequence");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequencePattern"


    // $ANTLR start "entryRuleMethodPattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:279:1: entryRuleMethodPattern returns [EObject current=null] : iv_ruleMethodPattern= ruleMethodPattern EOF ;
    public final EObject entryRuleMethodPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodPattern = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:280:2: (iv_ruleMethodPattern= ruleMethodPattern EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:281:2: iv_ruleMethodPattern= ruleMethodPattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodPatternRule()); 
            }
            pushFollow(FOLLOW_ruleMethodPattern_in_entryRuleMethodPattern559);
            iv_ruleMethodPattern=ruleMethodPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodPattern; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMethodPattern569); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodPattern"


    // $ANTLR start "ruleMethodPattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:288:1: ruleMethodPattern returns [EObject current=null] : ( (lv_method_0_0= ruleMethod ) ) ;
    public final EObject ruleMethodPattern() throws RecognitionException {
        EObject current = null;

        EObject lv_method_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:291:28: ( ( (lv_method_0_0= ruleMethod ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:292:1: ( (lv_method_0_0= ruleMethod ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:292:1: ( (lv_method_0_0= ruleMethod ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:293:1: (lv_method_0_0= ruleMethod )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:293:1: (lv_method_0_0= ruleMethod )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:294:3: lv_method_0_0= ruleMethod
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMethodPatternAccess().getMethodMethodParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleMethod_in_ruleMethodPattern614);
            lv_method_0_0=ruleMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMethodPatternRule());
              	        }
                     		set(
                     			current, 
                     			"method",
                      		lv_method_0_0, 
                      		"Method");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodPattern"


    // $ANTLR start "entryRuleTypePattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:318:1: entryRuleTypePattern returns [EObject current=null] : iv_ruleTypePattern= ruleTypePattern EOF ;
    public final EObject entryRuleTypePattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypePattern = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:319:2: (iv_ruleTypePattern= ruleTypePattern EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:320:2: iv_ruleTypePattern= ruleTypePattern EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypePatternRule()); 
            }
            pushFollow(FOLLOW_ruleTypePattern_in_entryRuleTypePattern649);
            iv_ruleTypePattern=ruleTypePattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypePattern; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleTypePattern659); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypePattern"


    // $ANTLR start "ruleTypePattern"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:327:1: ruleTypePattern returns [EObject current=null] : ( (lv_type_0_0= ruleType ) ) ;
    public final EObject ruleTypePattern() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:330:28: ( ( (lv_type_0_0= ruleType ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:331:1: ( (lv_type_0_0= ruleType ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:331:1: ( (lv_type_0_0= ruleType ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:332:1: (lv_type_0_0= ruleType )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:332:1: (lv_type_0_0= ruleType )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:333:3: lv_type_0_0= ruleType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypePatternAccess().getTypeTypeParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleType_in_ruleTypePattern704);
            lv_type_0_0=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypePatternRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"Type");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypePattern"


    // $ANTLR start "entryRuleReplacement"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:357:1: entryRuleReplacement returns [EObject current=null] : iv_ruleReplacement= ruleReplacement EOF ;
    public final EObject entryRuleReplacement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReplacement = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:358:2: (iv_ruleReplacement= ruleReplacement EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:359:2: iv_ruleReplacement= ruleReplacement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReplacementRule()); 
            }
            pushFollow(FOLLOW_ruleReplacement_in_entryRuleReplacement739);
            iv_ruleReplacement=ruleReplacement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReplacement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleReplacement749); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReplacement"


    // $ANTLR start "ruleReplacement"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:366:1: ruleReplacement returns [EObject current=null] : ( ( (lv_sequence_0_0= ruleStatementSequence ) ) | ( (lv_method_1_0= ruleMethod ) ) | ( (lv_type_2_0= ruleType ) ) ) ;
    public final EObject ruleReplacement() throws RecognitionException {
        EObject current = null;

        EObject lv_sequence_0_0 = null;

        EObject lv_method_1_0 = null;

        EObject lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:369:28: ( ( ( (lv_sequence_0_0= ruleStatementSequence ) ) | ( (lv_method_1_0= ruleMethod ) ) | ( (lv_type_2_0= ruleType ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:370:1: ( ( (lv_sequence_0_0= ruleStatementSequence ) ) | ( (lv_method_1_0= ruleMethod ) ) | ( (lv_type_2_0= ruleType ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:370:1: ( ( (lv_sequence_0_0= ruleStatementSequence ) ) | ( (lv_method_1_0= ruleMethod ) ) | ( (lv_type_2_0= ruleType ) ) )
            int alt3=3;
            switch ( input.LA(1) ) {
            case RULE_LABELNAME:
            case 29:
            case 32:
            case 33:
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 61:
            case 64:
            case 65:
            case 67:
            case 68:
            case 77:
            case 84:
                {
                alt3=1;
                }
                break;
            case RULE_ID:
                {
                int LA3_2 = input.LA(2);

                if ( (LA3_2==RULE_ID||LA3_2==61) ) {
                    alt3=2;
                }
                else if ( ((LA3_2>=30 && LA3_2<=31)||LA3_2==66||LA3_2==73) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }
                }
                break;
            case 101:
                {
                int LA3_3 = input.LA(2);

                if ( ((LA3_3>=17 && LA3_3<=18)) ) {
                    alt3=3;
                }
                else if ( (LA3_3==RULE_ID||LA3_3==24) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 3, input);

                    throw nvae;
                }
                }
                break;
            case 102:
                {
                int LA3_4 = input.LA(2);

                if ( (LA3_4==RULE_ID||LA3_4==24) ) {
                    alt3=2;
                }
                else if ( ((LA3_4>=17 && LA3_4<=18)) ) {
                    alt3=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 4, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA3_5 = input.LA(2);

                if ( (LA3_5==RULE_ID||LA3_5==24) ) {
                    alt3=2;
                }
                else if ( ((LA3_5>=17 && LA3_5<=18)) ) {
                    alt3=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 5, input);

                    throw nvae;
                }
                }
                break;
            case 104:
                {
                int LA3_6 = input.LA(2);

                if ( ((LA3_6>=17 && LA3_6<=18)) ) {
                    alt3=3;
                }
                else if ( (LA3_6==RULE_ID||LA3_6==24) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 6, input);

                    throw nvae;
                }
                }
                break;
            case 24:
                {
                alt3=2;
                }
                break;
            case 17:
            case 18:
                {
                alt3=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:370:2: ( (lv_sequence_0_0= ruleStatementSequence ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:370:2: ( (lv_sequence_0_0= ruleStatementSequence ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:371:1: (lv_sequence_0_0= ruleStatementSequence )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:371:1: (lv_sequence_0_0= ruleStatementSequence )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:372:3: lv_sequence_0_0= ruleStatementSequence
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReplacementAccess().getSequenceStatementSequenceParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleStatementSequence_in_ruleReplacement795);
                    lv_sequence_0_0=ruleStatementSequence();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReplacementRule());
                      	        }
                             		set(
                             			current, 
                             			"sequence",
                              		lv_sequence_0_0, 
                              		"StatementSequence");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:389:6: ( (lv_method_1_0= ruleMethod ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:389:6: ( (lv_method_1_0= ruleMethod ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:390:1: (lv_method_1_0= ruleMethod )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:390:1: (lv_method_1_0= ruleMethod )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:391:3: lv_method_1_0= ruleMethod
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReplacementAccess().getMethodMethodParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleMethod_in_ruleReplacement822);
                    lv_method_1_0=ruleMethod();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReplacementRule());
                      	        }
                             		set(
                             			current, 
                             			"method",
                              		lv_method_1_0, 
                              		"Method");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:408:6: ( (lv_type_2_0= ruleType ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:408:6: ( (lv_type_2_0= ruleType ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:409:1: (lv_type_2_0= ruleType )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:409:1: (lv_type_2_0= ruleType )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:410:3: lv_type_2_0= ruleType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReplacementAccess().getTypeTypeParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleType_in_ruleReplacement849);
                    lv_type_2_0=ruleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReplacementRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_2_0, 
                              		"Type");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReplacement"


    // $ANTLR start "entryRuleType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:434:1: entryRuleType returns [EObject current=null] : iv_ruleType= ruleType EOF ;
    public final EObject entryRuleType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleType = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:435:2: (iv_ruleType= ruleType EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:436:2: iv_ruleType= ruleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_ruleType_in_entryRuleType885);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleType895); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleType"


    // $ANTLR start "ruleType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:443:1: ruleType returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibility ) )? ( ( (lv_class_1_0= 'class' ) ) | ( (lv_interface_2_0= 'interface' ) ) ) ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= 'extends' ( (lv_superClass_5_0= ruleQualifiedName ) ) )? (otherlv_6= 'implements' ( (lv_interfaces_7_0= ruleQualifiedName ) ) (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )* )? otherlv_10= '{' ( (lv_fields_11_0= ruleField ) )* ( (lv_methods_12_0= ruleMethod ) )* otherlv_13= '}' ) ;
    public final EObject ruleType() throws RecognitionException {
        EObject current = null;

        Token lv_class_1_0=null;
        Token lv_interface_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        Enumerator lv_visibility_0_0 = null;

        EObject lv_name_3_0 = null;

        EObject lv_superClass_5_0 = null;

        EObject lv_interfaces_7_0 = null;

        EObject lv_interfaces_9_0 = null;

        EObject lv_fields_11_0 = null;

        EObject lv_methods_12_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:446:28: ( ( ( (lv_visibility_0_0= ruleVisibility ) )? ( ( (lv_class_1_0= 'class' ) ) | ( (lv_interface_2_0= 'interface' ) ) ) ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= 'extends' ( (lv_superClass_5_0= ruleQualifiedName ) ) )? (otherlv_6= 'implements' ( (lv_interfaces_7_0= ruleQualifiedName ) ) (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )* )? otherlv_10= '{' ( (lv_fields_11_0= ruleField ) )* ( (lv_methods_12_0= ruleMethod ) )* otherlv_13= '}' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:447:1: ( ( (lv_visibility_0_0= ruleVisibility ) )? ( ( (lv_class_1_0= 'class' ) ) | ( (lv_interface_2_0= 'interface' ) ) ) ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= 'extends' ( (lv_superClass_5_0= ruleQualifiedName ) ) )? (otherlv_6= 'implements' ( (lv_interfaces_7_0= ruleQualifiedName ) ) (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )* )? otherlv_10= '{' ( (lv_fields_11_0= ruleField ) )* ( (lv_methods_12_0= ruleMethod ) )* otherlv_13= '}' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:447:1: ( ( (lv_visibility_0_0= ruleVisibility ) )? ( ( (lv_class_1_0= 'class' ) ) | ( (lv_interface_2_0= 'interface' ) ) ) ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= 'extends' ( (lv_superClass_5_0= ruleQualifiedName ) ) )? (otherlv_6= 'implements' ( (lv_interfaces_7_0= ruleQualifiedName ) ) (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )* )? otherlv_10= '{' ( (lv_fields_11_0= ruleField ) )* ( (lv_methods_12_0= ruleMethod ) )* otherlv_13= '}' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:447:2: ( (lv_visibility_0_0= ruleVisibility ) )? ( ( (lv_class_1_0= 'class' ) ) | ( (lv_interface_2_0= 'interface' ) ) ) ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= 'extends' ( (lv_superClass_5_0= ruleQualifiedName ) ) )? (otherlv_6= 'implements' ( (lv_interfaces_7_0= ruleQualifiedName ) ) (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )* )? otherlv_10= '{' ( (lv_fields_11_0= ruleField ) )* ( (lv_methods_12_0= ruleMethod ) )* otherlv_13= '}'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:447:2: ( (lv_visibility_0_0= ruleVisibility ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=101 && LA4_0<=104)) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:448:1: (lv_visibility_0_0= ruleVisibility )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:448:1: (lv_visibility_0_0= ruleVisibility )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:449:3: lv_visibility_0_0= ruleVisibility
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVisibility_in_ruleType941);
                    lv_visibility_0_0=ruleVisibility();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"visibility",
                              		lv_visibility_0_0, 
                              		"Visibility");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:465:3: ( ( (lv_class_1_0= 'class' ) ) | ( (lv_interface_2_0= 'interface' ) ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==17) ) {
                alt5=1;
            }
            else if ( (LA5_0==18) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:465:4: ( (lv_class_1_0= 'class' ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:465:4: ( (lv_class_1_0= 'class' ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:466:1: (lv_class_1_0= 'class' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:466:1: (lv_class_1_0= 'class' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:467:3: lv_class_1_0= 'class'
                    {
                    lv_class_1_0=(Token)match(input,17,FOLLOW_17_in_ruleType961); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_class_1_0, grammarAccess.getTypeAccess().getClassClassKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeRule());
                      	        }
                             		setWithLastConsumed(current, "class", true, "class");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:481:6: ( (lv_interface_2_0= 'interface' ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:481:6: ( (lv_interface_2_0= 'interface' ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:482:1: (lv_interface_2_0= 'interface' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:482:1: (lv_interface_2_0= 'interface' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:483:3: lv_interface_2_0= 'interface'
                    {
                    lv_interface_2_0=(Token)match(input,18,FOLLOW_18_in_ruleType998); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_interface_2_0, grammarAccess.getTypeAccess().getInterfaceInterfaceKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeRule());
                      	        }
                             		setWithLastConsumed(current, "interface", true, "interface");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:496:3: ( (lv_name_3_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:497:1: (lv_name_3_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:497:1: (lv_name_3_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:498:3: lv_name_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeAccess().getNameQualifiedNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleType1033);
            lv_name_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:514:2: (otherlv_4= 'extends' ( (lv_superClass_5_0= ruleQualifiedName ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==19) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:514:4: otherlv_4= 'extends' ( (lv_superClass_5_0= ruleQualifiedName ) )
                    {
                    otherlv_4=(Token)match(input,19,FOLLOW_19_in_ruleType1046); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getExtendsKeyword_3_0());
                          
                    }
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:518:1: ( (lv_superClass_5_0= ruleQualifiedName ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:519:1: (lv_superClass_5_0= ruleQualifiedName )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:519:1: (lv_superClass_5_0= ruleQualifiedName )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:520:3: lv_superClass_5_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getSuperClassQualifiedNameParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleType1067);
                    lv_superClass_5_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"superClass",
                              		lv_superClass_5_0, 
                              		"QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:536:4: (otherlv_6= 'implements' ( (lv_interfaces_7_0= ruleQualifiedName ) ) (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )* )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==20) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:536:6: otherlv_6= 'implements' ( (lv_interfaces_7_0= ruleQualifiedName ) ) (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )*
                    {
                    otherlv_6=(Token)match(input,20,FOLLOW_20_in_ruleType1082); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getTypeAccess().getImplementsKeyword_4_0());
                          
                    }
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:540:1: ( (lv_interfaces_7_0= ruleQualifiedName ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:541:1: (lv_interfaces_7_0= ruleQualifiedName )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:541:1: (lv_interfaces_7_0= ruleQualifiedName )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:542:3: lv_interfaces_7_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeAccess().getInterfacesQualifiedNameParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleType1103);
                    lv_interfaces_7_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                      	        }
                             		add(
                             			current, 
                             			"interfaces",
                              		lv_interfaces_7_0, 
                              		"QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:558:2: (otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) ) )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==21) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:558:4: otherlv_8= ',' ( (lv_interfaces_9_0= ruleQualifiedName ) )
                    	    {
                    	    otherlv_8=(Token)match(input,21,FOLLOW_21_in_ruleType1116); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_8, grammarAccess.getTypeAccess().getCommaKeyword_4_2_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:562:1: ( (lv_interfaces_9_0= ruleQualifiedName ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:563:1: (lv_interfaces_9_0= ruleQualifiedName )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:563:1: (lv_interfaces_9_0= ruleQualifiedName )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:564:3: lv_interfaces_9_0= ruleQualifiedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTypeAccess().getInterfacesQualifiedNameParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleQualifiedName_in_ruleType1137);
                    	    lv_interfaces_9_0=ruleQualifiedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"interfaces",
                    	              		lv_interfaces_9_0, 
                    	              		"QualifiedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_10=(Token)match(input,22,FOLLOW_22_in_ruleType1153); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_5());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:584:1: ( (lv_fields_11_0= ruleField ) )*
            loop9:
            do {
                int alt9=2;
                alt9 = dfa9.predict(input);
                switch (alt9) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:585:1: (lv_fields_11_0= ruleField )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:585:1: (lv_fields_11_0= ruleField )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:586:3: lv_fields_11_0= ruleField
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeAccess().getFieldsFieldParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleField_in_ruleType1174);
            	    lv_fields_11_0=ruleField();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"fields",
            	              		lv_fields_11_0, 
            	              		"Field");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:602:3: ( (lv_methods_12_0= ruleMethod ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==RULE_ID||LA10_0==24||(LA10_0>=101 && LA10_0<=104)) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:603:1: (lv_methods_12_0= ruleMethod )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:603:1: (lv_methods_12_0= ruleMethod )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:604:3: lv_methods_12_0= ruleMethod
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeAccess().getMethodsMethodParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleMethod_in_ruleType1196);
            	    lv_methods_12_0=ruleMethod();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"methods",
            	              		lv_methods_12_0, 
            	              		"Method");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            otherlv_13=(Token)match(input,23,FOLLOW_23_in_ruleType1209); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleType"


    // $ANTLR start "entryRuleField"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:632:1: entryRuleField returns [EObject current=null] : iv_ruleField= ruleField EOF ;
    public final EObject entryRuleField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleField = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:633:2: (iv_ruleField= ruleField EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:634:2: iv_ruleField= ruleField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldRule()); 
            }
            pushFollow(FOLLOW_ruleField_in_entryRuleField1245);
            iv_ruleField=ruleField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleField; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleField1255); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleField"


    // $ANTLR start "ruleField"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:641:1: ruleField returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) ) ( (lv_type_2_0= ruleQualifiedName ) ) ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ';' ) ;
    public final EObject ruleField() throws RecognitionException {
        EObject current = null;

        Token lv_static_1_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Enumerator lv_visibility_0_0 = null;

        EObject lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:644:28: ( ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) ) ( (lv_type_2_0= ruleQualifiedName ) ) ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ';' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:645:1: ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) ) ( (lv_type_2_0= ruleQualifiedName ) ) ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ';' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:645:1: ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) ) ( (lv_type_2_0= ruleQualifiedName ) ) ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ';' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:645:2: ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) ) ( (lv_type_2_0= ruleQualifiedName ) ) ( (lv_name_3_0= RULE_ID ) ) otherlv_4= ';'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:645:2: ( (lv_visibility_0_0= ruleVisibility ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( ((LA11_0>=101 && LA11_0<=104)) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:646:1: (lv_visibility_0_0= ruleVisibility )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:646:1: (lv_visibility_0_0= ruleVisibility )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:647:3: lv_visibility_0_0= ruleVisibility
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFieldAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVisibility_in_ruleField1301);
                    lv_visibility_0_0=ruleVisibility();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"visibility",
                              		lv_visibility_0_0, 
                              		"Visibility");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:663:3: ( (lv_static_1_0= 'static' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:664:1: (lv_static_1_0= 'static' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:664:1: (lv_static_1_0= 'static' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:665:3: lv_static_1_0= 'static'
            {
            lv_static_1_0=(Token)match(input,24,FOLLOW_24_in_ruleField1320); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_static_1_0, grammarAccess.getFieldAccess().getStaticStaticKeyword_1_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFieldRule());
              	        }
                     		setWithLastConsumed(current, "static", true, "static");
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:678:2: ( (lv_type_2_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:679:1: (lv_type_2_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:679:1: (lv_type_2_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:680:3: lv_type_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldAccess().getTypeQualifiedNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleField1354);
            lv_type_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:696:2: ( (lv_name_3_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:697:1: (lv_name_3_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:697:1: (lv_name_3_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:698:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleField1371); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFieldRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"ID");
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,25,FOLLOW_25_in_ruleField1388); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getFieldAccess().getSemicolonKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleField"


    // $ANTLR start "entryRuleMethod"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:726:1: entryRuleMethod returns [EObject current=null] : iv_ruleMethod= ruleMethod EOF ;
    public final EObject entryRuleMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethod = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:727:2: (iv_ruleMethod= ruleMethod EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:728:2: iv_ruleMethod= ruleMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodRule()); 
            }
            pushFollow(FOLLOW_ruleMethod_in_entryRuleMethod1424);
            iv_ruleMethod=ruleMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethod; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMethod1434); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethod"


    // $ANTLR start "ruleMethod"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:735:1: ruleMethod returns [EObject current=null] : ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) )? ( (lv_type_2_0= RULE_ID ) ) ( (lv_name_3_0= ruleMethodName ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleQualifiedName ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )* )? otherlv_8= ')' ( (lv_body_9_0= ruleBody ) ) ) ;
    public final EObject ruleMethod() throws RecognitionException {
        EObject current = null;

        Token lv_static_1_0=null;
        Token lv_type_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_visibility_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_body_9_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:738:28: ( ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) )? ( (lv_type_2_0= RULE_ID ) ) ( (lv_name_3_0= ruleMethodName ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleQualifiedName ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )* )? otherlv_8= ')' ( (lv_body_9_0= ruleBody ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:739:1: ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) )? ( (lv_type_2_0= RULE_ID ) ) ( (lv_name_3_0= ruleMethodName ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleQualifiedName ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )* )? otherlv_8= ')' ( (lv_body_9_0= ruleBody ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:739:1: ( ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) )? ( (lv_type_2_0= RULE_ID ) ) ( (lv_name_3_0= ruleMethodName ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleQualifiedName ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )* )? otherlv_8= ')' ( (lv_body_9_0= ruleBody ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:739:2: ( (lv_visibility_0_0= ruleVisibility ) )? ( (lv_static_1_0= 'static' ) )? ( (lv_type_2_0= RULE_ID ) ) ( (lv_name_3_0= ruleMethodName ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleQualifiedName ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )* )? otherlv_8= ')' ( (lv_body_9_0= ruleBody ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:739:2: ( (lv_visibility_0_0= ruleVisibility ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=101 && LA12_0<=104)) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:740:1: (lv_visibility_0_0= ruleVisibility )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:740:1: (lv_visibility_0_0= ruleVisibility )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:741:3: lv_visibility_0_0= ruleVisibility
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleVisibility_in_ruleMethod1480);
                    lv_visibility_0_0=ruleVisibility();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"visibility",
                              		lv_visibility_0_0, 
                              		"Visibility");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:757:3: ( (lv_static_1_0= 'static' ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==24) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:758:1: (lv_static_1_0= 'static' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:758:1: (lv_static_1_0= 'static' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:759:3: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,24,FOLLOW_24_in_ruleMethod1499); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_static_1_0, grammarAccess.getMethodAccess().getStaticStaticKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getMethodRule());
                      	        }
                             		setWithLastConsumed(current, "static", true, "static");
                      	    
                    }

                    }


                    }
                    break;

            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:772:3: ( (lv_type_2_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:773:1: (lv_type_2_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:773:1: (lv_type_2_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:774:3: lv_type_2_0= RULE_ID
            {
            lv_type_2_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleMethod1530); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_type_2_0, grammarAccess.getMethodAccess().getTypeIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getMethodRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"ID");
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:790:2: ( (lv_name_3_0= ruleMethodName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:791:1: (lv_name_3_0= ruleMethodName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:791:1: (lv_name_3_0= ruleMethodName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:792:3: lv_name_3_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMethodAccess().getNameMethodNameParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleMethodName_in_ruleMethod1556);
            lv_name_3_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMethodRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"MethodName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,26,FOLLOW_26_in_ruleMethod1568); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_4());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:812:1: ( ( (lv_parameters_5_0= ruleQualifiedName ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )* )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ID) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:812:2: ( (lv_parameters_5_0= ruleQualifiedName ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:812:2: ( (lv_parameters_5_0= ruleQualifiedName ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:813:1: (lv_parameters_5_0= ruleQualifiedName )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:813:1: (lv_parameters_5_0= ruleQualifiedName )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:814:3: lv_parameters_5_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodAccess().getParametersQualifiedNameParserRuleCall_5_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleMethod1590);
                    lv_parameters_5_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_5_0, 
                              		"QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:830:2: (otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) ) )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==21) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:830:4: otherlv_6= ',' ( (lv_parameters_7_0= ruleQualifiedName ) )
                    	    {
                    	    otherlv_6=(Token)match(input,21,FOLLOW_21_in_ruleMethod1603); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getMethodAccess().getCommaKeyword_5_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:834:1: ( (lv_parameters_7_0= ruleQualifiedName ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:835:1: (lv_parameters_7_0= ruleQualifiedName )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:835:1: (lv_parameters_7_0= ruleQualifiedName )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:836:3: lv_parameters_7_0= ruleQualifiedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMethodAccess().getParametersQualifiedNameParserRuleCall_5_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleQualifiedName_in_ruleMethod1624);
                    	    lv_parameters_7_0=ruleQualifiedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMethodRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_7_0, 
                    	              		"QualifiedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleMethod1640); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getMethodAccess().getRightParenthesisKeyword_6());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:856:1: ( (lv_body_9_0= ruleBody ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:857:1: (lv_body_9_0= ruleBody )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:857:1: (lv_body_9_0= ruleBody )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:858:3: lv_body_9_0= ruleBody
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMethodAccess().getBodyBodyParserRuleCall_7_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleBody_in_ruleMethod1661);
            lv_body_9_0=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMethodRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_9_0, 
                      		"Body");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethod"


    // $ANTLR start "entryRuleBody"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:882:1: entryRuleBody returns [EObject current=null] : iv_ruleBody= ruleBody EOF ;
    public final EObject entryRuleBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBody = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:883:2: (iv_ruleBody= ruleBody EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:884:2: iv_ruleBody= ruleBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyRule()); 
            }
            pushFollow(FOLLOW_ruleBody_in_entryRuleBody1697);
            iv_ruleBody=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBody; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBody1707); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBody"


    // $ANTLR start "ruleBody"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:891:1: ruleBody returns [EObject current=null] : ( () otherlv_1= '{' ( (lv_declarations_2_0= ruleDeclaration ) )* ( (lv_statements_3_0= ruleLabelOrStatement ) )* otherlv_4= '}' ) ;
    public final EObject ruleBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_declarations_2_0 = null;

        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:894:28: ( ( () otherlv_1= '{' ( (lv_declarations_2_0= ruleDeclaration ) )* ( (lv_statements_3_0= ruleLabelOrStatement ) )* otherlv_4= '}' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:895:1: ( () otherlv_1= '{' ( (lv_declarations_2_0= ruleDeclaration ) )* ( (lv_statements_3_0= ruleLabelOrStatement ) )* otherlv_4= '}' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:895:1: ( () otherlv_1= '{' ( (lv_declarations_2_0= ruleDeclaration ) )* ( (lv_statements_3_0= ruleLabelOrStatement ) )* otherlv_4= '}' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:895:2: () otherlv_1= '{' ( (lv_declarations_2_0= ruleDeclaration ) )* ( (lv_statements_3_0= ruleLabelOrStatement ) )* otherlv_4= '}'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:895:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:896:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBodyAccess().getBodyAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,22,FOLLOW_22_in_ruleBody1756); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:908:1: ( (lv_declarations_2_0= ruleDeclaration ) )*
            loop16:
            do {
                int alt16=2;
                alt16 = dfa16.predict(input);
                switch (alt16) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:909:1: (lv_declarations_2_0= ruleDeclaration )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:909:1: (lv_declarations_2_0= ruleDeclaration )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:910:3: lv_declarations_2_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBodyAccess().getDeclarationsDeclarationParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleDeclaration_in_ruleBody1777);
            	    lv_declarations_2_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBodyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarations",
            	              		lv_declarations_2_0, 
            	              		"Declaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:926:3: ( (lv_statements_3_0= ruleLabelOrStatement ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( ((LA17_0>=RULE_ID && LA17_0<=RULE_LABELNAME)||LA17_0==29||(LA17_0>=32 && LA17_0<=34)||(LA17_0>=36 && LA17_0<=41)||LA17_0==61||(LA17_0>=64 && LA17_0<=65)||(LA17_0>=67 && LA17_0<=68)||LA17_0==77||LA17_0==84) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:927:1: (lv_statements_3_0= ruleLabelOrStatement )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:927:1: (lv_statements_3_0= ruleLabelOrStatement )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:928:3: lv_statements_3_0= ruleLabelOrStatement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBodyAccess().getStatementsLabelOrStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleLabelOrStatement_in_ruleBody1799);
            	    lv_statements_3_0=ruleLabelOrStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBodyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"LabelOrStatement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            otherlv_4=(Token)match(input,23,FOLLOW_23_in_ruleBody1812); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBody"


    // $ANTLR start "entryRuleStatementSequence"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:956:1: entryRuleStatementSequence returns [EObject current=null] : iv_ruleStatementSequence= ruleStatementSequence EOF ;
    public final EObject entryRuleStatementSequence() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatementSequence = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:957:2: (iv_ruleStatementSequence= ruleStatementSequence EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:958:2: iv_ruleStatementSequence= ruleStatementSequence EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementSequenceRule()); 
            }
            pushFollow(FOLLOW_ruleStatementSequence_in_entryRuleStatementSequence1848);
            iv_ruleStatementSequence=ruleStatementSequence();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatementSequence; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatementSequence1858); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatementSequence"


    // $ANTLR start "ruleStatementSequence"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:965:1: ruleStatementSequence returns [EObject current=null] : ( (lv_statements_0_0= ruleLabelOrStatement ) )+ ;
    public final EObject ruleStatementSequence() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:968:28: ( ( (lv_statements_0_0= ruleLabelOrStatement ) )+ )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:969:1: ( (lv_statements_0_0= ruleLabelOrStatement ) )+
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:969:1: ( (lv_statements_0_0= ruleLabelOrStatement ) )+
            int cnt18=0;
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( ((LA18_0>=RULE_ID && LA18_0<=RULE_LABELNAME)||LA18_0==29||(LA18_0>=32 && LA18_0<=34)||(LA18_0>=36 && LA18_0<=41)||LA18_0==61||(LA18_0>=64 && LA18_0<=65)||(LA18_0>=67 && LA18_0<=68)||LA18_0==77||LA18_0==84) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:970:1: (lv_statements_0_0= ruleLabelOrStatement )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:970:1: (lv_statements_0_0= ruleLabelOrStatement )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:971:3: lv_statements_0_0= ruleLabelOrStatement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStatementSequenceAccess().getStatementsLabelOrStatementParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleLabelOrStatement_in_ruleStatementSequence1903);
            	    lv_statements_0_0=ruleLabelOrStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStatementSequenceRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_0_0, 
            	              		"LabelOrStatement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt18 >= 1 ) break loop18;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(18, input);
                        throw eee;
                }
                cnt18++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatementSequence"


    // $ANTLR start "entryRuleDeclaration"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:995:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:996:2: (iv_ruleDeclaration= ruleDeclaration EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:997:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_ruleDeclaration_in_entryRuleDeclaration1939);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDeclaration1949); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1004:1: ruleDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleQualifiedName ) ) ( (lv_locals_1_0= RULE_ID ) ) (otherlv_2= ',' ( (lv_locals_3_0= RULE_ID ) ) )* otherlv_4= ';' ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_locals_1_0=null;
        Token otherlv_2=null;
        Token lv_locals_3_0=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1007:28: ( ( ( (lv_type_0_0= ruleQualifiedName ) ) ( (lv_locals_1_0= RULE_ID ) ) (otherlv_2= ',' ( (lv_locals_3_0= RULE_ID ) ) )* otherlv_4= ';' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1008:1: ( ( (lv_type_0_0= ruleQualifiedName ) ) ( (lv_locals_1_0= RULE_ID ) ) (otherlv_2= ',' ( (lv_locals_3_0= RULE_ID ) ) )* otherlv_4= ';' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1008:1: ( ( (lv_type_0_0= ruleQualifiedName ) ) ( (lv_locals_1_0= RULE_ID ) ) (otherlv_2= ',' ( (lv_locals_3_0= RULE_ID ) ) )* otherlv_4= ';' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1008:2: ( (lv_type_0_0= ruleQualifiedName ) ) ( (lv_locals_1_0= RULE_ID ) ) (otherlv_2= ',' ( (lv_locals_3_0= RULE_ID ) ) )* otherlv_4= ';'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1008:2: ( (lv_type_0_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1009:1: (lv_type_0_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1009:1: (lv_type_0_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1010:3: lv_type_0_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDeclarationAccess().getTypeQualifiedNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleDeclaration1995);
            lv_type_0_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1026:2: ( (lv_locals_1_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1027:1: (lv_locals_1_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1027:1: (lv_locals_1_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1028:3: lv_locals_1_0= RULE_ID
            {
            lv_locals_1_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleDeclaration2012); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_locals_1_0, grammarAccess.getDeclarationAccess().getLocalsIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDeclarationRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"locals",
                      		lv_locals_1_0, 
                      		"ID");
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1044:2: (otherlv_2= ',' ( (lv_locals_3_0= RULE_ID ) ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==21) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1044:4: otherlv_2= ',' ( (lv_locals_3_0= RULE_ID ) )
            	    {
            	    otherlv_2=(Token)match(input,21,FOLLOW_21_in_ruleDeclaration2030); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getDeclarationAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1048:1: ( (lv_locals_3_0= RULE_ID ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1049:1: (lv_locals_3_0= RULE_ID )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1049:1: (lv_locals_3_0= RULE_ID )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1050:3: lv_locals_3_0= RULE_ID
            	    {
            	    lv_locals_3_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleDeclaration2047); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_locals_3_0, grammarAccess.getDeclarationAccess().getLocalsIDTerminalRuleCall_2_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getDeclarationRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"locals",
            	              		lv_locals_3_0, 
            	              		"ID");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            otherlv_4=(Token)match(input,25,FOLLOW_25_in_ruleDeclaration2066); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getSemicolonKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleLabelOrStatement"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1078:1: entryRuleLabelOrStatement returns [EObject current=null] : iv_ruleLabelOrStatement= ruleLabelOrStatement EOF ;
    public final EObject entryRuleLabelOrStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabelOrStatement = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1079:2: (iv_ruleLabelOrStatement= ruleLabelOrStatement EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1080:2: iv_ruleLabelOrStatement= ruleLabelOrStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelOrStatementRule()); 
            }
            pushFollow(FOLLOW_ruleLabelOrStatement_in_entryRuleLabelOrStatement2102);
            iv_ruleLabelOrStatement=ruleLabelOrStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabelOrStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabelOrStatement2112); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabelOrStatement"


    // $ANTLR start "ruleLabelOrStatement"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1087:1: ruleLabelOrStatement returns [EObject current=null] : (this_Label_0= ruleLabel | (this_Statement_1= ruleStatement otherlv_2= ';' ) ) ;
    public final EObject ruleLabelOrStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_Label_0 = null;

        EObject this_Statement_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1090:28: ( (this_Label_0= ruleLabel | (this_Statement_1= ruleStatement otherlv_2= ';' ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1091:1: (this_Label_0= ruleLabel | (this_Statement_1= ruleStatement otherlv_2= ';' ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1091:1: (this_Label_0= ruleLabel | (this_Statement_1= ruleStatement otherlv_2= ';' ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_LABELNAME) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_ID||LA20_0==29||(LA20_0>=32 && LA20_0<=34)||(LA20_0>=36 && LA20_0<=41)||LA20_0==61||(LA20_0>=64 && LA20_0<=65)||(LA20_0>=67 && LA20_0<=68)||LA20_0==77||LA20_0==84) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1092:2: this_Label_0= ruleLabel
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLabelOrStatementAccess().getLabelParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLabel_in_ruleLabelOrStatement2162);
                    this_Label_0=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Label_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1104:6: (this_Statement_1= ruleStatement otherlv_2= ';' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1104:6: (this_Statement_1= ruleStatement otherlv_2= ';' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1105:2: this_Statement_1= ruleStatement otherlv_2= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLabelOrStatementAccess().getStatementParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleStatement_in_ruleLabelOrStatement2193);
                    this_Statement_1=ruleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Statement_1; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_2=(Token)match(input,25,FOLLOW_25_in_ruleLabelOrStatement2204); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getLabelOrStatementAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabelOrStatement"


    // $ANTLR start "entryRuleStatement"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1128:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1129:2: (iv_ruleStatement= ruleStatement EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1130:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_ruleStatement_in_entryRuleStatement2241);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatement2251); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1137:1: ruleStatement returns [EObject current=null] : (this_BreakpointStmt_0= ruleBreakpointStmt | this_DefinitionStmt_1= ruleDefinitionStmt | this_GotoStmt_2= ruleGotoStmt | this_IfStmt_3= ruleIfStmt | this_InvokeStmt_4= ruleInvokeStmt | this_LookupSwitchStmt_5= ruleLookupSwitchStmt | this_MonitorStmt_6= ruleMonitorStmt | this_NopStmt_7= ruleNopStmt | this_RetStmt_8= ruleRetStmt | this_ReturnVoidStmt_9= ruleReturnVoidStmt | this_ReturnStmt_10= ruleReturnStmt | this_TableSwitchStmt_11= ruleTableSwitchStmt ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_BreakpointStmt_0 = null;

        EObject this_DefinitionStmt_1 = null;

        EObject this_GotoStmt_2 = null;

        EObject this_IfStmt_3 = null;

        EObject this_InvokeStmt_4 = null;

        EObject this_LookupSwitchStmt_5 = null;

        EObject this_MonitorStmt_6 = null;

        EObject this_NopStmt_7 = null;

        EObject this_RetStmt_8 = null;

        EObject this_ReturnVoidStmt_9 = null;

        EObject this_ReturnStmt_10 = null;

        EObject this_TableSwitchStmt_11 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1140:28: ( (this_BreakpointStmt_0= ruleBreakpointStmt | this_DefinitionStmt_1= ruleDefinitionStmt | this_GotoStmt_2= ruleGotoStmt | this_IfStmt_3= ruleIfStmt | this_InvokeStmt_4= ruleInvokeStmt | this_LookupSwitchStmt_5= ruleLookupSwitchStmt | this_MonitorStmt_6= ruleMonitorStmt | this_NopStmt_7= ruleNopStmt | this_RetStmt_8= ruleRetStmt | this_ReturnVoidStmt_9= ruleReturnVoidStmt | this_ReturnStmt_10= ruleReturnStmt | this_TableSwitchStmt_11= ruleTableSwitchStmt ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1141:1: (this_BreakpointStmt_0= ruleBreakpointStmt | this_DefinitionStmt_1= ruleDefinitionStmt | this_GotoStmt_2= ruleGotoStmt | this_IfStmt_3= ruleIfStmt | this_InvokeStmt_4= ruleInvokeStmt | this_LookupSwitchStmt_5= ruleLookupSwitchStmt | this_MonitorStmt_6= ruleMonitorStmt | this_NopStmt_7= ruleNopStmt | this_RetStmt_8= ruleRetStmt | this_ReturnVoidStmt_9= ruleReturnVoidStmt | this_ReturnStmt_10= ruleReturnStmt | this_TableSwitchStmt_11= ruleTableSwitchStmt )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1141:1: (this_BreakpointStmt_0= ruleBreakpointStmt | this_DefinitionStmt_1= ruleDefinitionStmt | this_GotoStmt_2= ruleGotoStmt | this_IfStmt_3= ruleIfStmt | this_InvokeStmt_4= ruleInvokeStmt | this_LookupSwitchStmt_5= ruleLookupSwitchStmt | this_MonitorStmt_6= ruleMonitorStmt | this_NopStmt_7= ruleNopStmt | this_RetStmt_8= ruleRetStmt | this_ReturnVoidStmt_9= ruleReturnVoidStmt | this_ReturnStmt_10= ruleReturnStmt | this_TableSwitchStmt_11= ruleTableSwitchStmt )
            int alt21=12;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1142:2: this_BreakpointStmt_0= ruleBreakpointStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getBreakpointStmtParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleBreakpointStmt_in_ruleStatement2301);
                    this_BreakpointStmt_0=ruleBreakpointStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BreakpointStmt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1155:2: this_DefinitionStmt_1= ruleDefinitionStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getDefinitionStmtParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleDefinitionStmt_in_ruleStatement2331);
                    this_DefinitionStmt_1=ruleDefinitionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DefinitionStmt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1168:2: this_GotoStmt_2= ruleGotoStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getGotoStmtParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleGotoStmt_in_ruleStatement2361);
                    this_GotoStmt_2=ruleGotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_GotoStmt_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1181:2: this_IfStmt_3= ruleIfStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleIfStmt_in_ruleStatement2391);
                    this_IfStmt_3=ruleIfStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IfStmt_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1194:2: this_InvokeStmt_4= ruleInvokeStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getInvokeStmtParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleInvokeStmt_in_ruleStatement2421);
                    this_InvokeStmt_4=ruleInvokeStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InvokeStmt_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1207:2: this_LookupSwitchStmt_5= ruleLookupSwitchStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getLookupSwitchStmtParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLookupSwitchStmt_in_ruleStatement2451);
                    this_LookupSwitchStmt_5=ruleLookupSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LookupSwitchStmt_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1220:2: this_MonitorStmt_6= ruleMonitorStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getMonitorStmtParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleMonitorStmt_in_ruleStatement2481);
                    this_MonitorStmt_6=ruleMonitorStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_MonitorStmt_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1233:2: this_NopStmt_7= ruleNopStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getNopStmtParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNopStmt_in_ruleStatement2511);
                    this_NopStmt_7=ruleNopStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NopStmt_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1246:2: this_RetStmt_8= ruleRetStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getRetStmtParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRetStmt_in_ruleStatement2541);
                    this_RetStmt_8=ruleRetStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RetStmt_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1259:2: this_ReturnVoidStmt_9= ruleReturnVoidStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getReturnVoidStmtParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_ruleReturnVoidStmt_in_ruleStatement2571);
                    this_ReturnVoidStmt_9=ruleReturnVoidStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReturnVoidStmt_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1272:2: this_ReturnStmt_10= ruleReturnStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_ruleReturnStmt_in_ruleStatement2601);
                    this_ReturnStmt_10=ruleReturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReturnStmt_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1285:2: this_TableSwitchStmt_11= ruleTableSwitchStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getTableSwitchStmtParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_ruleTableSwitchStmt_in_ruleStatement2631);
                    this_TableSwitchStmt_11=ruleTableSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TableSwitchStmt_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleLabel"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1304:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1305:2: (iv_ruleLabel= ruleLabel EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1306:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FOLLOW_ruleLabel_in_entryRuleLabel2666);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLabel2676); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1313:1: ruleLabel returns [EObject current=null] : ( ( (lv_name_0_0= RULE_LABELNAME ) ) otherlv_1= ':' ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1316:28: ( ( ( (lv_name_0_0= RULE_LABELNAME ) ) otherlv_1= ':' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1317:1: ( ( (lv_name_0_0= RULE_LABELNAME ) ) otherlv_1= ':' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1317:1: ( ( (lv_name_0_0= RULE_LABELNAME ) ) otherlv_1= ':' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1317:2: ( (lv_name_0_0= RULE_LABELNAME ) ) otherlv_1= ':'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1317:2: ( (lv_name_0_0= RULE_LABELNAME ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1318:1: (lv_name_0_0= RULE_LABELNAME )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1318:1: (lv_name_0_0= RULE_LABELNAME )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1319:3: lv_name_0_0= RULE_LABELNAME
            {
            lv_name_0_0=(Token)match(input,RULE_LABELNAME,FOLLOW_RULE_LABELNAME_in_ruleLabel2718); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getLabelAccess().getNameLABELNAMETerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getLabelRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"LABELNAME");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,28,FOLLOW_28_in_ruleLabel2735); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getColonKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleBreakpointStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1347:1: entryRuleBreakpointStmt returns [EObject current=null] : iv_ruleBreakpointStmt= ruleBreakpointStmt EOF ;
    public final EObject entryRuleBreakpointStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakpointStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1348:2: (iv_ruleBreakpointStmt= ruleBreakpointStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1349:2: iv_ruleBreakpointStmt= ruleBreakpointStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakpointStmtRule()); 
            }
            pushFollow(FOLLOW_ruleBreakpointStmt_in_entryRuleBreakpointStmt2771);
            iv_ruleBreakpointStmt=ruleBreakpointStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakpointStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBreakpointStmt2781); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBreakpointStmt"


    // $ANTLR start "ruleBreakpointStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1356:1: ruleBreakpointStmt returns [EObject current=null] : ( () otherlv_1= 'breakpoint' ) ;
    public final EObject ruleBreakpointStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1359:28: ( ( () otherlv_1= 'breakpoint' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1360:1: ( () otherlv_1= 'breakpoint' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1360:1: ( () otherlv_1= 'breakpoint' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1360:2: () otherlv_1= 'breakpoint'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1360:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1361:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreakpointStmtAccess().getBreakpointStmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,29,FOLLOW_29_in_ruleBreakpointStmt2830); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreakpointStmtAccess().getBreakpointKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBreakpointStmt"


    // $ANTLR start "entryRuleDefinitionStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1381:1: entryRuleDefinitionStmt returns [EObject current=null] : iv_ruleDefinitionStmt= ruleDefinitionStmt EOF ;
    public final EObject entryRuleDefinitionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1382:2: (iv_ruleDefinitionStmt= ruleDefinitionStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1383:2: iv_ruleDefinitionStmt= ruleDefinitionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionStmtRule()); 
            }
            pushFollow(FOLLOW_ruleDefinitionStmt_in_entryRuleDefinitionStmt2866);
            iv_ruleDefinitionStmt=ruleDefinitionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDefinitionStmt2876); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionStmt"


    // $ANTLR start "ruleDefinitionStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1390:1: ruleDefinitionStmt returns [EObject current=null] : (this_AssignStmt_0= ruleAssignStmt | this_IdentityStmt_1= ruleIdentityStmt ) ;
    public final EObject ruleDefinitionStmt() throws RecognitionException {
        EObject current = null;

        EObject this_AssignStmt_0 = null;

        EObject this_IdentityStmt_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1393:28: ( (this_AssignStmt_0= ruleAssignStmt | this_IdentityStmt_1= ruleIdentityStmt ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1394:1: (this_AssignStmt_0= ruleAssignStmt | this_IdentityStmt_1= ruleIdentityStmt )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1394:1: (this_AssignStmt_0= ruleAssignStmt | this_IdentityStmt_1= ruleIdentityStmt )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID) ) {
                int LA22_1 = input.LA(2);

                if ( (LA22_1==31) ) {
                    alt22=2;
                }
                else if ( (LA22_1==30||LA22_1==66||LA22_1==73) ) {
                    alt22=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA22_0==61||LA22_0==77||LA22_0==84) ) {
                alt22=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1395:2: this_AssignStmt_0= ruleAssignStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionStmtAccess().getAssignStmtParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAssignStmt_in_ruleDefinitionStmt2926);
                    this_AssignStmt_0=ruleAssignStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AssignStmt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1408:2: this_IdentityStmt_1= ruleIdentityStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionStmtAccess().getIdentityStmtParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleIdentityStmt_in_ruleDefinitionStmt2956);
                    this_IdentityStmt_1=ruleIdentityStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IdentityStmt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionStmt"


    // $ANTLR start "entryRuleAssignStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1427:1: entryRuleAssignStmt returns [EObject current=null] : iv_ruleAssignStmt= ruleAssignStmt EOF ;
    public final EObject entryRuleAssignStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1428:2: (iv_ruleAssignStmt= ruleAssignStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1429:2: iv_ruleAssignStmt= ruleAssignStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignStmtRule()); 
            }
            pushFollow(FOLLOW_ruleAssignStmt_in_entryRuleAssignStmt2991);
            iv_ruleAssignStmt=ruleAssignStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssignStmt3001); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignStmt"


    // $ANTLR start "ruleAssignStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1436:1: ruleAssignStmt returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleRef ) ) otherlv_1= '=' ( (lv_rhs_2_0= ruleValue ) ) ) ;
    public final EObject ruleAssignStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1439:28: ( ( ( (lv_lhs_0_0= ruleRef ) ) otherlv_1= '=' ( (lv_rhs_2_0= ruleValue ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1440:1: ( ( (lv_lhs_0_0= ruleRef ) ) otherlv_1= '=' ( (lv_rhs_2_0= ruleValue ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1440:1: ( ( (lv_lhs_0_0= ruleRef ) ) otherlv_1= '=' ( (lv_rhs_2_0= ruleValue ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1440:2: ( (lv_lhs_0_0= ruleRef ) ) otherlv_1= '=' ( (lv_rhs_2_0= ruleValue ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1440:2: ( (lv_lhs_0_0= ruleRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1441:1: (lv_lhs_0_0= ruleRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1441:1: (lv_lhs_0_0= ruleRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1442:3: lv_lhs_0_0= ruleRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignStmtAccess().getLhsRefParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleRef_in_ruleAssignStmt3047);
            lv_lhs_0_0=ruleRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignStmtRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"Ref");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_30_in_ruleAssignStmt3059); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAssignStmtAccess().getEqualsSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1462:1: ( (lv_rhs_2_0= ruleValue ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1463:1: (lv_rhs_2_0= ruleValue )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1463:1: (lv_rhs_2_0= ruleValue )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1464:3: lv_rhs_2_0= ruleValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignStmtAccess().getRhsValueParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValue_in_ruleAssignStmt3080);
            lv_rhs_2_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignStmtRule());
              	        }
                     		set(
                     			current, 
                     			"rhs",
                      		lv_rhs_2_0, 
                      		"Value");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignStmt"


    // $ANTLR start "entryRuleIdentityStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1488:1: entryRuleIdentityStmt returns [EObject current=null] : iv_ruleIdentityStmt= ruleIdentityStmt EOF ;
    public final EObject entryRuleIdentityStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1489:2: (iv_ruleIdentityStmt= ruleIdentityStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1490:2: iv_ruleIdentityStmt= ruleIdentityStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityStmtRule()); 
            }
            pushFollow(FOLLOW_ruleIdentityStmt_in_entryRuleIdentityStmt3116);
            iv_ruleIdentityStmt=ruleIdentityStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIdentityStmt3126); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityStmt"


    // $ANTLR start "ruleIdentityStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1497:1: ruleIdentityStmt returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleLocal ) ) otherlv_1= ':=' ( (lv_rhs_2_0= ruleIdentityRef ) ) ) ;
    public final EObject ruleIdentityStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1500:28: ( ( ( (lv_lhs_0_0= ruleLocal ) ) otherlv_1= ':=' ( (lv_rhs_2_0= ruleIdentityRef ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1501:1: ( ( (lv_lhs_0_0= ruleLocal ) ) otherlv_1= ':=' ( (lv_rhs_2_0= ruleIdentityRef ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1501:1: ( ( (lv_lhs_0_0= ruleLocal ) ) otherlv_1= ':=' ( (lv_rhs_2_0= ruleIdentityRef ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1501:2: ( (lv_lhs_0_0= ruleLocal ) ) otherlv_1= ':=' ( (lv_rhs_2_0= ruleIdentityRef ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1501:2: ( (lv_lhs_0_0= ruleLocal ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1502:1: (lv_lhs_0_0= ruleLocal )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1502:1: (lv_lhs_0_0= ruleLocal )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1503:3: lv_lhs_0_0= ruleLocal
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentityStmtAccess().getLhsLocalParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocal_in_ruleIdentityStmt3172);
            lv_lhs_0_0=ruleLocal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIdentityStmtRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"Local");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,31,FOLLOW_31_in_ruleIdentityStmt3184); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIdentityStmtAccess().getColonEqualsSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1523:1: ( (lv_rhs_2_0= ruleIdentityRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1524:1: (lv_rhs_2_0= ruleIdentityRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1524:1: (lv_rhs_2_0= ruleIdentityRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1525:3: lv_rhs_2_0= ruleIdentityRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentityStmtAccess().getRhsIdentityRefParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleIdentityRef_in_ruleIdentityStmt3205);
            lv_rhs_2_0=ruleIdentityRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIdentityStmtRule());
              	        }
                     		set(
                     			current, 
                     			"rhs",
                      		lv_rhs_2_0, 
                      		"IdentityRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityStmt"


    // $ANTLR start "entryRuleGotoStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1549:1: entryRuleGotoStmt returns [EObject current=null] : iv_ruleGotoStmt= ruleGotoStmt EOF ;
    public final EObject entryRuleGotoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGotoStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1550:2: (iv_ruleGotoStmt= ruleGotoStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1551:2: iv_ruleGotoStmt= ruleGotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_ruleGotoStmt_in_entryRuleGotoStmt3241);
            iv_ruleGotoStmt=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGotoStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGotoStmt3251); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGotoStmt"


    // $ANTLR start "ruleGotoStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1558:1: ruleGotoStmt returns [EObject current=null] : (otherlv_0= 'goto' ( (lv_target_1_0= RULE_LABELNAME ) ) ) ;
    public final EObject ruleGotoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_target_1_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1561:28: ( (otherlv_0= 'goto' ( (lv_target_1_0= RULE_LABELNAME ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1562:1: (otherlv_0= 'goto' ( (lv_target_1_0= RULE_LABELNAME ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1562:1: (otherlv_0= 'goto' ( (lv_target_1_0= RULE_LABELNAME ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1562:3: otherlv_0= 'goto' ( (lv_target_1_0= RULE_LABELNAME ) )
            {
            otherlv_0=(Token)match(input,32,FOLLOW_32_in_ruleGotoStmt3288); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1566:1: ( (lv_target_1_0= RULE_LABELNAME ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1567:1: (lv_target_1_0= RULE_LABELNAME )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1567:1: (lv_target_1_0= RULE_LABELNAME )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1568:3: lv_target_1_0= RULE_LABELNAME
            {
            lv_target_1_0=(Token)match(input,RULE_LABELNAME,FOLLOW_RULE_LABELNAME_in_ruleGotoStmt3305); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_target_1_0, grammarAccess.getGotoStmtAccess().getTargetLABELNAMETerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getGotoStmtRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"LABELNAME");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGotoStmt"


    // $ANTLR start "entryRuleIfStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1592:1: entryRuleIfStmt returns [EObject current=null] : iv_ruleIfStmt= ruleIfStmt EOF ;
    public final EObject entryRuleIfStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1593:2: (iv_ruleIfStmt= ruleIfStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1594:2: iv_ruleIfStmt= ruleIfStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_ruleIfStmt_in_entryRuleIfStmt3346);
            iv_ruleIfStmt=ruleIfStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfStmt3356); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIfStmt"


    // $ANTLR start "ruleIfStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1601:1: ruleIfStmt returns [EObject current=null] : (otherlv_0= 'if' ( (lv_condition_1_0= ruleConditionalExpr ) ) ( (lv_then_2_0= ruleGotoStmt ) ) ) ;
    public final EObject ruleIfStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_condition_1_0 = null;

        EObject lv_then_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1604:28: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleConditionalExpr ) ) ( (lv_then_2_0= ruleGotoStmt ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1605:1: (otherlv_0= 'if' ( (lv_condition_1_0= ruleConditionalExpr ) ) ( (lv_then_2_0= ruleGotoStmt ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1605:1: (otherlv_0= 'if' ( (lv_condition_1_0= ruleConditionalExpr ) ) ( (lv_then_2_0= ruleGotoStmt ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1605:3: otherlv_0= 'if' ( (lv_condition_1_0= ruleConditionalExpr ) ) ( (lv_then_2_0= ruleGotoStmt ) )
            {
            otherlv_0=(Token)match(input,33,FOLLOW_33_in_ruleIfStmt3393); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1609:1: ( (lv_condition_1_0= ruleConditionalExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1610:1: (lv_condition_1_0= ruleConditionalExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1610:1: (lv_condition_1_0= ruleConditionalExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1611:3: lv_condition_1_0= ruleConditionalExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStmtAccess().getConditionConditionalExprParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleConditionalExpr_in_ruleIfStmt3414);
            lv_condition_1_0=ruleConditionalExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStmtRule());
              	        }
                     		set(
                     			current, 
                     			"condition",
                      		lv_condition_1_0, 
                      		"ConditionalExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1627:2: ( (lv_then_2_0= ruleGotoStmt ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1628:1: (lv_then_2_0= ruleGotoStmt )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1628:1: (lv_then_2_0= ruleGotoStmt )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1629:3: lv_then_2_0= ruleGotoStmt
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStmtAccess().getThenGotoStmtParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleGotoStmt_in_ruleIfStmt3435);
            lv_then_2_0=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStmtRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_2_0, 
                      		"GotoStmt");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIfStmt"


    // $ANTLR start "entryRuleInvokeStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1653:1: entryRuleInvokeStmt returns [EObject current=null] : iv_ruleInvokeStmt= ruleInvokeStmt EOF ;
    public final EObject entryRuleInvokeStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvokeStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1654:2: (iv_ruleInvokeStmt= ruleInvokeStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1655:2: iv_ruleInvokeStmt= ruleInvokeStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvokeStmtRule()); 
            }
            pushFollow(FOLLOW_ruleInvokeStmt_in_entryRuleInvokeStmt3471);
            iv_ruleInvokeStmt=ruleInvokeStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvokeStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInvokeStmt3481); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvokeStmt"


    // $ANTLR start "ruleInvokeStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1662:1: ruleInvokeStmt returns [EObject current=null] : ( (lv_invokeExpr_0_0= ruleInvokeExpr ) ) ;
    public final EObject ruleInvokeStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_invokeExpr_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1665:28: ( ( (lv_invokeExpr_0_0= ruleInvokeExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1666:1: ( (lv_invokeExpr_0_0= ruleInvokeExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1666:1: ( (lv_invokeExpr_0_0= ruleInvokeExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1667:1: (lv_invokeExpr_0_0= ruleInvokeExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1667:1: (lv_invokeExpr_0_0= ruleInvokeExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1668:3: lv_invokeExpr_0_0= ruleInvokeExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInvokeStmtAccess().getInvokeExprInvokeExprParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleInvokeExpr_in_ruleInvokeStmt3526);
            lv_invokeExpr_0_0=ruleInvokeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInvokeStmtRule());
              	        }
                     		set(
                     			current, 
                     			"invokeExpr",
                      		lv_invokeExpr_0_0, 
                      		"InvokeExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvokeStmt"


    // $ANTLR start "entryRuleTableSwitchStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1692:1: entryRuleTableSwitchStmt returns [EObject current=null] : iv_ruleTableSwitchStmt= ruleTableSwitchStmt EOF ;
    public final EObject entryRuleTableSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableSwitchStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1693:2: (iv_ruleTableSwitchStmt= ruleTableSwitchStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1694:2: iv_ruleTableSwitchStmt= ruleTableSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_ruleTableSwitchStmt_in_entryRuleTableSwitchStmt3561);
            iv_ruleTableSwitchStmt=ruleTableSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableSwitchStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleTableSwitchStmt3571); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableSwitchStmt"


    // $ANTLR start "ruleTableSwitchStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1701:1: ruleTableSwitchStmt returns [EObject current=null] : (otherlv_0= 'tableswitch' otherlv_1= '(' ( (lv_key_2_0= ruleLocal ) ) otherlv_3= ')' otherlv_4= '{' ( ( (lv_cases_5_0= ruleCase ) ) otherlv_6= ';' )* otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleGotoStmt ) ) otherlv_10= ';' otherlv_11= '}' ) ;
    public final EObject ruleTableSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_key_2_0 = null;

        EObject lv_cases_5_0 = null;

        EObject lv_default_9_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1704:28: ( (otherlv_0= 'tableswitch' otherlv_1= '(' ( (lv_key_2_0= ruleLocal ) ) otherlv_3= ')' otherlv_4= '{' ( ( (lv_cases_5_0= ruleCase ) ) otherlv_6= ';' )* otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleGotoStmt ) ) otherlv_10= ';' otherlv_11= '}' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1705:1: (otherlv_0= 'tableswitch' otherlv_1= '(' ( (lv_key_2_0= ruleLocal ) ) otherlv_3= ')' otherlv_4= '{' ( ( (lv_cases_5_0= ruleCase ) ) otherlv_6= ';' )* otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleGotoStmt ) ) otherlv_10= ';' otherlv_11= '}' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1705:1: (otherlv_0= 'tableswitch' otherlv_1= '(' ( (lv_key_2_0= ruleLocal ) ) otherlv_3= ')' otherlv_4= '{' ( ( (lv_cases_5_0= ruleCase ) ) otherlv_6= ';' )* otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleGotoStmt ) ) otherlv_10= ';' otherlv_11= '}' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1705:3: otherlv_0= 'tableswitch' otherlv_1= '(' ( (lv_key_2_0= ruleLocal ) ) otherlv_3= ')' otherlv_4= '{' ( ( (lv_cases_5_0= ruleCase ) ) otherlv_6= ';' )* otherlv_7= 'default' otherlv_8= ':' ( (lv_default_9_0= ruleGotoStmt ) ) otherlv_10= ';' otherlv_11= '}'
            {
            otherlv_0=(Token)match(input,34,FOLLOW_34_in_ruleTableSwitchStmt3608); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTableSwitchStmtAccess().getTableswitchKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,26,FOLLOW_26_in_ruleTableSwitchStmt3620); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTableSwitchStmtAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1713:1: ( (lv_key_2_0= ruleLocal ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1714:1: (lv_key_2_0= ruleLocal )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1714:1: (lv_key_2_0= ruleLocal )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1715:3: lv_key_2_0= ruleLocal
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTableSwitchStmtAccess().getKeyLocalParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocal_in_ruleTableSwitchStmt3641);
            lv_key_2_0=ruleLocal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTableSwitchStmtRule());
              	        }
                     		set(
                     			current, 
                     			"key",
                      		lv_key_2_0, 
                      		"Local");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,27,FOLLOW_27_in_ruleTableSwitchStmt3653); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTableSwitchStmtAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,22,FOLLOW_22_in_ruleTableSwitchStmt3665); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTableSwitchStmtAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1739:1: ( ( (lv_cases_5_0= ruleCase ) ) otherlv_6= ';' )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==42) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1739:2: ( (lv_cases_5_0= ruleCase ) ) otherlv_6= ';'
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1739:2: ( (lv_cases_5_0= ruleCase ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1740:1: (lv_cases_5_0= ruleCase )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1740:1: (lv_cases_5_0= ruleCase )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1741:3: lv_cases_5_0= ruleCase
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTableSwitchStmtAccess().getCasesCaseParserRuleCall_5_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleCase_in_ruleTableSwitchStmt3687);
            	    lv_cases_5_0=ruleCase();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTableSwitchStmtRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_5_0, 
            	              		"Case");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,25,FOLLOW_25_in_ruleTableSwitchStmt3699); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getTableSwitchStmtAccess().getSemicolonKeyword_5_1());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            otherlv_7=(Token)match(input,35,FOLLOW_35_in_ruleTableSwitchStmt3713); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getTableSwitchStmtAccess().getDefaultKeyword_6());
                  
            }
            otherlv_8=(Token)match(input,28,FOLLOW_28_in_ruleTableSwitchStmt3725); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getTableSwitchStmtAccess().getColonKeyword_7());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1769:1: ( (lv_default_9_0= ruleGotoStmt ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1770:1: (lv_default_9_0= ruleGotoStmt )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1770:1: (lv_default_9_0= ruleGotoStmt )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1771:3: lv_default_9_0= ruleGotoStmt
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTableSwitchStmtAccess().getDefaultGotoStmtParserRuleCall_8_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleGotoStmt_in_ruleTableSwitchStmt3746);
            lv_default_9_0=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTableSwitchStmtRule());
              	        }
                     		set(
                     			current, 
                     			"default",
                      		lv_default_9_0, 
                      		"GotoStmt");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_10=(Token)match(input,25,FOLLOW_25_in_ruleTableSwitchStmt3758); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getTableSwitchStmtAccess().getSemicolonKeyword_9());
                  
            }
            otherlv_11=(Token)match(input,23,FOLLOW_23_in_ruleTableSwitchStmt3770); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getTableSwitchStmtAccess().getRightCurlyBracketKeyword_10());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableSwitchStmt"


    // $ANTLR start "entryRuleLookupSwitchStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1803:1: entryRuleLookupSwitchStmt returns [EObject current=null] : iv_ruleLookupSwitchStmt= ruleLookupSwitchStmt EOF ;
    public final EObject entryRuleLookupSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupSwitchStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1804:2: (iv_ruleLookupSwitchStmt= ruleLookupSwitchStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1805:2: iv_ruleLookupSwitchStmt= ruleLookupSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_ruleLookupSwitchStmt_in_entryRuleLookupSwitchStmt3806);
            iv_ruleLookupSwitchStmt=ruleLookupSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupSwitchStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLookupSwitchStmt3816); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupSwitchStmt"


    // $ANTLR start "ruleLookupSwitchStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1812:1: ruleLookupSwitchStmt returns [EObject current=null] : ( () otherlv_1= 'lookupswitch' ) ;
    public final EObject ruleLookupSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1815:28: ( ( () otherlv_1= 'lookupswitch' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1816:1: ( () otherlv_1= 'lookupswitch' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1816:1: ( () otherlv_1= 'lookupswitch' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1816:2: () otherlv_1= 'lookupswitch'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1816:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1817:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getLookupSwitchStmtAccess().getLookupSwitchStmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,36,FOLLOW_36_in_ruleLookupSwitchStmt3865); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLookupSwitchStmtAccess().getLookupswitchKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupSwitchStmt"


    // $ANTLR start "entryRuleMonitorStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1837:1: entryRuleMonitorStmt returns [EObject current=null] : iv_ruleMonitorStmt= ruleMonitorStmt EOF ;
    public final EObject entryRuleMonitorStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMonitorStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1838:2: (iv_ruleMonitorStmt= ruleMonitorStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1839:2: iv_ruleMonitorStmt= ruleMonitorStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMonitorStmtRule()); 
            }
            pushFollow(FOLLOW_ruleMonitorStmt_in_entryRuleMonitorStmt3901);
            iv_ruleMonitorStmt=ruleMonitorStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMonitorStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMonitorStmt3911); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMonitorStmt"


    // $ANTLR start "ruleMonitorStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1846:1: ruleMonitorStmt returns [EObject current=null] : (this_EnterMonitorStmt_0= ruleEnterMonitorStmt | this_ExitMonitorStmt_1= ruleExitMonitorStmt ) ;
    public final EObject ruleMonitorStmt() throws RecognitionException {
        EObject current = null;

        EObject this_EnterMonitorStmt_0 = null;

        EObject this_ExitMonitorStmt_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1849:28: ( (this_EnterMonitorStmt_0= ruleEnterMonitorStmt | this_ExitMonitorStmt_1= ruleExitMonitorStmt ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1850:1: (this_EnterMonitorStmt_0= ruleEnterMonitorStmt | this_ExitMonitorStmt_1= ruleExitMonitorStmt )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1850:1: (this_EnterMonitorStmt_0= ruleEnterMonitorStmt | this_ExitMonitorStmt_1= ruleExitMonitorStmt )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==37) ) {
                alt24=1;
            }
            else if ( (LA24_0==38) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1851:2: this_EnterMonitorStmt_0= ruleEnterMonitorStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMonitorStmtAccess().getEnterMonitorStmtParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleEnterMonitorStmt_in_ruleMonitorStmt3961);
                    this_EnterMonitorStmt_0=ruleEnterMonitorStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnterMonitorStmt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1864:2: this_ExitMonitorStmt_1= ruleExitMonitorStmt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMonitorStmtAccess().getExitMonitorStmtParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleExitMonitorStmt_in_ruleMonitorStmt3991);
                    this_ExitMonitorStmt_1=ruleExitMonitorStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExitMonitorStmt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMonitorStmt"


    // $ANTLR start "entryRuleEnterMonitorStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1883:1: entryRuleEnterMonitorStmt returns [EObject current=null] : iv_ruleEnterMonitorStmt= ruleEnterMonitorStmt EOF ;
    public final EObject entryRuleEnterMonitorStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnterMonitorStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1884:2: (iv_ruleEnterMonitorStmt= ruleEnterMonitorStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1885:2: iv_ruleEnterMonitorStmt= ruleEnterMonitorStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnterMonitorStmtRule()); 
            }
            pushFollow(FOLLOW_ruleEnterMonitorStmt_in_entryRuleEnterMonitorStmt4026);
            iv_ruleEnterMonitorStmt=ruleEnterMonitorStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnterMonitorStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleEnterMonitorStmt4036); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnterMonitorStmt"


    // $ANTLR start "ruleEnterMonitorStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1892:1: ruleEnterMonitorStmt returns [EObject current=null] : (otherlv_0= 'entermonitor' ( (lv_operand_1_0= ruleValue ) ) ) ;
    public final EObject ruleEnterMonitorStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_operand_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1895:28: ( (otherlv_0= 'entermonitor' ( (lv_operand_1_0= ruleValue ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1896:1: (otherlv_0= 'entermonitor' ( (lv_operand_1_0= ruleValue ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1896:1: (otherlv_0= 'entermonitor' ( (lv_operand_1_0= ruleValue ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1896:3: otherlv_0= 'entermonitor' ( (lv_operand_1_0= ruleValue ) )
            {
            otherlv_0=(Token)match(input,37,FOLLOW_37_in_ruleEnterMonitorStmt4073); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEnterMonitorStmtAccess().getEntermonitorKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1900:1: ( (lv_operand_1_0= ruleValue ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1901:1: (lv_operand_1_0= ruleValue )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1901:1: (lv_operand_1_0= ruleValue )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1902:3: lv_operand_1_0= ruleValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEnterMonitorStmtAccess().getOperandValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValue_in_ruleEnterMonitorStmt4094);
            lv_operand_1_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEnterMonitorStmtRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_1_0, 
                      		"Value");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnterMonitorStmt"


    // $ANTLR start "entryRuleExitMonitorStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1926:1: entryRuleExitMonitorStmt returns [EObject current=null] : iv_ruleExitMonitorStmt= ruleExitMonitorStmt EOF ;
    public final EObject entryRuleExitMonitorStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExitMonitorStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1927:2: (iv_ruleExitMonitorStmt= ruleExitMonitorStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1928:2: iv_ruleExitMonitorStmt= ruleExitMonitorStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExitMonitorStmtRule()); 
            }
            pushFollow(FOLLOW_ruleExitMonitorStmt_in_entryRuleExitMonitorStmt4130);
            iv_ruleExitMonitorStmt=ruleExitMonitorStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExitMonitorStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleExitMonitorStmt4140); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExitMonitorStmt"


    // $ANTLR start "ruleExitMonitorStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1935:1: ruleExitMonitorStmt returns [EObject current=null] : (otherlv_0= 'exitmonitor' ( (lv_operand_1_0= ruleValue ) ) ) ;
    public final EObject ruleExitMonitorStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_operand_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1938:28: ( (otherlv_0= 'exitmonitor' ( (lv_operand_1_0= ruleValue ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1939:1: (otherlv_0= 'exitmonitor' ( (lv_operand_1_0= ruleValue ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1939:1: (otherlv_0= 'exitmonitor' ( (lv_operand_1_0= ruleValue ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1939:3: otherlv_0= 'exitmonitor' ( (lv_operand_1_0= ruleValue ) )
            {
            otherlv_0=(Token)match(input,38,FOLLOW_38_in_ruleExitMonitorStmt4177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExitMonitorStmtAccess().getExitmonitorKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1943:1: ( (lv_operand_1_0= ruleValue ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1944:1: (lv_operand_1_0= ruleValue )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1944:1: (lv_operand_1_0= ruleValue )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1945:3: lv_operand_1_0= ruleValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExitMonitorStmtAccess().getOperandValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValue_in_ruleExitMonitorStmt4198);
            lv_operand_1_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExitMonitorStmtRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_1_0, 
                      		"Value");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExitMonitorStmt"


    // $ANTLR start "entryRuleNopStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1969:1: entryRuleNopStmt returns [EObject current=null] : iv_ruleNopStmt= ruleNopStmt EOF ;
    public final EObject entryRuleNopStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNopStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1970:2: (iv_ruleNopStmt= ruleNopStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1971:2: iv_ruleNopStmt= ruleNopStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNopStmtRule()); 
            }
            pushFollow(FOLLOW_ruleNopStmt_in_entryRuleNopStmt4234);
            iv_ruleNopStmt=ruleNopStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNopStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNopStmt4244); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNopStmt"


    // $ANTLR start "ruleNopStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1978:1: ruleNopStmt returns [EObject current=null] : ( () otherlv_1= 'nop' ) ;
    public final EObject ruleNopStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1981:28: ( ( () otherlv_1= 'nop' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1982:1: ( () otherlv_1= 'nop' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1982:1: ( () otherlv_1= 'nop' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1982:2: () otherlv_1= 'nop'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1982:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:1983:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNopStmtAccess().getNopStmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,39,FOLLOW_39_in_ruleNopStmt4293); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNopStmtAccess().getNopKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNopStmt"


    // $ANTLR start "entryRuleRetStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2003:1: entryRuleRetStmt returns [EObject current=null] : iv_ruleRetStmt= ruleRetStmt EOF ;
    public final EObject entryRuleRetStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRetStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2004:2: (iv_ruleRetStmt= ruleRetStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2005:2: iv_ruleRetStmt= ruleRetStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRetStmtRule()); 
            }
            pushFollow(FOLLOW_ruleRetStmt_in_entryRuleRetStmt4329);
            iv_ruleRetStmt=ruleRetStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRetStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRetStmt4339); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRetStmt"


    // $ANTLR start "ruleRetStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2012:1: ruleRetStmt returns [EObject current=null] : (otherlv_0= 'ret' ( (lv_target_1_0= ruleLocal ) ) ) ;
    public final EObject ruleRetStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_target_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2015:28: ( (otherlv_0= 'ret' ( (lv_target_1_0= ruleLocal ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2016:1: (otherlv_0= 'ret' ( (lv_target_1_0= ruleLocal ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2016:1: (otherlv_0= 'ret' ( (lv_target_1_0= ruleLocal ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2016:3: otherlv_0= 'ret' ( (lv_target_1_0= ruleLocal ) )
            {
            otherlv_0=(Token)match(input,40,FOLLOW_40_in_ruleRetStmt4376); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRetStmtAccess().getRetKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2020:1: ( (lv_target_1_0= ruleLocal ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2021:1: (lv_target_1_0= ruleLocal )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2021:1: (lv_target_1_0= ruleLocal )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2022:3: lv_target_1_0= ruleLocal
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRetStmtAccess().getTargetLocalParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocal_in_ruleRetStmt4397);
            lv_target_1_0=ruleLocal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRetStmtRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"Local");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRetStmt"


    // $ANTLR start "entryRuleReturnVoidStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2046:1: entryRuleReturnVoidStmt returns [EObject current=null] : iv_ruleReturnVoidStmt= ruleReturnVoidStmt EOF ;
    public final EObject entryRuleReturnVoidStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnVoidStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2047:2: (iv_ruleReturnVoidStmt= ruleReturnVoidStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2048:2: iv_ruleReturnVoidStmt= ruleReturnVoidStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnVoidStmtRule()); 
            }
            pushFollow(FOLLOW_ruleReturnVoidStmt_in_entryRuleReturnVoidStmt4433);
            iv_ruleReturnVoidStmt=ruleReturnVoidStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnVoidStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleReturnVoidStmt4443); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnVoidStmt"


    // $ANTLR start "ruleReturnVoidStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2055:1: ruleReturnVoidStmt returns [EObject current=null] : ( () otherlv_1= 'return' ) ;
    public final EObject ruleReturnVoidStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2058:28: ( ( () otherlv_1= 'return' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2059:1: ( () otherlv_1= 'return' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2059:1: ( () otherlv_1= 'return' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2059:2: () otherlv_1= 'return'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2059:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2060:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturnVoidStmtAccess().getReturnVoidStmtAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,41,FOLLOW_41_in_ruleReturnVoidStmt4492); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturnVoidStmtAccess().getReturnKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnVoidStmt"


    // $ANTLR start "entryRuleReturnStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2080:1: entryRuleReturnStmt returns [EObject current=null] : iv_ruleReturnStmt= ruleReturnStmt EOF ;
    public final EObject entryRuleReturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStmt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2081:2: (iv_ruleReturnStmt= ruleReturnStmt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2082:2: iv_ruleReturnStmt= ruleReturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_ruleReturnStmt_in_entryRuleReturnStmt4528);
            iv_ruleReturnStmt=ruleReturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStmt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleReturnStmt4538); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturnStmt"


    // $ANTLR start "ruleReturnStmt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2089:1: ruleReturnStmt returns [EObject current=null] : (otherlv_0= 'return' ( (lv_operand_1_0= ruleValue ) ) ) ;
    public final EObject ruleReturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_operand_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2092:28: ( (otherlv_0= 'return' ( (lv_operand_1_0= ruleValue ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2093:1: (otherlv_0= 'return' ( (lv_operand_1_0= ruleValue ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2093:1: (otherlv_0= 'return' ( (lv_operand_1_0= ruleValue ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2093:3: otherlv_0= 'return' ( (lv_operand_1_0= ruleValue ) )
            {
            otherlv_0=(Token)match(input,41,FOLLOW_41_in_ruleReturnStmt4575); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getReturnStmtAccess().getReturnKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2097:1: ( (lv_operand_1_0= ruleValue ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2098:1: (lv_operand_1_0= ruleValue )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2098:1: (lv_operand_1_0= ruleValue )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2099:3: lv_operand_1_0= ruleValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReturnStmtAccess().getOperandValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValue_in_ruleReturnStmt4596);
            lv_operand_1_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReturnStmtRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_1_0, 
                      		"Value");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturnStmt"


    // $ANTLR start "entryRuleCase"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2123:1: entryRuleCase returns [EObject current=null] : iv_ruleCase= ruleCase EOF ;
    public final EObject entryRuleCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCase = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2124:2: (iv_ruleCase= ruleCase EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2125:2: iv_ruleCase= ruleCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseRule()); 
            }
            pushFollow(FOLLOW_ruleCase_in_entryRuleCase4632);
            iv_ruleCase=ruleCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCase; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCase4642); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCase"


    // $ANTLR start "ruleCase"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2132:1: ruleCase returns [EObject current=null] : (otherlv_0= 'case' ( (lv_value_1_0= RULE_INT ) ) otherlv_2= ':' ( (lv_target_3_0= ruleGotoStmt ) ) ) ;
    public final EObject ruleCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_value_1_0=null;
        Token otherlv_2=null;
        EObject lv_target_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2135:28: ( (otherlv_0= 'case' ( (lv_value_1_0= RULE_INT ) ) otherlv_2= ':' ( (lv_target_3_0= ruleGotoStmt ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2136:1: (otherlv_0= 'case' ( (lv_value_1_0= RULE_INT ) ) otherlv_2= ':' ( (lv_target_3_0= ruleGotoStmt ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2136:1: (otherlv_0= 'case' ( (lv_value_1_0= RULE_INT ) ) otherlv_2= ':' ( (lv_target_3_0= ruleGotoStmt ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2136:3: otherlv_0= 'case' ( (lv_value_1_0= RULE_INT ) ) otherlv_2= ':' ( (lv_target_3_0= ruleGotoStmt ) )
            {
            otherlv_0=(Token)match(input,42,FOLLOW_42_in_ruleCase4679); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseAccess().getCaseKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2140:1: ( (lv_value_1_0= RULE_INT ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2141:1: (lv_value_1_0= RULE_INT )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2141:1: (lv_value_1_0= RULE_INT )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2142:3: lv_value_1_0= RULE_INT
            {
            lv_value_1_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleCase4696); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getCaseAccess().getValueINTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getCaseRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"INT");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,28,FOLLOW_28_in_ruleCase4713); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseAccess().getColonKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2162:1: ( (lv_target_3_0= ruleGotoStmt ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2163:1: (lv_target_3_0= ruleGotoStmt )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2163:1: (lv_target_3_0= ruleGotoStmt )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2164:3: lv_target_3_0= ruleGotoStmt
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseAccess().getTargetGotoStmtParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleGotoStmt_in_ruleCase4734);
            lv_target_3_0=ruleGotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_3_0, 
                      		"GotoStmt");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCase"


    // $ANTLR start "entryRuleValue"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2190:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2191:2: (iv_ruleValue= ruleValue EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2192:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_ruleValue_in_entryRuleValue4772);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleValue4782); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2199:1: ruleValue returns [EObject current=null] : (this_NonExpr_0= ruleNonExpr | this_Expr_1= ruleExpr ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        EObject this_NonExpr_0 = null;

        EObject this_Expr_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2202:28: ( (this_NonExpr_0= ruleNonExpr | this_Expr_1= ruleExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2203:1: (this_NonExpr_0= ruleNonExpr | this_Expr_1= ruleExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2203:1: (this_NonExpr_0= ruleNonExpr | this_Expr_1= ruleExpr )
            int alt25=2;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2204:2: this_NonExpr_0= ruleNonExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getValueAccess().getNonExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNonExpr_in_ruleValue4832);
                    this_NonExpr_0=ruleNonExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NonExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2217:2: this_Expr_1= ruleExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getValueAccess().getExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleExpr_in_ruleValue4862);
                    this_Expr_1=ruleExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Expr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleNonExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2236:1: entryRuleNonExpr returns [EObject current=null] : iv_ruleNonExpr= ruleNonExpr EOF ;
    public final EObject entryRuleNonExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2237:2: (iv_ruleNonExpr= ruleNonExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2238:2: iv_ruleNonExpr= ruleNonExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNonExprRule()); 
            }
            pushFollow(FOLLOW_ruleNonExpr_in_entryRuleNonExpr4897);
            iv_ruleNonExpr=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNonExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNonExpr4907); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonExpr"


    // $ANTLR start "ruleNonExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2245:1: ruleNonExpr returns [EObject current=null] : (this_Constant_0= ruleConstant | this_Ref_1= ruleRef ) ;
    public final EObject ruleNonExpr() throws RecognitionException {
        EObject current = null;

        EObject this_Constant_0 = null;

        EObject this_Ref_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2248:28: ( (this_Constant_0= ruleConstant | this_Ref_1= ruleRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2249:1: (this_Constant_0= ruleConstant | this_Ref_1= ruleRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2249:1: (this_Constant_0= ruleConstant | this_Ref_1= ruleRef )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=RULE_INT && LA26_0<=RULE_STRING)||LA26_0==17||LA26_0==80) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_ID||LA26_0==61||LA26_0==77||LA26_0==84) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2250:2: this_Constant_0= ruleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNonExprAccess().getConstantParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleConstant_in_ruleNonExpr4957);
                    this_Constant_0=ruleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Constant_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2263:2: this_Ref_1= ruleRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNonExprAccess().getRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRef_in_ruleNonExpr4987);
                    this_Ref_1=ruleRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Ref_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonExpr"


    // $ANTLR start "entryRuleExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2282:1: entryRuleExpr returns [EObject current=null] : iv_ruleExpr= ruleExpr EOF ;
    public final EObject entryRuleExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2283:2: (iv_ruleExpr= ruleExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2284:2: iv_ruleExpr= ruleExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprRule()); 
            }
            pushFollow(FOLLOW_ruleExpr_in_entryRuleExpr5022);
            iv_ruleExpr=ruleExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpr5032); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpr"


    // $ANTLR start "ruleExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2291:1: ruleExpr returns [EObject current=null] : (this_AnyNewExpr_0= ruleAnyNewExpr | this_BinOpExpr_1= ruleBinOpExpr | this_CastExpr_2= ruleCastExpr | this_InstanceOfExpr_3= ruleInstanceOfExpr | this_InvokeExpr_4= ruleInvokeExpr | this_UnopExpr_5= ruleUnopExpr ) ;
    public final EObject ruleExpr() throws RecognitionException {
        EObject current = null;

        EObject this_AnyNewExpr_0 = null;

        EObject this_BinOpExpr_1 = null;

        EObject this_CastExpr_2 = null;

        EObject this_InstanceOfExpr_3 = null;

        EObject this_InvokeExpr_4 = null;

        EObject this_UnopExpr_5 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2294:28: ( (this_AnyNewExpr_0= ruleAnyNewExpr | this_BinOpExpr_1= ruleBinOpExpr | this_CastExpr_2= ruleCastExpr | this_InstanceOfExpr_3= ruleInstanceOfExpr | this_InvokeExpr_4= ruleInvokeExpr | this_UnopExpr_5= ruleUnopExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2295:1: (this_AnyNewExpr_0= ruleAnyNewExpr | this_BinOpExpr_1= ruleBinOpExpr | this_CastExpr_2= ruleCastExpr | this_InstanceOfExpr_3= ruleInstanceOfExpr | this_InvokeExpr_4= ruleInvokeExpr | this_UnopExpr_5= ruleUnopExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2295:1: (this_AnyNewExpr_0= ruleAnyNewExpr | this_BinOpExpr_1= ruleBinOpExpr | this_CastExpr_2= ruleCastExpr | this_InstanceOfExpr_3= ruleInstanceOfExpr | this_InvokeExpr_4= ruleInvokeExpr | this_UnopExpr_5= ruleUnopExpr )
            int alt27=6;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2296:2: this_AnyNewExpr_0= ruleAnyNewExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExprAccess().getAnyNewExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAnyNewExpr_in_ruleExpr5082);
                    this_AnyNewExpr_0=ruleAnyNewExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AnyNewExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2309:2: this_BinOpExpr_1= ruleBinOpExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExprAccess().getBinOpExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleBinOpExpr_in_ruleExpr5112);
                    this_BinOpExpr_1=ruleBinOpExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BinOpExpr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2322:2: this_CastExpr_2= ruleCastExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExprAccess().getCastExprParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleCastExpr_in_ruleExpr5142);
                    this_CastExpr_2=ruleCastExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CastExpr_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2335:2: this_InstanceOfExpr_3= ruleInstanceOfExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExprAccess().getInstanceOfExprParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleInstanceOfExpr_in_ruleExpr5172);
                    this_InstanceOfExpr_3=ruleInstanceOfExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InstanceOfExpr_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2348:2: this_InvokeExpr_4= ruleInvokeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExprAccess().getInvokeExprParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleInvokeExpr_in_ruleExpr5202);
                    this_InvokeExpr_4=ruleInvokeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InvokeExpr_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2361:2: this_UnopExpr_5= ruleUnopExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExprAccess().getUnopExprParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleUnopExpr_in_ruleExpr5232);
                    this_UnopExpr_5=ruleUnopExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnopExpr_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpr"


    // $ANTLR start "entryRuleAnyNewExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2380:1: entryRuleAnyNewExpr returns [EObject current=null] : iv_ruleAnyNewExpr= ruleAnyNewExpr EOF ;
    public final EObject entryRuleAnyNewExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyNewExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2381:2: (iv_ruleAnyNewExpr= ruleAnyNewExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2382:2: iv_ruleAnyNewExpr= ruleAnyNewExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyNewExprRule()); 
            }
            pushFollow(FOLLOW_ruleAnyNewExpr_in_entryRuleAnyNewExpr5267);
            iv_ruleAnyNewExpr=ruleAnyNewExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyNewExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAnyNewExpr5277); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyNewExpr"


    // $ANTLR start "ruleAnyNewExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2389:1: ruleAnyNewExpr returns [EObject current=null] : (this_NewArrayExpr_0= ruleNewArrayExpr | this_NewExpr_1= ruleNewExpr | this_NewMultiArrayExpr_2= ruleNewMultiArrayExpr ) ;
    public final EObject ruleAnyNewExpr() throws RecognitionException {
        EObject current = null;

        EObject this_NewArrayExpr_0 = null;

        EObject this_NewExpr_1 = null;

        EObject this_NewMultiArrayExpr_2 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2392:28: ( (this_NewArrayExpr_0= ruleNewArrayExpr | this_NewExpr_1= ruleNewExpr | this_NewMultiArrayExpr_2= ruleNewMultiArrayExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2393:1: (this_NewArrayExpr_0= ruleNewArrayExpr | this_NewExpr_1= ruleNewExpr | this_NewMultiArrayExpr_2= ruleNewMultiArrayExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2393:1: (this_NewArrayExpr_0= ruleNewArrayExpr | this_NewExpr_1= ruleNewExpr | this_NewMultiArrayExpr_2= ruleNewMultiArrayExpr )
            int alt28=3;
            switch ( input.LA(1) ) {
            case 69:
                {
                alt28=1;
                }
                break;
            case 70:
                {
                alt28=2;
                }
                break;
            case 71:
                {
                alt28=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2394:2: this_NewArrayExpr_0= ruleNewArrayExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnyNewExprAccess().getNewArrayExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNewArrayExpr_in_ruleAnyNewExpr5327);
                    this_NewArrayExpr_0=ruleNewArrayExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NewArrayExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2407:2: this_NewExpr_1= ruleNewExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnyNewExprAccess().getNewExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNewExpr_in_ruleAnyNewExpr5357);
                    this_NewExpr_1=ruleNewExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NewExpr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2420:2: this_NewMultiArrayExpr_2= ruleNewMultiArrayExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnyNewExprAccess().getNewMultiArrayExprParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNewMultiArrayExpr_in_ruleAnyNewExpr5387);
                    this_NewMultiArrayExpr_2=ruleNewMultiArrayExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NewMultiArrayExpr_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyNewExpr"


    // $ANTLR start "entryRuleBinOpExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2439:1: entryRuleBinOpExpr returns [EObject current=null] : iv_ruleBinOpExpr= ruleBinOpExpr EOF ;
    public final EObject entryRuleBinOpExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinOpExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2440:2: (iv_ruleBinOpExpr= ruleBinOpExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2441:2: iv_ruleBinOpExpr= ruleBinOpExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinOpExprRule()); 
            }
            pushFollow(FOLLOW_ruleBinOpExpr_in_entryRuleBinOpExpr5422);
            iv_ruleBinOpExpr=ruleBinOpExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinOpExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleBinOpExpr5432); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinOpExpr"


    // $ANTLR start "ruleBinOpExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2448:1: ruleBinOpExpr returns [EObject current=null] : (this_AddExpr_0= ruleAddExpr | this_AndExpr_1= ruleAndExpr | this_CmpExpr_2= ruleCmpExpr | this_CmpgExpr_3= ruleCmpgExpr | this_CmplExpr_4= ruleCmplExpr | this_ConditionalExpr_5= ruleConditionalExpr | this_DivExpr_6= ruleDivExpr | this_MulExpr_7= ruleMulExpr | this_OrExpr_8= ruleOrExpr | this_RemExpr_9= ruleRemExpr | this_ShlExpr_10= ruleShlExpr | this_ShrExpr_11= ruleShrExpr | this_SubExpr_12= ruleSubExpr | this_UshrExpr_13= ruleUshrExpr | this_XorExpr_14= ruleXorExpr ) ;
    public final EObject ruleBinOpExpr() throws RecognitionException {
        EObject current = null;

        EObject this_AddExpr_0 = null;

        EObject this_AndExpr_1 = null;

        EObject this_CmpExpr_2 = null;

        EObject this_CmpgExpr_3 = null;

        EObject this_CmplExpr_4 = null;

        EObject this_ConditionalExpr_5 = null;

        EObject this_DivExpr_6 = null;

        EObject this_MulExpr_7 = null;

        EObject this_OrExpr_8 = null;

        EObject this_RemExpr_9 = null;

        EObject this_ShlExpr_10 = null;

        EObject this_ShrExpr_11 = null;

        EObject this_SubExpr_12 = null;

        EObject this_UshrExpr_13 = null;

        EObject this_XorExpr_14 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2451:28: ( (this_AddExpr_0= ruleAddExpr | this_AndExpr_1= ruleAndExpr | this_CmpExpr_2= ruleCmpExpr | this_CmpgExpr_3= ruleCmpgExpr | this_CmplExpr_4= ruleCmplExpr | this_ConditionalExpr_5= ruleConditionalExpr | this_DivExpr_6= ruleDivExpr | this_MulExpr_7= ruleMulExpr | this_OrExpr_8= ruleOrExpr | this_RemExpr_9= ruleRemExpr | this_ShlExpr_10= ruleShlExpr | this_ShrExpr_11= ruleShrExpr | this_SubExpr_12= ruleSubExpr | this_UshrExpr_13= ruleUshrExpr | this_XorExpr_14= ruleXorExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2452:1: (this_AddExpr_0= ruleAddExpr | this_AndExpr_1= ruleAndExpr | this_CmpExpr_2= ruleCmpExpr | this_CmpgExpr_3= ruleCmpgExpr | this_CmplExpr_4= ruleCmplExpr | this_ConditionalExpr_5= ruleConditionalExpr | this_DivExpr_6= ruleDivExpr | this_MulExpr_7= ruleMulExpr | this_OrExpr_8= ruleOrExpr | this_RemExpr_9= ruleRemExpr | this_ShlExpr_10= ruleShlExpr | this_ShrExpr_11= ruleShrExpr | this_SubExpr_12= ruleSubExpr | this_UshrExpr_13= ruleUshrExpr | this_XorExpr_14= ruleXorExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2452:1: (this_AddExpr_0= ruleAddExpr | this_AndExpr_1= ruleAndExpr | this_CmpExpr_2= ruleCmpExpr | this_CmpgExpr_3= ruleCmpgExpr | this_CmplExpr_4= ruleCmplExpr | this_ConditionalExpr_5= ruleConditionalExpr | this_DivExpr_6= ruleDivExpr | this_MulExpr_7= ruleMulExpr | this_OrExpr_8= ruleOrExpr | this_RemExpr_9= ruleRemExpr | this_ShlExpr_10= ruleShlExpr | this_ShrExpr_11= ruleShrExpr | this_SubExpr_12= ruleSubExpr | this_UshrExpr_13= ruleUshrExpr | this_XorExpr_14= ruleXorExpr )
            int alt29=15;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2453:2: this_AddExpr_0= ruleAddExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getAddExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAddExpr_in_ruleBinOpExpr5482);
                    this_AddExpr_0=ruleAddExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AddExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2466:2: this_AndExpr_1= ruleAndExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getAndExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleAndExpr_in_ruleBinOpExpr5512);
                    this_AndExpr_1=ruleAndExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AndExpr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2479:2: this_CmpExpr_2= ruleCmpExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getCmpExprParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleCmpExpr_in_ruleBinOpExpr5542);
                    this_CmpExpr_2=ruleCmpExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CmpExpr_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2492:2: this_CmpgExpr_3= ruleCmpgExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getCmpgExprParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleCmpgExpr_in_ruleBinOpExpr5572);
                    this_CmpgExpr_3=ruleCmpgExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CmpgExpr_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2505:2: this_CmplExpr_4= ruleCmplExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getCmplExprParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleCmplExpr_in_ruleBinOpExpr5602);
                    this_CmplExpr_4=ruleCmplExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CmplExpr_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2518:2: this_ConditionalExpr_5= ruleConditionalExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getConditionalExprParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleConditionalExpr_in_ruleBinOpExpr5632);
                    this_ConditionalExpr_5=ruleConditionalExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConditionalExpr_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2531:2: this_DivExpr_6= ruleDivExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getDivExprParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_ruleDivExpr_in_ruleBinOpExpr5662);
                    this_DivExpr_6=ruleDivExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DivExpr_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2544:2: this_MulExpr_7= ruleMulExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getMulExprParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_ruleMulExpr_in_ruleBinOpExpr5692);
                    this_MulExpr_7=ruleMulExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_MulExpr_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2557:2: this_OrExpr_8= ruleOrExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getOrExprParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_ruleOrExpr_in_ruleBinOpExpr5722);
                    this_OrExpr_8=ruleOrExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OrExpr_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2570:2: this_RemExpr_9= ruleRemExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getRemExprParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_ruleRemExpr_in_ruleBinOpExpr5752);
                    this_RemExpr_9=ruleRemExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_RemExpr_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2583:2: this_ShlExpr_10= ruleShlExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getShlExprParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_ruleShlExpr_in_ruleBinOpExpr5782);
                    this_ShlExpr_10=ruleShlExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ShlExpr_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2596:2: this_ShrExpr_11= ruleShrExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getShrExprParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_ruleShrExpr_in_ruleBinOpExpr5812);
                    this_ShrExpr_11=ruleShrExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ShrExpr_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2609:2: this_SubExpr_12= ruleSubExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getSubExprParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_ruleSubExpr_in_ruleBinOpExpr5842);
                    this_SubExpr_12=ruleSubExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SubExpr_12; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2622:2: this_UshrExpr_13= ruleUshrExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getUshrExprParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_ruleUshrExpr_in_ruleBinOpExpr5872);
                    this_UshrExpr_13=ruleUshrExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UshrExpr_13; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2635:2: this_XorExpr_14= ruleXorExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBinOpExprAccess().getXorExprParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_ruleXorExpr_in_ruleBinOpExpr5902);
                    this_XorExpr_14=ruleXorExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_XorExpr_14; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinOpExpr"


    // $ANTLR start "entryRuleAddExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2654:1: entryRuleAddExpr returns [EObject current=null] : iv_ruleAddExpr= ruleAddExpr EOF ;
    public final EObject entryRuleAddExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2655:2: (iv_ruleAddExpr= ruleAddExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2656:2: iv_ruleAddExpr= ruleAddExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExprRule()); 
            }
            pushFollow(FOLLOW_ruleAddExpr_in_entryRuleAddExpr5937);
            iv_ruleAddExpr=ruleAddExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAddExpr5947); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpr"


    // $ANTLR start "ruleAddExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2663:1: ruleAddExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '+' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleAddExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2666:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '+' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2667:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '+' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2667:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '+' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2667:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '+' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2667:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2668:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2668:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2669:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAddExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleAddExpr5993);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAddExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,43,FOLLOW_43_in_ruleAddExpr6005); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAddExprAccess().getPlusSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2689:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2690:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2690:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2691:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAddExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleAddExpr6026);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAddExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpr"


    // $ANTLR start "entryRuleAndExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2715:1: entryRuleAndExpr returns [EObject current=null] : iv_ruleAndExpr= ruleAndExpr EOF ;
    public final EObject entryRuleAndExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2716:2: (iv_ruleAndExpr= ruleAndExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2717:2: iv_ruleAndExpr= ruleAndExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExprRule()); 
            }
            pushFollow(FOLLOW_ruleAndExpr_in_entryRuleAndExpr6062);
            iv_ruleAndExpr=ruleAndExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleAndExpr6072); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpr"


    // $ANTLR start "ruleAndExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2724:1: ruleAndExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '&' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleAndExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2727:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '&' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2728:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '&' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2728:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '&' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2728:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '&' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2728:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2729:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2729:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2730:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAndExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleAndExpr6118);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAndExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,44,FOLLOW_44_in_ruleAndExpr6130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAndExprAccess().getAmpersandKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2750:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2751:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2751:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2752:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAndExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleAndExpr6151);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAndExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpr"


    // $ANTLR start "entryRuleCmpExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2776:1: entryRuleCmpExpr returns [EObject current=null] : iv_ruleCmpExpr= ruleCmpExpr EOF ;
    public final EObject entryRuleCmpExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCmpExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2777:2: (iv_ruleCmpExpr= ruleCmpExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2778:2: iv_ruleCmpExpr= ruleCmpExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCmpExprRule()); 
            }
            pushFollow(FOLLOW_ruleCmpExpr_in_entryRuleCmpExpr6187);
            iv_ruleCmpExpr=ruleCmpExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCmpExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCmpExpr6197); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCmpExpr"


    // $ANTLR start "ruleCmpExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2785:1: ruleCmpExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmp' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleCmpExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2788:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmp' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2789:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmp' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2789:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmp' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2789:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmp' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2789:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2790:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2790:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2791:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCmpExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleCmpExpr6243);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCmpExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,45,FOLLOW_45_in_ruleCmpExpr6255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCmpExprAccess().getCmpKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2811:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2812:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2812:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2813:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCmpExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleCmpExpr6276);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCmpExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCmpExpr"


    // $ANTLR start "entryRuleCmpgExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2837:1: entryRuleCmpgExpr returns [EObject current=null] : iv_ruleCmpgExpr= ruleCmpgExpr EOF ;
    public final EObject entryRuleCmpgExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCmpgExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2838:2: (iv_ruleCmpgExpr= ruleCmpgExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2839:2: iv_ruleCmpgExpr= ruleCmpgExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCmpgExprRule()); 
            }
            pushFollow(FOLLOW_ruleCmpgExpr_in_entryRuleCmpgExpr6312);
            iv_ruleCmpgExpr=ruleCmpgExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCmpgExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCmpgExpr6322); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCmpgExpr"


    // $ANTLR start "ruleCmpgExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2846:1: ruleCmpgExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpg' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleCmpgExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2849:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpg' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2850:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpg' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2850:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpg' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2850:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpg' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2850:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2851:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2851:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2852:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCmpgExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleCmpgExpr6368);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCmpgExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,46,FOLLOW_46_in_ruleCmpgExpr6380); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCmpgExprAccess().getCmpgKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2872:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2873:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2873:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2874:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCmpgExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleCmpgExpr6401);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCmpgExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCmpgExpr"


    // $ANTLR start "entryRuleCmplExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2898:1: entryRuleCmplExpr returns [EObject current=null] : iv_ruleCmplExpr= ruleCmplExpr EOF ;
    public final EObject entryRuleCmplExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCmplExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2899:2: (iv_ruleCmplExpr= ruleCmplExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2900:2: iv_ruleCmplExpr= ruleCmplExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCmplExprRule()); 
            }
            pushFollow(FOLLOW_ruleCmplExpr_in_entryRuleCmplExpr6437);
            iv_ruleCmplExpr=ruleCmplExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCmplExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCmplExpr6447); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCmplExpr"


    // $ANTLR start "ruleCmplExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2907:1: ruleCmplExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpl' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleCmplExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2910:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpl' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2911:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpl' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2911:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpl' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2911:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= 'cmpl' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2911:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2912:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2912:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2913:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCmplExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleCmplExpr6493);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCmplExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,47,FOLLOW_47_in_ruleCmplExpr6505); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCmplExprAccess().getCmplKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2933:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2934:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2934:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2935:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCmplExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleCmplExpr6526);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCmplExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCmplExpr"


    // $ANTLR start "entryRuleConditionalExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2959:1: entryRuleConditionalExpr returns [EObject current=null] : iv_ruleConditionalExpr= ruleConditionalExpr EOF ;
    public final EObject entryRuleConditionalExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2960:2: (iv_ruleConditionalExpr= ruleConditionalExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2961:2: iv_ruleConditionalExpr= ruleConditionalExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExprRule()); 
            }
            pushFollow(FOLLOW_ruleConditionalExpr_in_entryRuleConditionalExpr6562);
            iv_ruleConditionalExpr=ruleConditionalExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleConditionalExpr6572); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalExpr"


    // $ANTLR start "ruleConditionalExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2968:1: ruleConditionalExpr returns [EObject current=null] : (this_EqExpr_0= ruleEqExpr | this_GeExpr_1= ruleGeExpr | this_GtExpr_2= ruleGtExpr | this_LeExpr_3= ruleLeExpr | this_LtExpr_4= ruleLtExpr | this_NeExpr_5= ruleNeExpr ) ;
    public final EObject ruleConditionalExpr() throws RecognitionException {
        EObject current = null;

        EObject this_EqExpr_0 = null;

        EObject this_GeExpr_1 = null;

        EObject this_GtExpr_2 = null;

        EObject this_LeExpr_3 = null;

        EObject this_LtExpr_4 = null;

        EObject this_NeExpr_5 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2971:28: ( (this_EqExpr_0= ruleEqExpr | this_GeExpr_1= ruleGeExpr | this_GtExpr_2= ruleGtExpr | this_LeExpr_3= ruleLeExpr | this_LtExpr_4= ruleLtExpr | this_NeExpr_5= ruleNeExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2972:1: (this_EqExpr_0= ruleEqExpr | this_GeExpr_1= ruleGeExpr | this_GtExpr_2= ruleGtExpr | this_LeExpr_3= ruleLeExpr | this_LtExpr_4= ruleLtExpr | this_NeExpr_5= ruleNeExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2972:1: (this_EqExpr_0= ruleEqExpr | this_GeExpr_1= ruleGeExpr | this_GtExpr_2= ruleGtExpr | this_LeExpr_3= ruleLeExpr | this_LtExpr_4= ruleLtExpr | this_NeExpr_5= ruleNeExpr )
            int alt30=6;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2973:2: this_EqExpr_0= ruleEqExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalExprAccess().getEqExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleEqExpr_in_ruleConditionalExpr6622);
                    this_EqExpr_0=ruleEqExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EqExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2986:2: this_GeExpr_1= ruleGeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalExprAccess().getGeExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleGeExpr_in_ruleConditionalExpr6652);
                    this_GeExpr_1=ruleGeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_GeExpr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2999:2: this_GtExpr_2= ruleGtExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalExprAccess().getGtExprParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleGtExpr_in_ruleConditionalExpr6682);
                    this_GtExpr_2=ruleGtExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_GtExpr_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3012:2: this_LeExpr_3= ruleLeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalExprAccess().getLeExprParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLeExpr_in_ruleConditionalExpr6712);
                    this_LeExpr_3=ruleLeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LeExpr_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3025:2: this_LtExpr_4= ruleLtExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalExprAccess().getLtExprParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLtExpr_in_ruleConditionalExpr6742);
                    this_LtExpr_4=ruleLtExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LtExpr_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3038:2: this_NeExpr_5= ruleNeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConditionalExprAccess().getNeExprParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNeExpr_in_ruleConditionalExpr6772);
                    this_NeExpr_5=ruleNeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NeExpr_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalExpr"


    // $ANTLR start "entryRuleDivExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3057:1: entryRuleDivExpr returns [EObject current=null] : iv_ruleDivExpr= ruleDivExpr EOF ;
    public final EObject entryRuleDivExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDivExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3058:2: (iv_ruleDivExpr= ruleDivExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3059:2: iv_ruleDivExpr= ruleDivExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDivExprRule()); 
            }
            pushFollow(FOLLOW_ruleDivExpr_in_entryRuleDivExpr6807);
            iv_ruleDivExpr=ruleDivExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDivExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDivExpr6817); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDivExpr"


    // $ANTLR start "ruleDivExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3066:1: ruleDivExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '/' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleDivExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3069:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '/' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3070:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '/' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3070:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '/' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3070:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '/' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3070:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3071:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3071:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3072:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDivExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleDivExpr6863);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDivExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,48,FOLLOW_48_in_ruleDivExpr6875); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDivExprAccess().getSolidusKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3092:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3093:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3093:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3094:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDivExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleDivExpr6896);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDivExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivExpr"


    // $ANTLR start "entryRuleMulExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3118:1: entryRuleMulExpr returns [EObject current=null] : iv_ruleMulExpr= ruleMulExpr EOF ;
    public final EObject entryRuleMulExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMulExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3119:2: (iv_ruleMulExpr= ruleMulExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3120:2: iv_ruleMulExpr= ruleMulExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMulExprRule()); 
            }
            pushFollow(FOLLOW_ruleMulExpr_in_entryRuleMulExpr6932);
            iv_ruleMulExpr=ruleMulExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMulExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMulExpr6942); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMulExpr"


    // $ANTLR start "ruleMulExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3127:1: ruleMulExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '*' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleMulExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3130:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '*' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3131:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '*' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3131:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '*' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3131:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '*' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3131:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3132:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3132:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3133:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMulExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleMulExpr6988);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMulExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,49,FOLLOW_49_in_ruleMulExpr7000); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getMulExprAccess().getAsteriskKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3153:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3154:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3154:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3155:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMulExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleMulExpr7021);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMulExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMulExpr"


    // $ANTLR start "entryRuleOrExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3179:1: entryRuleOrExpr returns [EObject current=null] : iv_ruleOrExpr= ruleOrExpr EOF ;
    public final EObject entryRuleOrExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3180:2: (iv_ruleOrExpr= ruleOrExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3181:2: iv_ruleOrExpr= ruleOrExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExprRule()); 
            }
            pushFollow(FOLLOW_ruleOrExpr_in_entryRuleOrExpr7057);
            iv_ruleOrExpr=ruleOrExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleOrExpr7067); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpr"


    // $ANTLR start "ruleOrExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3188:1: ruleOrExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '|' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleOrExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3191:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '|' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3192:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '|' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3192:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '|' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3192:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '|' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3192:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3193:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3193:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3194:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleOrExpr7113);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOrExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,50,FOLLOW_50_in_ruleOrExpr7125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getOrExprAccess().getVerticalLineKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3214:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3215:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3215:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3216:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOrExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleOrExpr7146);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOrExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpr"


    // $ANTLR start "entryRuleRemExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3240:1: entryRuleRemExpr returns [EObject current=null] : iv_ruleRemExpr= ruleRemExpr EOF ;
    public final EObject entryRuleRemExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRemExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3241:2: (iv_ruleRemExpr= ruleRemExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3242:2: iv_ruleRemExpr= ruleRemExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRemExprRule()); 
            }
            pushFollow(FOLLOW_ruleRemExpr_in_entryRuleRemExpr7182);
            iv_ruleRemExpr=ruleRemExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRemExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRemExpr7192); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRemExpr"


    // $ANTLR start "ruleRemExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3249:1: ruleRemExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '%' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleRemExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3252:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '%' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3253:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '%' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3253:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '%' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3253:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '%' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3253:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3254:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3254:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3255:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRemExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleRemExpr7238);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRemExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,51,FOLLOW_51_in_ruleRemExpr7250); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getRemExprAccess().getPercentSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3275:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3276:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3276:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3277:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRemExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleRemExpr7271);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRemExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRemExpr"


    // $ANTLR start "entryRuleShlExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3301:1: entryRuleShlExpr returns [EObject current=null] : iv_ruleShlExpr= ruleShlExpr EOF ;
    public final EObject entryRuleShlExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShlExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3302:2: (iv_ruleShlExpr= ruleShlExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3303:2: iv_ruleShlExpr= ruleShlExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShlExprRule()); 
            }
            pushFollow(FOLLOW_ruleShlExpr_in_entryRuleShlExpr7307);
            iv_ruleShlExpr=ruleShlExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShlExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleShlExpr7317); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShlExpr"


    // $ANTLR start "ruleShlExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3310:1: ruleShlExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<<' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleShlExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3313:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<<' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3314:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<<' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3314:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<<' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3314:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<<' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3314:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3315:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3315:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3316:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShlExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleShlExpr7363);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShlExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,52,FOLLOW_52_in_ruleShlExpr7375); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getShlExprAccess().getLessThanSignLessThanSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3336:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3337:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3337:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3338:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShlExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleShlExpr7396);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShlExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShlExpr"


    // $ANTLR start "entryRuleShrExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3362:1: entryRuleShrExpr returns [EObject current=null] : iv_ruleShrExpr= ruleShrExpr EOF ;
    public final EObject entryRuleShrExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShrExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3363:2: (iv_ruleShrExpr= ruleShrExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3364:2: iv_ruleShrExpr= ruleShrExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShrExprRule()); 
            }
            pushFollow(FOLLOW_ruleShrExpr_in_entryRuleShrExpr7432);
            iv_ruleShrExpr=ruleShrExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShrExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleShrExpr7442); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShrExpr"


    // $ANTLR start "ruleShrExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3371:1: ruleShrExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleShrExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3374:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3375:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3375:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3375:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3375:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3376:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3376:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3377:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleShrExpr7488);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShrExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,53,FOLLOW_53_in_ruleShrExpr7500); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getShrExprAccess().getGreaterThanSignGreaterThanSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3397:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3398:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3398:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3399:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShrExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleShrExpr7521);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShrExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShrExpr"


    // $ANTLR start "entryRuleSubExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3423:1: entryRuleSubExpr returns [EObject current=null] : iv_ruleSubExpr= ruleSubExpr EOF ;
    public final EObject entryRuleSubExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3424:2: (iv_ruleSubExpr= ruleSubExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3425:2: iv_ruleSubExpr= ruleSubExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubExprRule()); 
            }
            pushFollow(FOLLOW_ruleSubExpr_in_entryRuleSubExpr7557);
            iv_ruleSubExpr=ruleSubExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSubExpr7567); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubExpr"


    // $ANTLR start "ruleSubExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3432:1: ruleSubExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '-' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleSubExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3435:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '-' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3436:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '-' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3436:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '-' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3436:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '-' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3436:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3437:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3437:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3438:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleSubExpr7613);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,54,FOLLOW_54_in_ruleSubExpr7625); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3458:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3459:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3459:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3460:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSubExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleSubExpr7646);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSubExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubExpr"


    // $ANTLR start "entryRuleUshrExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3484:1: entryRuleUshrExpr returns [EObject current=null] : iv_ruleUshrExpr= ruleUshrExpr EOF ;
    public final EObject entryRuleUshrExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUshrExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3485:2: (iv_ruleUshrExpr= ruleUshrExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3486:2: iv_ruleUshrExpr= ruleUshrExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUshrExprRule()); 
            }
            pushFollow(FOLLOW_ruleUshrExpr_in_entryRuleUshrExpr7682);
            iv_ruleUshrExpr=ruleUshrExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUshrExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUshrExpr7692); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUshrExpr"


    // $ANTLR start "ruleUshrExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3493:1: ruleUshrExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleUshrExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3496:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3497:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3497:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>>' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3497:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>>>' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3497:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3498:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3498:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3499:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUshrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleUshrExpr7738);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUshrExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,55,FOLLOW_55_in_ruleUshrExpr7750); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUshrExprAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3519:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3520:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3520:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3521:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUshrExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleUshrExpr7771);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUshrExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUshrExpr"


    // $ANTLR start "entryRuleXorExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3545:1: entryRuleXorExpr returns [EObject current=null] : iv_ruleXorExpr= ruleXorExpr EOF ;
    public final EObject entryRuleXorExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3546:2: (iv_ruleXorExpr= ruleXorExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3547:2: iv_ruleXorExpr= ruleXorExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorExprRule()); 
            }
            pushFollow(FOLLOW_ruleXorExpr_in_entryRuleXorExpr7807);
            iv_ruleXorExpr=ruleXorExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleXorExpr7817); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorExpr"


    // $ANTLR start "ruleXorExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3554:1: ruleXorExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '^' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleXorExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3557:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '^' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3558:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '^' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3558:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '^' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3558:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '^' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3558:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3559:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3559:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3560:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXorExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleXorExpr7863);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXorExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,56,FOLLOW_56_in_ruleXorExpr7875); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getXorExprAccess().getCircumflexAccentKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3580:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3581:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3581:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3582:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXorExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleXorExpr7896);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXorExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorExpr"


    // $ANTLR start "entryRuleEqExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3606:1: entryRuleEqExpr returns [EObject current=null] : iv_ruleEqExpr= ruleEqExpr EOF ;
    public final EObject entryRuleEqExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3607:2: (iv_ruleEqExpr= ruleEqExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3608:2: iv_ruleEqExpr= ruleEqExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqExprRule()); 
            }
            pushFollow(FOLLOW_ruleEqExpr_in_entryRuleEqExpr7932);
            iv_ruleEqExpr=ruleEqExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleEqExpr7942); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqExpr"


    // $ANTLR start "ruleEqExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3615:1: ruleEqExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '==' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleEqExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3618:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '==' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3619:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '==' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3619:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '==' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3619:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '==' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3619:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3620:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3620:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3621:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEqExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleEqExpr7988);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEqExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,57,FOLLOW_57_in_ruleEqExpr8000); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEqExprAccess().getEqualsSignEqualsSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3641:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3642:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3642:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3643:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEqExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleEqExpr8021);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEqExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqExpr"


    // $ANTLR start "entryRuleGeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3667:1: entryRuleGeExpr returns [EObject current=null] : iv_ruleGeExpr= ruleGeExpr EOF ;
    public final EObject entryRuleGeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3668:2: (iv_ruleGeExpr= ruleGeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3669:2: iv_ruleGeExpr= ruleGeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGeExprRule()); 
            }
            pushFollow(FOLLOW_ruleGeExpr_in_entryRuleGeExpr8057);
            iv_ruleGeExpr=ruleGeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGeExpr8067); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGeExpr"


    // $ANTLR start "ruleGeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3676:1: ruleGeExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>=' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleGeExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3679:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>=' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3680:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>=' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3680:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>=' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3680:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>=' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3680:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3681:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3681:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3682:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleGeExpr8113);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGeExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,58,FOLLOW_58_in_ruleGeExpr8125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGeExprAccess().getGreaterThanSignEqualsSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3702:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3703:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3703:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3704:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGeExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleGeExpr8146);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGeExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGeExpr"


    // $ANTLR start "entryRuleGtExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3728:1: entryRuleGtExpr returns [EObject current=null] : iv_ruleGtExpr= ruleGtExpr EOF ;
    public final EObject entryRuleGtExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGtExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3729:2: (iv_ruleGtExpr= ruleGtExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3730:2: iv_ruleGtExpr= ruleGtExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGtExprRule()); 
            }
            pushFollow(FOLLOW_ruleGtExpr_in_entryRuleGtExpr8182);
            iv_ruleGtExpr=ruleGtExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGtExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleGtExpr8192); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGtExpr"


    // $ANTLR start "ruleGtExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3737:1: ruleGtExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleGtExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3740:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3741:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3741:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3741:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '>' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3741:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3742:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3742:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3743:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGtExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleGtExpr8238);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGtExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,59,FOLLOW_59_in_ruleGtExpr8250); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGtExprAccess().getGreaterThanSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3763:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3764:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3764:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3765:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGtExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleGtExpr8271);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGtExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGtExpr"


    // $ANTLR start "entryRuleLeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3789:1: entryRuleLeExpr returns [EObject current=null] : iv_ruleLeExpr= ruleLeExpr EOF ;
    public final EObject entryRuleLeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3790:2: (iv_ruleLeExpr= ruleLeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3791:2: iv_ruleLeExpr= ruleLeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeExprRule()); 
            }
            pushFollow(FOLLOW_ruleLeExpr_in_entryRuleLeExpr8307);
            iv_ruleLeExpr=ruleLeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLeExpr8317); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLeExpr"


    // $ANTLR start "ruleLeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3798:1: ruleLeExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<=' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleLeExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3801:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<=' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3802:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<=' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3802:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<=' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3802:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<=' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3802:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3803:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3803:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3804:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleLeExpr8363);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLeExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,60,FOLLOW_60_in_ruleLeExpr8375); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLeExprAccess().getLessThanSignEqualsSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3824:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3825:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3825:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3826:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLeExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleLeExpr8396);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLeExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLeExpr"


    // $ANTLR start "entryRuleLtExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3850:1: entryRuleLtExpr returns [EObject current=null] : iv_ruleLtExpr= ruleLtExpr EOF ;
    public final EObject entryRuleLtExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3851:2: (iv_ruleLtExpr= ruleLtExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3852:2: iv_ruleLtExpr= ruleLtExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtExprRule()); 
            }
            pushFollow(FOLLOW_ruleLtExpr_in_entryRuleLtExpr8432);
            iv_ruleLtExpr=ruleLtExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLtExpr8442); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtExpr"


    // $ANTLR start "ruleLtExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3859:1: ruleLtExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleLtExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3862:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3863:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3863:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3863:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '<' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3863:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3864:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3864:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3865:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLtExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleLtExpr8488);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLtExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,61,FOLLOW_61_in_ruleLtExpr8500); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLtExprAccess().getLessThanSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3885:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3886:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3886:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3887:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLtExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleLtExpr8521);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLtExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtExpr"


    // $ANTLR start "entryRuleNeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3911:1: entryRuleNeExpr returns [EObject current=null] : iv_ruleNeExpr= ruleNeExpr EOF ;
    public final EObject entryRuleNeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3912:2: (iv_ruleNeExpr= ruleNeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3913:2: iv_ruleNeExpr= ruleNeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNeExprRule()); 
            }
            pushFollow(FOLLOW_ruleNeExpr_in_entryRuleNeExpr8557);
            iv_ruleNeExpr=ruleNeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNeExpr8567); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNeExpr"


    // $ANTLR start "ruleNeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3920:1: ruleNeExpr returns [EObject current=null] : ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '!=' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) ;
    public final EObject ruleNeExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_leftOp_0_0 = null;

        EObject lv_rightOp_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3923:28: ( ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '!=' ( (lv_rightOp_2_0= ruleNonExpr ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3924:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '!=' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3924:1: ( ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '!=' ( (lv_rightOp_2_0= ruleNonExpr ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3924:2: ( (lv_leftOp_0_0= ruleNonExpr ) ) otherlv_1= '!=' ( (lv_rightOp_2_0= ruleNonExpr ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3924:2: ( (lv_leftOp_0_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3925:1: (lv_leftOp_0_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3925:1: (lv_leftOp_0_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3926:3: lv_leftOp_0_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleNeExpr8613);
            lv_leftOp_0_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNeExprRule());
              	        }
                     		set(
                     			current, 
                     			"leftOp",
                      		lv_leftOp_0_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,62,FOLLOW_62_in_ruleNeExpr8625); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNeExprAccess().getExclamationMarkEqualsSignKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3946:1: ( (lv_rightOp_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3947:1: (lv_rightOp_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3947:1: (lv_rightOp_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3948:3: lv_rightOp_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNeExprAccess().getRightOpNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleNeExpr8646);
            lv_rightOp_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNeExprRule());
              	        }
                     		set(
                     			current, 
                     			"rightOp",
                      		lv_rightOp_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNeExpr"


    // $ANTLR start "entryRuleCastExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3972:1: entryRuleCastExpr returns [EObject current=null] : iv_ruleCastExpr= ruleCastExpr EOF ;
    public final EObject entryRuleCastExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCastExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3973:2: (iv_ruleCastExpr= ruleCastExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3974:2: iv_ruleCastExpr= ruleCastExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCastExprRule()); 
            }
            pushFollow(FOLLOW_ruleCastExpr_in_entryRuleCastExpr8682);
            iv_ruleCastExpr=ruleCastExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCastExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCastExpr8692); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCastExpr"


    // $ANTLR start "ruleCastExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3981:1: ruleCastExpr returns [EObject current=null] : (otherlv_0= '(' ( (lv_type_1_0= ruleQualifiedName ) ) otherlv_2= ')' ( (lv_operand_3_0= ruleValue ) ) ) ;
    public final EObject ruleCastExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_type_1_0 = null;

        EObject lv_operand_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3984:28: ( (otherlv_0= '(' ( (lv_type_1_0= ruleQualifiedName ) ) otherlv_2= ')' ( (lv_operand_3_0= ruleValue ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3985:1: (otherlv_0= '(' ( (lv_type_1_0= ruleQualifiedName ) ) otherlv_2= ')' ( (lv_operand_3_0= ruleValue ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3985:1: (otherlv_0= '(' ( (lv_type_1_0= ruleQualifiedName ) ) otherlv_2= ')' ( (lv_operand_3_0= ruleValue ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3985:3: otherlv_0= '(' ( (lv_type_1_0= ruleQualifiedName ) ) otherlv_2= ')' ( (lv_operand_3_0= ruleValue ) )
            {
            otherlv_0=(Token)match(input,26,FOLLOW_26_in_ruleCastExpr8729); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCastExprAccess().getLeftParenthesisKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3989:1: ( (lv_type_1_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3990:1: (lv_type_1_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3990:1: (lv_type_1_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3991:3: lv_type_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCastExprAccess().getTypeQualifiedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleCastExpr8750);
            lv_type_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCastExprRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,27,FOLLOW_27_in_ruleCastExpr8762); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCastExprAccess().getRightParenthesisKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4011:1: ( (lv_operand_3_0= ruleValue ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4012:1: (lv_operand_3_0= ruleValue )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4012:1: (lv_operand_3_0= ruleValue )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4013:3: lv_operand_3_0= ruleValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCastExprAccess().getOperandValueParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValue_in_ruleCastExpr8783);
            lv_operand_3_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCastExprRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_3_0, 
                      		"Value");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCastExpr"


    // $ANTLR start "entryRuleInstanceOfExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4037:1: entryRuleInstanceOfExpr returns [EObject current=null] : iv_ruleInstanceOfExpr= ruleInstanceOfExpr EOF ;
    public final EObject entryRuleInstanceOfExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstanceOfExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4038:2: (iv_ruleInstanceOfExpr= ruleInstanceOfExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4039:2: iv_ruleInstanceOfExpr= ruleInstanceOfExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstanceOfExprRule()); 
            }
            pushFollow(FOLLOW_ruleInstanceOfExpr_in_entryRuleInstanceOfExpr8819);
            iv_ruleInstanceOfExpr=ruleInstanceOfExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstanceOfExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInstanceOfExpr8829); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstanceOfExpr"


    // $ANTLR start "ruleInstanceOfExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4046:1: ruleInstanceOfExpr returns [EObject current=null] : ( ( (lv_operand_0_0= ruleRef ) ) otherlv_1= 'instanceof' ( (lv_type_2_0= ruleQualifiedName ) ) ) ;
    public final EObject ruleInstanceOfExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_operand_0_0 = null;

        EObject lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4049:28: ( ( ( (lv_operand_0_0= ruleRef ) ) otherlv_1= 'instanceof' ( (lv_type_2_0= ruleQualifiedName ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4050:1: ( ( (lv_operand_0_0= ruleRef ) ) otherlv_1= 'instanceof' ( (lv_type_2_0= ruleQualifiedName ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4050:1: ( ( (lv_operand_0_0= ruleRef ) ) otherlv_1= 'instanceof' ( (lv_type_2_0= ruleQualifiedName ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4050:2: ( (lv_operand_0_0= ruleRef ) ) otherlv_1= 'instanceof' ( (lv_type_2_0= ruleQualifiedName ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4050:2: ( (lv_operand_0_0= ruleRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4051:1: (lv_operand_0_0= ruleRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4051:1: (lv_operand_0_0= ruleRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4052:3: lv_operand_0_0= ruleRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInstanceOfExprAccess().getOperandRefParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleRef_in_ruleInstanceOfExpr8875);
            lv_operand_0_0=ruleRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInstanceOfExprRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_0_0, 
                      		"Ref");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,63,FOLLOW_63_in_ruleInstanceOfExpr8887); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInstanceOfExprAccess().getInstanceofKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4072:1: ( (lv_type_2_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4073:1: (lv_type_2_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4073:1: (lv_type_2_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4074:3: lv_type_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInstanceOfExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleInstanceOfExpr8908);
            lv_type_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInstanceOfExprRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstanceOfExpr"


    // $ANTLR start "entryRuleSootMethodRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4098:1: entryRuleSootMethodRef returns [EObject current=null] : iv_ruleSootMethodRef= ruleSootMethodRef EOF ;
    public final EObject entryRuleSootMethodRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSootMethodRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4099:2: (iv_ruleSootMethodRef= ruleSootMethodRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4100:2: iv_ruleSootMethodRef= ruleSootMethodRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSootMethodRefRule()); 
            }
            pushFollow(FOLLOW_ruleSootMethodRef_in_entryRuleSootMethodRef8944);
            iv_ruleSootMethodRef=ruleSootMethodRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSootMethodRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSootMethodRef8954); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSootMethodRef"


    // $ANTLR start "ruleSootMethodRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4107:1: ruleSootMethodRef returns [EObject current=null] : (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_type_3_0= ruleSootType ) ) ( (lv_name_4_0= ruleMethodName ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleQualifiedName ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )* )? otherlv_9= ')' otherlv_10= '>' ) ;
    public final EObject ruleSootMethodRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_class_1_0 = null;

        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject lv_parameters_6_0 = null;

        EObject lv_parameters_8_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4110:28: ( (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_type_3_0= ruleSootType ) ) ( (lv_name_4_0= ruleMethodName ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleQualifiedName ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )* )? otherlv_9= ')' otherlv_10= '>' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4111:1: (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_type_3_0= ruleSootType ) ) ( (lv_name_4_0= ruleMethodName ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleQualifiedName ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )* )? otherlv_9= ')' otherlv_10= '>' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4111:1: (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_type_3_0= ruleSootType ) ) ( (lv_name_4_0= ruleMethodName ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleQualifiedName ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )* )? otherlv_9= ')' otherlv_10= '>' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4111:3: otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_type_3_0= ruleSootType ) ) ( (lv_name_4_0= ruleMethodName ) ) otherlv_5= '(' ( ( (lv_parameters_6_0= ruleQualifiedName ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )* )? otherlv_9= ')' otherlv_10= '>'
            {
            otherlv_0=(Token)match(input,61,FOLLOW_61_in_ruleSootMethodRef8991); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSootMethodRefAccess().getLessThanSignKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4115:1: ( (lv_class_1_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4116:1: (lv_class_1_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4116:1: (lv_class_1_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4117:3: lv_class_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSootMethodRefAccess().getClassQualifiedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleSootMethodRef9012);
            lv_class_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSootMethodRefRule());
              	        }
                     		set(
                     			current, 
                     			"class",
                      		lv_class_1_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,28,FOLLOW_28_in_ruleSootMethodRef9024); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getSootMethodRefAccess().getColonKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4137:1: ( (lv_type_3_0= ruleSootType ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4138:1: (lv_type_3_0= ruleSootType )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4138:1: (lv_type_3_0= ruleSootType )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4139:3: lv_type_3_0= ruleSootType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSootMethodRefAccess().getTypeSootTypeParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSootType_in_ruleSootMethodRef9045);
            lv_type_3_0=ruleSootType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSootMethodRefRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"SootType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4155:2: ( (lv_name_4_0= ruleMethodName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4156:1: (lv_name_4_0= ruleMethodName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4156:1: (lv_name_4_0= ruleMethodName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4157:3: lv_name_4_0= ruleMethodName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSootMethodRefAccess().getNameMethodNameParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleMethodName_in_ruleSootMethodRef9066);
            lv_name_4_0=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSootMethodRefRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_4_0, 
                      		"MethodName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,26,FOLLOW_26_in_ruleSootMethodRef9078); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getSootMethodRefAccess().getLeftParenthesisKeyword_5());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4177:1: ( ( (lv_parameters_6_0= ruleQualifiedName ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )* )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_ID) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4177:2: ( (lv_parameters_6_0= ruleQualifiedName ) ) (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4177:2: ( (lv_parameters_6_0= ruleQualifiedName ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4178:1: (lv_parameters_6_0= ruleQualifiedName )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4178:1: (lv_parameters_6_0= ruleQualifiedName )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4179:3: lv_parameters_6_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSootMethodRefAccess().getParametersQualifiedNameParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleSootMethodRef9100);
                    lv_parameters_6_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSootMethodRefRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_6_0, 
                              		"QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4195:2: (otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==21) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4195:4: otherlv_7= ',' ( (lv_parameters_8_0= ruleQualifiedName ) )
                    	    {
                    	    otherlv_7=(Token)match(input,21,FOLLOW_21_in_ruleSootMethodRef9113); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getSootMethodRefAccess().getCommaKeyword_6_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4199:1: ( (lv_parameters_8_0= ruleQualifiedName ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4200:1: (lv_parameters_8_0= ruleQualifiedName )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4200:1: (lv_parameters_8_0= ruleQualifiedName )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4201:3: lv_parameters_8_0= ruleQualifiedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSootMethodRefAccess().getParametersQualifiedNameParserRuleCall_6_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleQualifiedName_in_ruleSootMethodRef9134);
                    	    lv_parameters_8_0=ruleQualifiedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSootMethodRefRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_8_0, 
                    	              		"QualifiedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,27,FOLLOW_27_in_ruleSootMethodRef9150); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getSootMethodRefAccess().getRightParenthesisKeyword_7());
                  
            }
            otherlv_10=(Token)match(input,59,FOLLOW_59_in_ruleSootMethodRef9162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getSootMethodRefAccess().getGreaterThanSignKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSootMethodRef"


    // $ANTLR start "entryRuleSootType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4233:1: entryRuleSootType returns [EObject current=null] : iv_ruleSootType= ruleSootType EOF ;
    public final EObject entryRuleSootType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSootType = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4234:2: (iv_ruleSootType= ruleSootType EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4235:2: iv_ruleSootType= ruleSootType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSootTypeRule()); 
            }
            pushFollow(FOLLOW_ruleSootType_in_entryRuleSootType9198);
            iv_ruleSootType=ruleSootType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSootType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSootType9208); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSootType"


    // $ANTLR start "ruleSootType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4242:1: ruleSootType returns [EObject current=null] : (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_QualifiedName_1= ruleQualifiedName ) ;
    public final EObject ruleSootType() throws RecognitionException {
        EObject current = null;

        EObject this_WildcardPrimitiveType_0 = null;

        EObject this_QualifiedName_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4245:28: ( (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_QualifiedName_1= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4246:1: (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_QualifiedName_1= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4246:1: (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_QualifiedName_1= ruleQualifiedName )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0>=89 && LA33_0<=97)) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_ID) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4247:2: this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSootTypeAccess().getWildcardPrimitiveTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardPrimitiveType_in_ruleSootType9258);
                    this_WildcardPrimitiveType_0=ruleWildcardPrimitiveType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardPrimitiveType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4260:2: this_QualifiedName_1= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSootTypeAccess().getQualifiedNameParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleSootType9288);
                    this_QualifiedName_1=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QualifiedName_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSootType"


    // $ANTLR start "entryRuleInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4279:1: entryRuleInvokeExpr returns [EObject current=null] : iv_ruleInvokeExpr= ruleInvokeExpr EOF ;
    public final EObject entryRuleInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvokeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4280:2: (iv_ruleInvokeExpr= ruleInvokeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4281:2: iv_ruleInvokeExpr= ruleInvokeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvokeExprRule()); 
            }
            pushFollow(FOLLOW_ruleInvokeExpr_in_entryRuleInvokeExpr9323);
            iv_ruleInvokeExpr=ruleInvokeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvokeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInvokeExpr9333); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvokeExpr"


    // $ANTLR start "ruleInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4288:1: ruleInvokeExpr returns [EObject current=null] : (this_InstanceInvokeExpr_0= ruleInstanceInvokeExpr | this_StaticInvokeExpr_1= ruleStaticInvokeExpr ) ;
    public final EObject ruleInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject this_InstanceInvokeExpr_0 = null;

        EObject this_StaticInvokeExpr_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4291:28: ( (this_InstanceInvokeExpr_0= ruleInstanceInvokeExpr | this_StaticInvokeExpr_1= ruleStaticInvokeExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4292:1: (this_InstanceInvokeExpr_0= ruleInstanceInvokeExpr | this_StaticInvokeExpr_1= ruleStaticInvokeExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4292:1: (this_InstanceInvokeExpr_0= ruleInstanceInvokeExpr | this_StaticInvokeExpr_1= ruleStaticInvokeExpr )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==65||(LA34_0>=67 && LA34_0<=68)) ) {
                alt34=1;
            }
            else if ( (LA34_0==64) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4293:2: this_InstanceInvokeExpr_0= ruleInstanceInvokeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInvokeExprAccess().getInstanceInvokeExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleInstanceInvokeExpr_in_ruleInvokeExpr9383);
                    this_InstanceInvokeExpr_0=ruleInstanceInvokeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InstanceInvokeExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4306:2: this_StaticInvokeExpr_1= ruleStaticInvokeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInvokeExprAccess().getStaticInvokeExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleStaticInvokeExpr_in_ruleInvokeExpr9413);
                    this_StaticInvokeExpr_1=ruleStaticInvokeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StaticInvokeExpr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvokeExpr"


    // $ANTLR start "entryRuleInstanceInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4325:1: entryRuleInstanceInvokeExpr returns [EObject current=null] : iv_ruleInstanceInvokeExpr= ruleInstanceInvokeExpr EOF ;
    public final EObject entryRuleInstanceInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstanceInvokeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4326:2: (iv_ruleInstanceInvokeExpr= ruleInstanceInvokeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4327:2: iv_ruleInstanceInvokeExpr= ruleInstanceInvokeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstanceInvokeExprRule()); 
            }
            pushFollow(FOLLOW_ruleInstanceInvokeExpr_in_entryRuleInstanceInvokeExpr9448);
            iv_ruleInstanceInvokeExpr=ruleInstanceInvokeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstanceInvokeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInstanceInvokeExpr9458); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstanceInvokeExpr"


    // $ANTLR start "ruleInstanceInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4334:1: ruleInstanceInvokeExpr returns [EObject current=null] : (this_InterfaceInvokeExpr_0= ruleInterfaceInvokeExpr | this_SpecialInvokeExpr_1= ruleSpecialInvokeExpr | this_VirtualInvokeExpr_2= ruleVirtualInvokeExpr ) ;
    public final EObject ruleInstanceInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject this_InterfaceInvokeExpr_0 = null;

        EObject this_SpecialInvokeExpr_1 = null;

        EObject this_VirtualInvokeExpr_2 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4337:28: ( (this_InterfaceInvokeExpr_0= ruleInterfaceInvokeExpr | this_SpecialInvokeExpr_1= ruleSpecialInvokeExpr | this_VirtualInvokeExpr_2= ruleVirtualInvokeExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4338:1: (this_InterfaceInvokeExpr_0= ruleInterfaceInvokeExpr | this_SpecialInvokeExpr_1= ruleSpecialInvokeExpr | this_VirtualInvokeExpr_2= ruleVirtualInvokeExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4338:1: (this_InterfaceInvokeExpr_0= ruleInterfaceInvokeExpr | this_SpecialInvokeExpr_1= ruleSpecialInvokeExpr | this_VirtualInvokeExpr_2= ruleVirtualInvokeExpr )
            int alt35=3;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt35=1;
                }
                break;
            case 67:
                {
                alt35=2;
                }
                break;
            case 68:
                {
                alt35=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4339:2: this_InterfaceInvokeExpr_0= ruleInterfaceInvokeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInstanceInvokeExprAccess().getInterfaceInvokeExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleInterfaceInvokeExpr_in_ruleInstanceInvokeExpr9508);
                    this_InterfaceInvokeExpr_0=ruleInterfaceInvokeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InterfaceInvokeExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4352:2: this_SpecialInvokeExpr_1= ruleSpecialInvokeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInstanceInvokeExprAccess().getSpecialInvokeExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleSpecialInvokeExpr_in_ruleInstanceInvokeExpr9538);
                    this_SpecialInvokeExpr_1=ruleSpecialInvokeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SpecialInvokeExpr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4365:2: this_VirtualInvokeExpr_2= ruleVirtualInvokeExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInstanceInvokeExprAccess().getVirtualInvokeExprParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleVirtualInvokeExpr_in_ruleInstanceInvokeExpr9568);
                    this_VirtualInvokeExpr_2=ruleVirtualInvokeExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_VirtualInvokeExpr_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstanceInvokeExpr"


    // $ANTLR start "entryRuleStaticInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4384:1: entryRuleStaticInvokeExpr returns [EObject current=null] : iv_ruleStaticInvokeExpr= ruleStaticInvokeExpr EOF ;
    public final EObject entryRuleStaticInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStaticInvokeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4385:2: (iv_ruleStaticInvokeExpr= ruleStaticInvokeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4386:2: iv_ruleStaticInvokeExpr= ruleStaticInvokeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStaticInvokeExprRule()); 
            }
            pushFollow(FOLLOW_ruleStaticInvokeExpr_in_entryRuleStaticInvokeExpr9603);
            iv_ruleStaticInvokeExpr=ruleStaticInvokeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStaticInvokeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStaticInvokeExpr9613); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStaticInvokeExpr"


    // $ANTLR start "ruleStaticInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4393:1: ruleStaticInvokeExpr returns [EObject current=null] : ( () otherlv_1= 'staticinvoke' ( (lv_method_2_0= ruleSootMethodRef ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleNonExpr ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )* )? otherlv_7= ')' ) ;
    public final EObject ruleStaticInvokeExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_method_2_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4396:28: ( ( () otherlv_1= 'staticinvoke' ( (lv_method_2_0= ruleSootMethodRef ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleNonExpr ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )* )? otherlv_7= ')' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4397:1: ( () otherlv_1= 'staticinvoke' ( (lv_method_2_0= ruleSootMethodRef ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleNonExpr ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )* )? otherlv_7= ')' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4397:1: ( () otherlv_1= 'staticinvoke' ( (lv_method_2_0= ruleSootMethodRef ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleNonExpr ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )* )? otherlv_7= ')' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4397:2: () otherlv_1= 'staticinvoke' ( (lv_method_2_0= ruleSootMethodRef ) ) otherlv_3= '(' ( ( (lv_parameters_4_0= ruleNonExpr ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )* )? otherlv_7= ')'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4397:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4398:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getStaticInvokeExprAccess().getStaticInvokeExprAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,64,FOLLOW_64_in_ruleStaticInvokeExpr9662); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStaticInvokeExprAccess().getStaticinvokeKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4410:1: ( (lv_method_2_0= ruleSootMethodRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4411:1: (lv_method_2_0= ruleSootMethodRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4411:1: (lv_method_2_0= ruleSootMethodRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4412:3: lv_method_2_0= ruleSootMethodRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStaticInvokeExprAccess().getMethodSootMethodRefParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSootMethodRef_in_ruleStaticInvokeExpr9683);
            lv_method_2_0=ruleSootMethodRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStaticInvokeExprRule());
              	        }
                     		set(
                     			current, 
                     			"method",
                      		lv_method_2_0, 
                      		"SootMethodRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,26,FOLLOW_26_in_ruleStaticInvokeExpr9695); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getStaticInvokeExprAccess().getLeftParenthesisKeyword_3());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4432:1: ( ( (lv_parameters_4_0= ruleNonExpr ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )* )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_ID||(LA37_0>=RULE_INT && LA37_0<=RULE_STRING)||LA37_0==17||LA37_0==61||LA37_0==77||LA37_0==80||LA37_0==84) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4432:2: ( (lv_parameters_4_0= ruleNonExpr ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4432:2: ( (lv_parameters_4_0= ruleNonExpr ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4433:1: (lv_parameters_4_0= ruleNonExpr )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4433:1: (lv_parameters_4_0= ruleNonExpr )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4434:3: lv_parameters_4_0= ruleNonExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStaticInvokeExprAccess().getParametersNonExprParserRuleCall_4_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleNonExpr_in_ruleStaticInvokeExpr9717);
                    lv_parameters_4_0=ruleNonExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStaticInvokeExprRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_4_0, 
                              		"NonExpr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4450:2: (otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) ) )*
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==21) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4450:4: otherlv_5= ',' ( (lv_parameters_6_0= ruleNonExpr ) )
                    	    {
                    	    otherlv_5=(Token)match(input,21,FOLLOW_21_in_ruleStaticInvokeExpr9730); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_5, grammarAccess.getStaticInvokeExprAccess().getCommaKeyword_4_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4454:1: ( (lv_parameters_6_0= ruleNonExpr ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4455:1: (lv_parameters_6_0= ruleNonExpr )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4455:1: (lv_parameters_6_0= ruleNonExpr )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4456:3: lv_parameters_6_0= ruleNonExpr
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStaticInvokeExprAccess().getParametersNonExprParserRuleCall_4_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleNonExpr_in_ruleStaticInvokeExpr9751);
                    	    lv_parameters_6_0=ruleNonExpr();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStaticInvokeExprRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_6_0, 
                    	              		"NonExpr");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,27,FOLLOW_27_in_ruleStaticInvokeExpr9767); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getStaticInvokeExprAccess().getRightParenthesisKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStaticInvokeExpr"


    // $ANTLR start "entryRuleInterfaceInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4484:1: entryRuleInterfaceInvokeExpr returns [EObject current=null] : iv_ruleInterfaceInvokeExpr= ruleInterfaceInvokeExpr EOF ;
    public final EObject entryRuleInterfaceInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInterfaceInvokeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4485:2: (iv_ruleInterfaceInvokeExpr= ruleInterfaceInvokeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4486:2: iv_ruleInterfaceInvokeExpr= ruleInterfaceInvokeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceInvokeExprRule()); 
            }
            pushFollow(FOLLOW_ruleInterfaceInvokeExpr_in_entryRuleInterfaceInvokeExpr9803);
            iv_ruleInterfaceInvokeExpr=ruleInterfaceInvokeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceInvokeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInterfaceInvokeExpr9813); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceInvokeExpr"


    // $ANTLR start "ruleInterfaceInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4493:1: ruleInterfaceInvokeExpr returns [EObject current=null] : (otherlv_0= 'interfaceinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' ) ;
    public final EObject ruleInterfaceInvokeExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_base_1_0 = null;

        EObject lv_method_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4496:28: ( (otherlv_0= 'interfaceinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4497:1: (otherlv_0= 'interfaceinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4497:1: (otherlv_0= 'interfaceinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4497:3: otherlv_0= 'interfaceinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')'
            {
            otherlv_0=(Token)match(input,65,FOLLOW_65_in_ruleInterfaceInvokeExpr9850); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getInterfaceInvokeExprAccess().getInterfaceinvokeKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4501:1: ( (lv_base_1_0= ruleLocalOrWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4502:1: (lv_base_1_0= ruleLocalOrWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4502:1: (lv_base_1_0= ruleLocalOrWildcard )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4503:3: lv_base_1_0= ruleLocalOrWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInterfaceInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocalOrWildcard_in_ruleInterfaceInvokeExpr9871);
            lv_base_1_0=ruleLocalOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInterfaceInvokeExprRule());
              	        }
                     		set(
                     			current, 
                     			"base",
                      		lv_base_1_0, 
                      		"LocalOrWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,66,FOLLOW_66_in_ruleInterfaceInvokeExpr9883); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getInterfaceInvokeExprAccess().getFullStopKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4523:1: ( (lv_method_3_0= ruleSootMethodRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4524:1: (lv_method_3_0= ruleSootMethodRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4524:1: (lv_method_3_0= ruleSootMethodRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4525:3: lv_method_3_0= ruleSootMethodRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInterfaceInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSootMethodRef_in_ruleInterfaceInvokeExpr9904);
            lv_method_3_0=ruleSootMethodRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInterfaceInvokeExprRule());
              	        }
                     		set(
                     			current, 
                     			"method",
                      		lv_method_3_0, 
                      		"SootMethodRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,26,FOLLOW_26_in_ruleInterfaceInvokeExpr9916); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getInterfaceInvokeExprAccess().getLeftParenthesisKeyword_4());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4545:1: ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_ID||(LA39_0>=RULE_INT && LA39_0<=RULE_STRING)||LA39_0==17||LA39_0==61||LA39_0==77||LA39_0==80||LA39_0==84) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4545:2: ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4545:2: ( (lv_parameters_5_0= ruleNonExpr ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4546:1: (lv_parameters_5_0= ruleNonExpr )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4546:1: (lv_parameters_5_0= ruleNonExpr )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4547:3: lv_parameters_5_0= ruleNonExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getInterfaceInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleNonExpr_in_ruleInterfaceInvokeExpr9938);
                    lv_parameters_5_0=ruleNonExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getInterfaceInvokeExprRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_5_0, 
                              		"NonExpr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4563:2: (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==21) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4563:4: otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) )
                    	    {
                    	    otherlv_6=(Token)match(input,21,FOLLOW_21_in_ruleInterfaceInvokeExpr9951); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getInterfaceInvokeExprAccess().getCommaKeyword_5_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4567:1: ( (lv_parameters_7_0= ruleNonExpr ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4568:1: (lv_parameters_7_0= ruleNonExpr )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4568:1: (lv_parameters_7_0= ruleNonExpr )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4569:3: lv_parameters_7_0= ruleNonExpr
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getInterfaceInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleNonExpr_in_ruleInterfaceInvokeExpr9972);
                    	    lv_parameters_7_0=ruleNonExpr();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getInterfaceInvokeExprRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_7_0, 
                    	              		"NonExpr");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleInterfaceInvokeExpr9988); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getInterfaceInvokeExprAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceInvokeExpr"


    // $ANTLR start "entryRuleSpecialInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4597:1: entryRuleSpecialInvokeExpr returns [EObject current=null] : iv_ruleSpecialInvokeExpr= ruleSpecialInvokeExpr EOF ;
    public final EObject entryRuleSpecialInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpecialInvokeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4598:2: (iv_ruleSpecialInvokeExpr= ruleSpecialInvokeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4599:2: iv_ruleSpecialInvokeExpr= ruleSpecialInvokeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecialInvokeExprRule()); 
            }
            pushFollow(FOLLOW_ruleSpecialInvokeExpr_in_entryRuleSpecialInvokeExpr10024);
            iv_ruleSpecialInvokeExpr=ruleSpecialInvokeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialInvokeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSpecialInvokeExpr10034); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialInvokeExpr"


    // $ANTLR start "ruleSpecialInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4606:1: ruleSpecialInvokeExpr returns [EObject current=null] : (otherlv_0= 'specialinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' ) ;
    public final EObject ruleSpecialInvokeExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_base_1_0 = null;

        EObject lv_method_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4609:28: ( (otherlv_0= 'specialinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4610:1: (otherlv_0= 'specialinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4610:1: (otherlv_0= 'specialinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4610:3: otherlv_0= 'specialinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')'
            {
            otherlv_0=(Token)match(input,67,FOLLOW_67_in_ruleSpecialInvokeExpr10071); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSpecialInvokeExprAccess().getSpecialinvokeKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4614:1: ( (lv_base_1_0= ruleLocalOrWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4615:1: (lv_base_1_0= ruleLocalOrWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4615:1: (lv_base_1_0= ruleLocalOrWildcard )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4616:3: lv_base_1_0= ruleLocalOrWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSpecialInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocalOrWildcard_in_ruleSpecialInvokeExpr10092);
            lv_base_1_0=ruleLocalOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSpecialInvokeExprRule());
              	        }
                     		set(
                     			current, 
                     			"base",
                      		lv_base_1_0, 
                      		"LocalOrWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,66,FOLLOW_66_in_ruleSpecialInvokeExpr10104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getSpecialInvokeExprAccess().getFullStopKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4636:1: ( (lv_method_3_0= ruleSootMethodRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4637:1: (lv_method_3_0= ruleSootMethodRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4637:1: (lv_method_3_0= ruleSootMethodRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4638:3: lv_method_3_0= ruleSootMethodRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSpecialInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSootMethodRef_in_ruleSpecialInvokeExpr10125);
            lv_method_3_0=ruleSootMethodRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSpecialInvokeExprRule());
              	        }
                     		set(
                     			current, 
                     			"method",
                      		lv_method_3_0, 
                      		"SootMethodRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,26,FOLLOW_26_in_ruleSpecialInvokeExpr10137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSpecialInvokeExprAccess().getLeftParenthesisKeyword_4());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4658:1: ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_ID||(LA41_0>=RULE_INT && LA41_0<=RULE_STRING)||LA41_0==17||LA41_0==61||LA41_0==77||LA41_0==80||LA41_0==84) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4658:2: ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4658:2: ( (lv_parameters_5_0= ruleNonExpr ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4659:1: (lv_parameters_5_0= ruleNonExpr )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4659:1: (lv_parameters_5_0= ruleNonExpr )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4660:3: lv_parameters_5_0= ruleNonExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSpecialInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleNonExpr_in_ruleSpecialInvokeExpr10159);
                    lv_parameters_5_0=ruleNonExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSpecialInvokeExprRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_5_0, 
                              		"NonExpr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4676:2: (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )*
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==21) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4676:4: otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) )
                    	    {
                    	    otherlv_6=(Token)match(input,21,FOLLOW_21_in_ruleSpecialInvokeExpr10172); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getSpecialInvokeExprAccess().getCommaKeyword_5_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4680:1: ( (lv_parameters_7_0= ruleNonExpr ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4681:1: (lv_parameters_7_0= ruleNonExpr )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4681:1: (lv_parameters_7_0= ruleNonExpr )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4682:3: lv_parameters_7_0= ruleNonExpr
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSpecialInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleNonExpr_in_ruleSpecialInvokeExpr10193);
                    	    lv_parameters_7_0=ruleNonExpr();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSpecialInvokeExprRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_7_0, 
                    	              		"NonExpr");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop40;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleSpecialInvokeExpr10209); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSpecialInvokeExprAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialInvokeExpr"


    // $ANTLR start "entryRuleVirtualInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4710:1: entryRuleVirtualInvokeExpr returns [EObject current=null] : iv_ruleVirtualInvokeExpr= ruleVirtualInvokeExpr EOF ;
    public final EObject entryRuleVirtualInvokeExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVirtualInvokeExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4711:2: (iv_ruleVirtualInvokeExpr= ruleVirtualInvokeExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4712:2: iv_ruleVirtualInvokeExpr= ruleVirtualInvokeExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVirtualInvokeExprRule()); 
            }
            pushFollow(FOLLOW_ruleVirtualInvokeExpr_in_entryRuleVirtualInvokeExpr10245);
            iv_ruleVirtualInvokeExpr=ruleVirtualInvokeExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVirtualInvokeExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleVirtualInvokeExpr10255); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVirtualInvokeExpr"


    // $ANTLR start "ruleVirtualInvokeExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4719:1: ruleVirtualInvokeExpr returns [EObject current=null] : (otherlv_0= 'virtualinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' ) ;
    public final EObject ruleVirtualInvokeExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_base_1_0 = null;

        EObject lv_method_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4722:28: ( (otherlv_0= 'virtualinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4723:1: (otherlv_0= 'virtualinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4723:1: (otherlv_0= 'virtualinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4723:3: otherlv_0= 'virtualinvoke' ( (lv_base_1_0= ruleLocalOrWildcard ) ) otherlv_2= '.' ( (lv_method_3_0= ruleSootMethodRef ) ) otherlv_4= '(' ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )? otherlv_8= ')'
            {
            otherlv_0=(Token)match(input,68,FOLLOW_68_in_ruleVirtualInvokeExpr10292); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getVirtualInvokeExprAccess().getVirtualinvokeKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4727:1: ( (lv_base_1_0= ruleLocalOrWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4728:1: (lv_base_1_0= ruleLocalOrWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4728:1: (lv_base_1_0= ruleLocalOrWildcard )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4729:3: lv_base_1_0= ruleLocalOrWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVirtualInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocalOrWildcard_in_ruleVirtualInvokeExpr10313);
            lv_base_1_0=ruleLocalOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVirtualInvokeExprRule());
              	        }
                     		set(
                     			current, 
                     			"base",
                      		lv_base_1_0, 
                      		"LocalOrWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,66,FOLLOW_66_in_ruleVirtualInvokeExpr10325); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getVirtualInvokeExprAccess().getFullStopKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4749:1: ( (lv_method_3_0= ruleSootMethodRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4750:1: (lv_method_3_0= ruleSootMethodRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4750:1: (lv_method_3_0= ruleSootMethodRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4751:3: lv_method_3_0= ruleSootMethodRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVirtualInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSootMethodRef_in_ruleVirtualInvokeExpr10346);
            lv_method_3_0=ruleSootMethodRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVirtualInvokeExprRule());
              	        }
                     		set(
                     			current, 
                     			"method",
                      		lv_method_3_0, 
                      		"SootMethodRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,26,FOLLOW_26_in_ruleVirtualInvokeExpr10358); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getVirtualInvokeExprAccess().getLeftParenthesisKeyword_4());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4771:1: ( ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )* )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_ID||(LA43_0>=RULE_INT && LA43_0<=RULE_STRING)||LA43_0==17||LA43_0==61||LA43_0==77||LA43_0==80||LA43_0==84) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4771:2: ( (lv_parameters_5_0= ruleNonExpr ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4771:2: ( (lv_parameters_5_0= ruleNonExpr ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4772:1: (lv_parameters_5_0= ruleNonExpr )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4772:1: (lv_parameters_5_0= ruleNonExpr )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4773:3: lv_parameters_5_0= ruleNonExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVirtualInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleNonExpr_in_ruleVirtualInvokeExpr10380);
                    lv_parameters_5_0=ruleNonExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVirtualInvokeExprRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_5_0, 
                              		"NonExpr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4789:2: (otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) ) )*
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==21) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4789:4: otherlv_6= ',' ( (lv_parameters_7_0= ruleNonExpr ) )
                    	    {
                    	    otherlv_6=(Token)match(input,21,FOLLOW_21_in_ruleVirtualInvokeExpr10393); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getVirtualInvokeExprAccess().getCommaKeyword_5_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4793:1: ( (lv_parameters_7_0= ruleNonExpr ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4794:1: (lv_parameters_7_0= ruleNonExpr )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4794:1: (lv_parameters_7_0= ruleNonExpr )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4795:3: lv_parameters_7_0= ruleNonExpr
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getVirtualInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleNonExpr_in_ruleVirtualInvokeExpr10414);
                    	    lv_parameters_7_0=ruleNonExpr();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getVirtualInvokeExprRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_7_0, 
                    	              		"NonExpr");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop42;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleVirtualInvokeExpr10430); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getVirtualInvokeExprAccess().getRightParenthesisKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVirtualInvokeExpr"


    // $ANTLR start "entryRuleLocalOrWildcard"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4823:1: entryRuleLocalOrWildcard returns [EObject current=null] : iv_ruleLocalOrWildcard= ruleLocalOrWildcard EOF ;
    public final EObject entryRuleLocalOrWildcard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalOrWildcard = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4824:2: (iv_ruleLocalOrWildcard= ruleLocalOrWildcard EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4825:2: iv_ruleLocalOrWildcard= ruleLocalOrWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalOrWildcardRule()); 
            }
            pushFollow(FOLLOW_ruleLocalOrWildcard_in_entryRuleLocalOrWildcard10466);
            iv_ruleLocalOrWildcard=ruleLocalOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalOrWildcard; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLocalOrWildcard10476); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalOrWildcard"


    // $ANTLR start "ruleLocalOrWildcard"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4832:1: ruleLocalOrWildcard returns [EObject current=null] : (this_Local_0= ruleLocal | this_WildcardName_1= ruleWildcardName ) ;
    public final EObject ruleLocalOrWildcard() throws RecognitionException {
        EObject current = null;

        EObject this_Local_0 = null;

        EObject this_WildcardName_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4835:28: ( (this_Local_0= ruleLocal | this_WildcardName_1= ruleWildcardName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4836:1: (this_Local_0= ruleLocal | this_WildcardName_1= ruleWildcardName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4836:1: (this_Local_0= ruleLocal | this_WildcardName_1= ruleWildcardName )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_ID) ) {
                alt44=1;
            }
            else if ( (LA44_0==84) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4837:2: this_Local_0= ruleLocal
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalOrWildcardAccess().getLocalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLocal_in_ruleLocalOrWildcard10526);
                    this_Local_0=ruleLocal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Local_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4850:2: this_WildcardName_1= ruleWildcardName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLocalOrWildcardAccess().getWildcardNameParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardName_in_ruleLocalOrWildcard10556);
                    this_WildcardName_1=ruleWildcardName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardName_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalOrWildcard"


    // $ANTLR start "entryRuleNewArrayExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4869:1: entryRuleNewArrayExpr returns [EObject current=null] : iv_ruleNewArrayExpr= ruleNewArrayExpr EOF ;
    public final EObject entryRuleNewArrayExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNewArrayExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4870:2: (iv_ruleNewArrayExpr= ruleNewArrayExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4871:2: iv_ruleNewArrayExpr= ruleNewArrayExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNewArrayExprRule()); 
            }
            pushFollow(FOLLOW_ruleNewArrayExpr_in_entryRuleNewArrayExpr10591);
            iv_ruleNewArrayExpr=ruleNewArrayExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNewArrayExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNewArrayExpr10601); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNewArrayExpr"


    // $ANTLR start "ruleNewArrayExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4878:1: ruleNewArrayExpr returns [EObject current=null] : (otherlv_0= 'newarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) ) ) ;
    public final EObject ruleNewArrayExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_size_4_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4881:28: ( (otherlv_0= 'newarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4882:1: (otherlv_0= 'newarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4882:1: (otherlv_0= 'newarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4882:3: otherlv_0= 'newarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) )
            {
            otherlv_0=(Token)match(input,69,FOLLOW_69_in_ruleNewArrayExpr10638); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNewArrayExprAccess().getNewarrayKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,26,FOLLOW_26_in_ruleNewArrayExpr10650); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNewArrayExprAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4890:1: ( (lv_type_2_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4891:1: (lv_type_2_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4891:1: (lv_type_2_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4892:3: lv_type_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNewArrayExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleNewArrayExpr10671);
            lv_type_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewArrayExprRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,27,FOLLOW_27_in_ruleNewArrayExpr10683); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getNewArrayExprAccess().getRightParenthesisKeyword_3());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4912:1: ( (lv_size_4_0= ruleDimension ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4913:1: (lv_size_4_0= ruleDimension )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4913:1: (lv_size_4_0= ruleDimension )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4914:3: lv_size_4_0= ruleDimension
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNewArrayExprAccess().getSizeDimensionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleDimension_in_ruleNewArrayExpr10704);
            lv_size_4_0=ruleDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewArrayExprRule());
              	        }
                     		set(
                     			current, 
                     			"size",
                      		lv_size_4_0, 
                      		"Dimension");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNewArrayExpr"


    // $ANTLR start "entryRuleNewExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4938:1: entryRuleNewExpr returns [EObject current=null] : iv_ruleNewExpr= ruleNewExpr EOF ;
    public final EObject entryRuleNewExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNewExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4939:2: (iv_ruleNewExpr= ruleNewExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4940:2: iv_ruleNewExpr= ruleNewExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNewExprRule()); 
            }
            pushFollow(FOLLOW_ruleNewExpr_in_entryRuleNewExpr10740);
            iv_ruleNewExpr=ruleNewExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNewExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNewExpr10750); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNewExpr"


    // $ANTLR start "ruleNewExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4947:1: ruleNewExpr returns [EObject current=null] : (otherlv_0= 'new' ( (lv_type_1_0= ruleQualifiedName ) ) ) ;
    public final EObject ruleNewExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_type_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4950:28: ( (otherlv_0= 'new' ( (lv_type_1_0= ruleQualifiedName ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4951:1: (otherlv_0= 'new' ( (lv_type_1_0= ruleQualifiedName ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4951:1: (otherlv_0= 'new' ( (lv_type_1_0= ruleQualifiedName ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4951:3: otherlv_0= 'new' ( (lv_type_1_0= ruleQualifiedName ) )
            {
            otherlv_0=(Token)match(input,70,FOLLOW_70_in_ruleNewExpr10787); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNewExprAccess().getNewKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4955:1: ( (lv_type_1_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4956:1: (lv_type_1_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4956:1: (lv_type_1_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4957:3: lv_type_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNewExprAccess().getTypeQualifiedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleNewExpr10808);
            lv_type_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewExprRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNewExpr"


    // $ANTLR start "entryRuleNewMultiArrayExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4981:1: entryRuleNewMultiArrayExpr returns [EObject current=null] : iv_ruleNewMultiArrayExpr= ruleNewMultiArrayExpr EOF ;
    public final EObject entryRuleNewMultiArrayExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNewMultiArrayExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4982:2: (iv_ruleNewMultiArrayExpr= ruleNewMultiArrayExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4983:2: iv_ruleNewMultiArrayExpr= ruleNewMultiArrayExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNewMultiArrayExprRule()); 
            }
            pushFollow(FOLLOW_ruleNewMultiArrayExpr_in_entryRuleNewMultiArrayExpr10844);
            iv_ruleNewMultiArrayExpr=ruleNewMultiArrayExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNewMultiArrayExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNewMultiArrayExpr10854); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNewMultiArrayExpr"


    // $ANTLR start "ruleNewMultiArrayExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4990:1: ruleNewMultiArrayExpr returns [EObject current=null] : (otherlv_0= 'newmultiarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) )* ( (lv_emptySize_5_0= '[]' ) )* ) ;
    public final EObject ruleNewMultiArrayExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_emptySize_5_0=null;
        EObject lv_type_2_0 = null;

        EObject lv_size_4_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4993:28: ( (otherlv_0= 'newmultiarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) )* ( (lv_emptySize_5_0= '[]' ) )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4994:1: (otherlv_0= 'newmultiarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) )* ( (lv_emptySize_5_0= '[]' ) )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4994:1: (otherlv_0= 'newmultiarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) )* ( (lv_emptySize_5_0= '[]' ) )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:4994:3: otherlv_0= 'newmultiarray' otherlv_1= '(' ( (lv_type_2_0= ruleQualifiedName ) ) otherlv_3= ')' ( (lv_size_4_0= ruleDimension ) )* ( (lv_emptySize_5_0= '[]' ) )*
            {
            otherlv_0=(Token)match(input,71,FOLLOW_71_in_ruleNewMultiArrayExpr10891); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNewMultiArrayExprAccess().getNewmultiarrayKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,26,FOLLOW_26_in_ruleNewMultiArrayExpr10903); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNewMultiArrayExprAccess().getLeftParenthesisKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5002:1: ( (lv_type_2_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5003:1: (lv_type_2_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5003:1: (lv_type_2_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5004:3: lv_type_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNewMultiArrayExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleNewMultiArrayExpr10924);
            lv_type_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNewMultiArrayExprRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,27,FOLLOW_27_in_ruleNewMultiArrayExpr10936); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getNewMultiArrayExprAccess().getRightParenthesisKeyword_3());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5024:1: ( (lv_size_4_0= ruleDimension ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==73) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5025:1: (lv_size_4_0= ruleDimension )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5025:1: (lv_size_4_0= ruleDimension )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5026:3: lv_size_4_0= ruleDimension
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getNewMultiArrayExprAccess().getSizeDimensionParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleDimension_in_ruleNewMultiArrayExpr10957);
            	    lv_size_4_0=ruleDimension();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getNewMultiArrayExprRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"size",
            	              		lv_size_4_0, 
            	              		"Dimension");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5042:3: ( (lv_emptySize_5_0= '[]' ) )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==72) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5043:1: (lv_emptySize_5_0= '[]' )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5043:1: (lv_emptySize_5_0= '[]' )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5044:3: lv_emptySize_5_0= '[]'
            	    {
            	    lv_emptySize_5_0=(Token)match(input,72,FOLLOW_72_in_ruleNewMultiArrayExpr10976); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_emptySize_5_0, grammarAccess.getNewMultiArrayExprAccess().getEmptySizeLeftSquareBracketRightSquareBracketKeyword_5_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getNewMultiArrayExprRule());
            	      	        }
            	             		addWithLastConsumed(current, "emptySize", lv_emptySize_5_0, "[]");
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNewMultiArrayExpr"


    // $ANTLR start "entryRuleDimension"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5065:1: entryRuleDimension returns [EObject current=null] : iv_ruleDimension= ruleDimension EOF ;
    public final EObject entryRuleDimension() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDimension = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5066:2: (iv_ruleDimension= ruleDimension EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5067:2: iv_ruleDimension= ruleDimension EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDimensionRule()); 
            }
            pushFollow(FOLLOW_ruleDimension_in_entryRuleDimension11026);
            iv_ruleDimension=ruleDimension();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDimension; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDimension11036); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDimension"


    // $ANTLR start "ruleDimension"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5074:1: ruleDimension returns [EObject current=null] : (otherlv_0= '[' ( (lv_size_1_0= RULE_INT ) ) otherlv_2= ']' ) ;
    public final EObject ruleDimension() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_size_1_0=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5077:28: ( (otherlv_0= '[' ( (lv_size_1_0= RULE_INT ) ) otherlv_2= ']' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5078:1: (otherlv_0= '[' ( (lv_size_1_0= RULE_INT ) ) otherlv_2= ']' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5078:1: (otherlv_0= '[' ( (lv_size_1_0= RULE_INT ) ) otherlv_2= ']' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5078:3: otherlv_0= '[' ( (lv_size_1_0= RULE_INT ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,73,FOLLOW_73_in_ruleDimension11073); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDimensionAccess().getLeftSquareBracketKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5082:1: ( (lv_size_1_0= RULE_INT ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5083:1: (lv_size_1_0= RULE_INT )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5083:1: (lv_size_1_0= RULE_INT )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5084:3: lv_size_1_0= RULE_INT
            {
            lv_size_1_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleDimension11090); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_size_1_0, grammarAccess.getDimensionAccess().getSizeINTTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDimensionRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"size",
                      		lv_size_1_0, 
                      		"INT");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,74,FOLLOW_74_in_ruleDimension11107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDimensionAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDimension"


    // $ANTLR start "entryRuleUnopExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5112:1: entryRuleUnopExpr returns [EObject current=null] : iv_ruleUnopExpr= ruleUnopExpr EOF ;
    public final EObject entryRuleUnopExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnopExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5113:2: (iv_ruleUnopExpr= ruleUnopExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5114:2: iv_ruleUnopExpr= ruleUnopExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnopExprRule()); 
            }
            pushFollow(FOLLOW_ruleUnopExpr_in_entryRuleUnopExpr11143);
            iv_ruleUnopExpr=ruleUnopExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnopExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnopExpr11153); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnopExpr"


    // $ANTLR start "ruleUnopExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5121:1: ruleUnopExpr returns [EObject current=null] : (this_LengthExpr_0= ruleLengthExpr | this_NegExpr_1= ruleNegExpr ) ;
    public final EObject ruleUnopExpr() throws RecognitionException {
        EObject current = null;

        EObject this_LengthExpr_0 = null;

        EObject this_NegExpr_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5124:28: ( (this_LengthExpr_0= ruleLengthExpr | this_NegExpr_1= ruleNegExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5125:1: (this_LengthExpr_0= ruleLengthExpr | this_NegExpr_1= ruleNegExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5125:1: (this_LengthExpr_0= ruleLengthExpr | this_NegExpr_1= ruleNegExpr )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==75) ) {
                alt47=1;
            }
            else if ( (LA47_0==76) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5126:2: this_LengthExpr_0= ruleLengthExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnopExprAccess().getLengthExprParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLengthExpr_in_ruleUnopExpr11203);
                    this_LengthExpr_0=ruleLengthExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LengthExpr_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5139:2: this_NegExpr_1= ruleNegExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnopExprAccess().getNegExprParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNegExpr_in_ruleUnopExpr11233);
                    this_NegExpr_1=ruleNegExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NegExpr_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnopExpr"


    // $ANTLR start "entryRuleLengthExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5158:1: entryRuleLengthExpr returns [EObject current=null] : iv_ruleLengthExpr= ruleLengthExpr EOF ;
    public final EObject entryRuleLengthExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLengthExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5159:2: (iv_ruleLengthExpr= ruleLengthExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5160:2: iv_ruleLengthExpr= ruleLengthExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLengthExprRule()); 
            }
            pushFollow(FOLLOW_ruleLengthExpr_in_entryRuleLengthExpr11268);
            iv_ruleLengthExpr=ruleLengthExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLengthExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLengthExpr11278); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLengthExpr"


    // $ANTLR start "ruleLengthExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5167:1: ruleLengthExpr returns [EObject current=null] : (otherlv_0= 'lengthof' ( (lv_operand_1_0= ruleValue ) ) ) ;
    public final EObject ruleLengthExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_operand_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5170:28: ( (otherlv_0= 'lengthof' ( (lv_operand_1_0= ruleValue ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5171:1: (otherlv_0= 'lengthof' ( (lv_operand_1_0= ruleValue ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5171:1: (otherlv_0= 'lengthof' ( (lv_operand_1_0= ruleValue ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5171:3: otherlv_0= 'lengthof' ( (lv_operand_1_0= ruleValue ) )
            {
            otherlv_0=(Token)match(input,75,FOLLOW_75_in_ruleLengthExpr11315); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getLengthExprAccess().getLengthofKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5175:1: ( (lv_operand_1_0= ruleValue ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5176:1: (lv_operand_1_0= ruleValue )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5176:1: (lv_operand_1_0= ruleValue )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5177:3: lv_operand_1_0= ruleValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLengthExprAccess().getOperandValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValue_in_ruleLengthExpr11336);
            lv_operand_1_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLengthExprRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_1_0, 
                      		"Value");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLengthExpr"


    // $ANTLR start "entryRuleNegExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5201:1: entryRuleNegExpr returns [EObject current=null] : iv_ruleNegExpr= ruleNegExpr EOF ;
    public final EObject entryRuleNegExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpr = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5202:2: (iv_ruleNegExpr= ruleNegExpr EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5203:2: iv_ruleNegExpr= ruleNegExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExprRule()); 
            }
            pushFollow(FOLLOW_ruleNegExpr_in_entryRuleNegExpr11372);
            iv_ruleNegExpr=ruleNegExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpr; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNegExpr11382); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpr"


    // $ANTLR start "ruleNegExpr"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5210:1: ruleNegExpr returns [EObject current=null] : (otherlv_0= 'neg' ( (lv_operand_1_0= ruleValue ) ) ) ;
    public final EObject ruleNegExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_operand_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5213:28: ( (otherlv_0= 'neg' ( (lv_operand_1_0= ruleValue ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5214:1: (otherlv_0= 'neg' ( (lv_operand_1_0= ruleValue ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5214:1: (otherlv_0= 'neg' ( (lv_operand_1_0= ruleValue ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5214:3: otherlv_0= 'neg' ( (lv_operand_1_0= ruleValue ) )
            {
            otherlv_0=(Token)match(input,76,FOLLOW_76_in_ruleNegExpr11419); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNegExprAccess().getNegKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5218:1: ( (lv_operand_1_0= ruleValue ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5219:1: (lv_operand_1_0= ruleValue )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5219:1: (lv_operand_1_0= ruleValue )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5220:3: lv_operand_1_0= ruleValue
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNegExprAccess().getOperandValueParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleValue_in_ruleNegExpr11440);
            lv_operand_1_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNegExprRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_1_0, 
                      		"Value");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpr"


    // $ANTLR start "entryRuleLocal"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5244:1: entryRuleLocal returns [EObject current=null] : iv_ruleLocal= ruleLocal EOF ;
    public final EObject entryRuleLocal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocal = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5245:2: (iv_ruleLocal= ruleLocal EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5246:2: iv_ruleLocal= ruleLocal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalRule()); 
            }
            pushFollow(FOLLOW_ruleLocal_in_entryRuleLocal11476);
            iv_ruleLocal=ruleLocal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocal; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLocal11486); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocal"


    // $ANTLR start "ruleLocal"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5253:1: ruleLocal returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject ruleLocal() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5256:28: ( ( (lv_name_0_0= RULE_ID ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5257:1: ( (lv_name_0_0= RULE_ID ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5257:1: ( (lv_name_0_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5258:1: (lv_name_0_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5258:1: (lv_name_0_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5259:3: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleLocal11527); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getLocalAccess().getNameIDTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getLocalRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"ID");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocal"


    // $ANTLR start "entryRuleRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5283:1: entryRuleRef returns [EObject current=null] : iv_ruleRef= ruleRef EOF ;
    public final EObject entryRuleRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5284:2: (iv_ruleRef= ruleRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5285:2: iv_ruleRef= ruleRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRefRule()); 
            }
            pushFollow(FOLLOW_ruleRef_in_entryRuleRef11567);
            iv_ruleRef=ruleRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleRef11577); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRef"


    // $ANTLR start "ruleRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5292:1: ruleRef returns [EObject current=null] : (this_ConcreteRef_0= ruleConcreteRef | this_IdentityRef_1= ruleIdentityRef | this_LocalOrWildcard_2= ruleLocalOrWildcard ) ;
    public final EObject ruleRef() throws RecognitionException {
        EObject current = null;

        EObject this_ConcreteRef_0 = null;

        EObject this_IdentityRef_1 = null;

        EObject this_LocalOrWildcard_2 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5295:28: ( (this_ConcreteRef_0= ruleConcreteRef | this_IdentityRef_1= ruleIdentityRef | this_LocalOrWildcard_2= ruleLocalOrWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5296:1: (this_ConcreteRef_0= ruleConcreteRef | this_IdentityRef_1= ruleIdentityRef | this_LocalOrWildcard_2= ruleLocalOrWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5296:1: (this_ConcreteRef_0= ruleConcreteRef | this_IdentityRef_1= ruleIdentityRef | this_LocalOrWildcard_2= ruleLocalOrWildcard )
            int alt48=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA48_1 = input.LA(2);

                if ( (LA48_1==66||LA48_1==73) ) {
                    alt48=1;
                }
                else if ( (LA48_1==EOF||LA48_1==21||LA48_1==25||LA48_1==27||LA48_1==30||LA48_1==32||(LA48_1>=43 && LA48_1<=63)||LA48_1==74) ) {
                    alt48=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 1, input);

                    throw nvae;
                }
                }
                break;
            case 84:
                {
                int LA48_2 = input.LA(2);

                if ( (LA48_2==RULE_ID) ) {
                    int LA48_6 = input.LA(3);

                    if ( (LA48_6==85) ) {
                        int LA48_7 = input.LA(4);

                        if ( (LA48_7==66||LA48_7==73) ) {
                            alt48=1;
                        }
                        else if ( (LA48_7==EOF||LA48_7==21||LA48_7==25||LA48_7==27||LA48_7==30||LA48_7==32||(LA48_7>=43 && LA48_7<=63)||LA48_7==74) ) {
                            alt48=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 48, 7, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 6, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 2, input);

                    throw nvae;
                }
                }
                break;
            case 61:
                {
                alt48=1;
                }
                break;
            case 77:
                {
                alt48=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5297:2: this_ConcreteRef_0= ruleConcreteRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRefAccess().getConcreteRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleConcreteRef_in_ruleRef11627);
                    this_ConcreteRef_0=ruleConcreteRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConcreteRef_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5310:2: this_IdentityRef_1= ruleIdentityRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRefAccess().getIdentityRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleIdentityRef_in_ruleRef11657);
                    this_IdentityRef_1=ruleIdentityRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IdentityRef_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5323:2: this_LocalOrWildcard_2= ruleLocalOrWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRefAccess().getLocalOrWildcardParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLocalOrWildcard_in_ruleRef11687);
                    this_LocalOrWildcard_2=ruleLocalOrWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LocalOrWildcard_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRef"


    // $ANTLR start "entryRuleIdentityRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5342:1: entryRuleIdentityRef returns [EObject current=null] : iv_ruleIdentityRef= ruleIdentityRef EOF ;
    public final EObject entryRuleIdentityRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5343:2: (iv_ruleIdentityRef= ruleIdentityRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5344:2: iv_ruleIdentityRef= ruleIdentityRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRefRule()); 
            }
            pushFollow(FOLLOW_ruleIdentityRef_in_entryRuleIdentityRef11722);
            iv_ruleIdentityRef=ruleIdentityRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIdentityRef11732); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRef"


    // $ANTLR start "ruleIdentityRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5351:1: ruleIdentityRef returns [EObject current=null] : (this_ParameterRef_0= ruleParameterRef | this_ThisRef_1= ruleThisRef | this_CaughtExceptionRef_2= ruleCaughtExceptionRef ) ;
    public final EObject ruleIdentityRef() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterRef_0 = null;

        EObject this_ThisRef_1 = null;

        EObject this_CaughtExceptionRef_2 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5354:28: ( (this_ParameterRef_0= ruleParameterRef | this_ThisRef_1= ruleThisRef | this_CaughtExceptionRef_2= ruleCaughtExceptionRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5355:1: (this_ParameterRef_0= ruleParameterRef | this_ThisRef_1= ruleThisRef | this_CaughtExceptionRef_2= ruleCaughtExceptionRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5355:1: (this_ParameterRef_0= ruleParameterRef | this_ThisRef_1= ruleThisRef | this_CaughtExceptionRef_2= ruleCaughtExceptionRef )
            int alt49=3;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==77) ) {
                switch ( input.LA(2) ) {
                case RULE_ID:
                    {
                    alt49=1;
                    }
                    break;
                case 79:
                    {
                    alt49=3;
                    }
                    break;
                case 78:
                    {
                    alt49=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5356:2: this_ParameterRef_0= ruleParameterRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentityRefAccess().getParameterRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleParameterRef_in_ruleIdentityRef11782);
                    this_ParameterRef_0=ruleParameterRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ParameterRef_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5369:2: this_ThisRef_1= ruleThisRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentityRefAccess().getThisRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleThisRef_in_ruleIdentityRef11812);
                    this_ThisRef_1=ruleThisRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ThisRef_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5382:2: this_CaughtExceptionRef_2= ruleCaughtExceptionRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentityRefAccess().getCaughtExceptionRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleCaughtExceptionRef_in_ruleIdentityRef11842);
                    this_CaughtExceptionRef_2=ruleCaughtExceptionRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CaughtExceptionRef_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRef"


    // $ANTLR start "entryRuleParameterRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5401:1: entryRuleParameterRef returns [EObject current=null] : iv_ruleParameterRef= ruleParameterRef EOF ;
    public final EObject entryRuleParameterRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5402:2: (iv_ruleParameterRef= ruleParameterRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5403:2: iv_ruleParameterRef= ruleParameterRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRefRule()); 
            }
            pushFollow(FOLLOW_ruleParameterRef_in_entryRuleParameterRef11877);
            iv_ruleParameterRef=ruleParameterRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleParameterRef11887); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterRef"


    // $ANTLR start "ruleParameterRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5410:1: ruleParameterRef returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) ) ;
    public final EObject ruleParameterRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5413:28: ( (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5414:1: (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5414:1: (otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5414:3: otherlv_0= '@' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) )
            {
            otherlv_0=(Token)match(input,77,FOLLOW_77_in_ruleParameterRef11924); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParameterRefAccess().getCommercialAtKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5418:1: ( (lv_name_1_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5419:1: (lv_name_1_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5419:1: (lv_name_1_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5420:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleParameterRef11941); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getParameterRefAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterRefRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ID");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,28,FOLLOW_28_in_ruleParameterRef11958); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getParameterRefAccess().getColonKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5440:1: ( (lv_type_3_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5441:1: (lv_type_3_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5441:1: (lv_type_3_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5442:3: lv_type_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleParameterRef11979);
            lv_type_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterRefRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterRef"


    // $ANTLR start "entryRuleThisRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5466:1: entryRuleThisRef returns [EObject current=null] : iv_ruleThisRef= ruleThisRef EOF ;
    public final EObject entryRuleThisRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5467:2: (iv_ruleThisRef= ruleThisRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5468:2: iv_ruleThisRef= ruleThisRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisRefRule()); 
            }
            pushFollow(FOLLOW_ruleThisRef_in_entryRuleThisRef12015);
            iv_ruleThisRef=ruleThisRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleThisRef12025); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThisRef"


    // $ANTLR start "ruleThisRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5475:1: ruleThisRef returns [EObject current=null] : (otherlv_0= '@' otherlv_1= 'this' otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) ) ;
    public final EObject ruleThisRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_type_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5478:28: ( (otherlv_0= '@' otherlv_1= 'this' otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5479:1: (otherlv_0= '@' otherlv_1= 'this' otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5479:1: (otherlv_0= '@' otherlv_1= 'this' otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5479:3: otherlv_0= '@' otherlv_1= 'this' otherlv_2= ':' ( (lv_type_3_0= ruleQualifiedName ) )
            {
            otherlv_0=(Token)match(input,77,FOLLOW_77_in_ruleThisRef12062); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getThisRefAccess().getCommercialAtKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,78,FOLLOW_78_in_ruleThisRef12074); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisRefAccess().getThisKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,28,FOLLOW_28_in_ruleThisRef12086); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getThisRefAccess().getColonKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5491:1: ( (lv_type_3_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5492:1: (lv_type_3_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5492:1: (lv_type_3_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5493:3: lv_type_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThisRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleThisRef12107);
            lv_type_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThisRefRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThisRef"


    // $ANTLR start "entryRuleCaughtExceptionRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5517:1: entryRuleCaughtExceptionRef returns [EObject current=null] : iv_ruleCaughtExceptionRef= ruleCaughtExceptionRef EOF ;
    public final EObject entryRuleCaughtExceptionRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaughtExceptionRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5518:2: (iv_ruleCaughtExceptionRef= ruleCaughtExceptionRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5519:2: iv_ruleCaughtExceptionRef= ruleCaughtExceptionRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaughtExceptionRefRule()); 
            }
            pushFollow(FOLLOW_ruleCaughtExceptionRef_in_entryRuleCaughtExceptionRef12143);
            iv_ruleCaughtExceptionRef=ruleCaughtExceptionRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaughtExceptionRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleCaughtExceptionRef12153); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaughtExceptionRef"


    // $ANTLR start "ruleCaughtExceptionRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5526:1: ruleCaughtExceptionRef returns [EObject current=null] : ( () otherlv_1= '@' otherlv_2= 'caughtexception' ) ;
    public final EObject ruleCaughtExceptionRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5529:28: ( ( () otherlv_1= '@' otherlv_2= 'caughtexception' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5530:1: ( () otherlv_1= '@' otherlv_2= 'caughtexception' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5530:1: ( () otherlv_1= '@' otherlv_2= 'caughtexception' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5530:2: () otherlv_1= '@' otherlv_2= 'caughtexception'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5530:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5531:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCaughtExceptionRefAccess().getCaughtExceptionRefAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,77,FOLLOW_77_in_ruleCaughtExceptionRef12202); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCaughtExceptionRefAccess().getCommercialAtKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,79,FOLLOW_79_in_ruleCaughtExceptionRef12214); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaughtExceptionRefAccess().getCaughtexceptionKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaughtExceptionRef"


    // $ANTLR start "entryRuleConcreteRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5555:1: entryRuleConcreteRef returns [EObject current=null] : iv_ruleConcreteRef= ruleConcreteRef EOF ;
    public final EObject entryRuleConcreteRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5556:2: (iv_ruleConcreteRef= ruleConcreteRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5557:2: iv_ruleConcreteRef= ruleConcreteRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteRefRule()); 
            }
            pushFollow(FOLLOW_ruleConcreteRef_in_entryRuleConcreteRef12250);
            iv_ruleConcreteRef=ruleConcreteRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleConcreteRef12260); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteRef"


    // $ANTLR start "ruleConcreteRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5564:1: ruleConcreteRef returns [EObject current=null] : (this_ArrayRef_0= ruleArrayRef | this_FieldRef_1= ruleFieldRef ) ;
    public final EObject ruleConcreteRef() throws RecognitionException {
        EObject current = null;

        EObject this_ArrayRef_0 = null;

        EObject this_FieldRef_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5567:28: ( (this_ArrayRef_0= ruleArrayRef | this_FieldRef_1= ruleFieldRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5568:1: (this_ArrayRef_0= ruleArrayRef | this_FieldRef_1= ruleFieldRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5568:1: (this_ArrayRef_0= ruleArrayRef | this_FieldRef_1= ruleFieldRef )
            int alt50=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA50_1 = input.LA(2);

                if ( (LA50_1==66) ) {
                    alt50=2;
                }
                else if ( (LA50_1==73) ) {
                    alt50=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
                }
                break;
            case 84:
                {
                int LA50_2 = input.LA(2);

                if ( (LA50_2==RULE_ID) ) {
                    int LA50_5 = input.LA(3);

                    if ( (LA50_5==85) ) {
                        int LA50_6 = input.LA(4);

                        if ( (LA50_6==66) ) {
                            alt50=2;
                        }
                        else if ( (LA50_6==73) ) {
                            alt50=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 50, 6, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 50, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 2, input);

                    throw nvae;
                }
                }
                break;
            case 61:
                {
                alt50=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5569:2: this_ArrayRef_0= ruleArrayRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConcreteRefAccess().getArrayRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleArrayRef_in_ruleConcreteRef12310);
                    this_ArrayRef_0=ruleArrayRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ArrayRef_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5582:2: this_FieldRef_1= ruleFieldRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConcreteRefAccess().getFieldRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleFieldRef_in_ruleConcreteRef12340);
                    this_FieldRef_1=ruleFieldRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FieldRef_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteRef"


    // $ANTLR start "entryRuleArrayRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5601:1: entryRuleArrayRef returns [EObject current=null] : iv_ruleArrayRef= ruleArrayRef EOF ;
    public final EObject entryRuleArrayRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5602:2: (iv_ruleArrayRef= ruleArrayRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5603:2: iv_ruleArrayRef= ruleArrayRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayRefRule()); 
            }
            pushFollow(FOLLOW_ruleArrayRef_in_entryRuleArrayRef12375);
            iv_ruleArrayRef=ruleArrayRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleArrayRef12385); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayRef"


    // $ANTLR start "ruleArrayRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5610:1: ruleArrayRef returns [EObject current=null] : ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '[' ( (lv_index_2_0= ruleNonExpr ) ) otherlv_3= ']' ) ;
    public final EObject ruleArrayRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_base_0_0 = null;

        EObject lv_index_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5613:28: ( ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '[' ( (lv_index_2_0= ruleNonExpr ) ) otherlv_3= ']' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5614:1: ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '[' ( (lv_index_2_0= ruleNonExpr ) ) otherlv_3= ']' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5614:1: ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '[' ( (lv_index_2_0= ruleNonExpr ) ) otherlv_3= ']' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5614:2: ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '[' ( (lv_index_2_0= ruleNonExpr ) ) otherlv_3= ']'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5614:2: ( (lv_base_0_0= ruleLocalOrWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5615:1: (lv_base_0_0= ruleLocalOrWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5615:1: (lv_base_0_0= ruleLocalOrWildcard )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5616:3: lv_base_0_0= ruleLocalOrWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayRefAccess().getBaseLocalOrWildcardParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocalOrWildcard_in_ruleArrayRef12431);
            lv_base_0_0=ruleLocalOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayRefRule());
              	        }
                     		set(
                     			current, 
                     			"base",
                      		lv_base_0_0, 
                      		"LocalOrWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,73,FOLLOW_73_in_ruleArrayRef12443); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayRefAccess().getLeftSquareBracketKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5636:1: ( (lv_index_2_0= ruleNonExpr ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5637:1: (lv_index_2_0= ruleNonExpr )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5637:1: (lv_index_2_0= ruleNonExpr )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5638:3: lv_index_2_0= ruleNonExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayRefAccess().getIndexNonExprParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleNonExpr_in_ruleArrayRef12464);
            lv_index_2_0=ruleNonExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayRefRule());
              	        }
                     		set(
                     			current, 
                     			"index",
                      		lv_index_2_0, 
                      		"NonExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,74,FOLLOW_74_in_ruleArrayRef12476); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getArrayRefAccess().getRightSquareBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayRef"


    // $ANTLR start "entryRuleFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5666:1: entryRuleFieldRef returns [EObject current=null] : iv_ruleFieldRef= ruleFieldRef EOF ;
    public final EObject entryRuleFieldRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFieldRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5667:2: (iv_ruleFieldRef= ruleFieldRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5668:2: iv_ruleFieldRef= ruleFieldRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldRefRule()); 
            }
            pushFollow(FOLLOW_ruleFieldRef_in_entryRuleFieldRef12512);
            iv_ruleFieldRef=ruleFieldRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFieldRef12522); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFieldRef"


    // $ANTLR start "ruleFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5675:1: ruleFieldRef returns [EObject current=null] : (this_StaticFieldRef_0= ruleStaticFieldRef | this_InstanceFieldRef_1= ruleInstanceFieldRef ) ;
    public final EObject ruleFieldRef() throws RecognitionException {
        EObject current = null;

        EObject this_StaticFieldRef_0 = null;

        EObject this_InstanceFieldRef_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5678:28: ( (this_StaticFieldRef_0= ruleStaticFieldRef | this_InstanceFieldRef_1= ruleInstanceFieldRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5679:1: (this_StaticFieldRef_0= ruleStaticFieldRef | this_InstanceFieldRef_1= ruleInstanceFieldRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5679:1: (this_StaticFieldRef_0= ruleStaticFieldRef | this_InstanceFieldRef_1= ruleInstanceFieldRef )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==61) ) {
                alt51=1;
            }
            else if ( (LA51_0==RULE_ID||LA51_0==84) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5680:2: this_StaticFieldRef_0= ruleStaticFieldRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFieldRefAccess().getStaticFieldRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleStaticFieldRef_in_ruleFieldRef12572);
                    this_StaticFieldRef_0=ruleStaticFieldRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StaticFieldRef_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5693:2: this_InstanceFieldRef_1= ruleInstanceFieldRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFieldRefAccess().getInstanceFieldRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleInstanceFieldRef_in_ruleFieldRef12602);
                    this_InstanceFieldRef_1=ruleInstanceFieldRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InstanceFieldRef_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFieldRef"


    // $ANTLR start "entryRuleStaticFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5712:1: entryRuleStaticFieldRef returns [EObject current=null] : iv_ruleStaticFieldRef= ruleStaticFieldRef EOF ;
    public final EObject entryRuleStaticFieldRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStaticFieldRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5713:2: (iv_ruleStaticFieldRef= ruleStaticFieldRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5714:2: iv_ruleStaticFieldRef= ruleStaticFieldRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStaticFieldRefRule()); 
            }
            pushFollow(FOLLOW_ruleStaticFieldRef_in_entryRuleStaticFieldRef12637);
            iv_ruleStaticFieldRef=ruleStaticFieldRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStaticFieldRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStaticFieldRef12647); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStaticFieldRef"


    // $ANTLR start "ruleStaticFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5721:1: ruleStaticFieldRef returns [EObject current=null] : ( (lv_fieldRef_0_0= ruleSootFieldRef ) ) ;
    public final EObject ruleStaticFieldRef() throws RecognitionException {
        EObject current = null;

        EObject lv_fieldRef_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5724:28: ( ( (lv_fieldRef_0_0= ruleSootFieldRef ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5725:1: ( (lv_fieldRef_0_0= ruleSootFieldRef ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5725:1: ( (lv_fieldRef_0_0= ruleSootFieldRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5726:1: (lv_fieldRef_0_0= ruleSootFieldRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5726:1: (lv_fieldRef_0_0= ruleSootFieldRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5727:3: lv_fieldRef_0_0= ruleSootFieldRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStaticFieldRefAccess().getFieldRefSootFieldRefParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleSootFieldRef_in_ruleStaticFieldRef12692);
            lv_fieldRef_0_0=ruleSootFieldRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStaticFieldRefRule());
              	        }
                     		set(
                     			current, 
                     			"fieldRef",
                      		lv_fieldRef_0_0, 
                      		"SootFieldRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStaticFieldRef"


    // $ANTLR start "entryRuleSootFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5751:1: entryRuleSootFieldRef returns [EObject current=null] : iv_ruleSootFieldRef= ruleSootFieldRef EOF ;
    public final EObject entryRuleSootFieldRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSootFieldRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5752:2: (iv_ruleSootFieldRef= ruleSootFieldRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5753:2: iv_ruleSootFieldRef= ruleSootFieldRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSootFieldRefRule()); 
            }
            pushFollow(FOLLOW_ruleSootFieldRef_in_entryRuleSootFieldRef12727);
            iv_ruleSootFieldRef=ruleSootFieldRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSootFieldRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleSootFieldRef12737); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSootFieldRef"


    // $ANTLR start "ruleSootFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5760:1: ruleSootFieldRef returns [EObject current=null] : (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_Type_3_0= ruleQualifiedName ) ) ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '>' ) ;
    public final EObject ruleSootFieldRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_name_4_0=null;
        Token otherlv_5=null;
        EObject lv_class_1_0 = null;

        EObject lv_Type_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5763:28: ( (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_Type_3_0= ruleQualifiedName ) ) ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '>' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5764:1: (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_Type_3_0= ruleQualifiedName ) ) ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '>' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5764:1: (otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_Type_3_0= ruleQualifiedName ) ) ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '>' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5764:3: otherlv_0= '<' ( (lv_class_1_0= ruleQualifiedName ) ) otherlv_2= ':' ( (lv_Type_3_0= ruleQualifiedName ) ) ( (lv_name_4_0= RULE_ID ) ) otherlv_5= '>'
            {
            otherlv_0=(Token)match(input,61,FOLLOW_61_in_ruleSootFieldRef12774); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSootFieldRefAccess().getLessThanSignKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5768:1: ( (lv_class_1_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5769:1: (lv_class_1_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5769:1: (lv_class_1_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5770:3: lv_class_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSootFieldRefAccess().getClassQualifiedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleSootFieldRef12795);
            lv_class_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSootFieldRefRule());
              	        }
                     		set(
                     			current, 
                     			"class",
                      		lv_class_1_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,28,FOLLOW_28_in_ruleSootFieldRef12807); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getSootFieldRefAccess().getColonKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5790:1: ( (lv_Type_3_0= ruleQualifiedName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5791:1: (lv_Type_3_0= ruleQualifiedName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5791:1: (lv_Type_3_0= ruleQualifiedName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5792:3: lv_Type_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSootFieldRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_ruleSootFieldRef12828);
            lv_Type_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSootFieldRefRule());
              	        }
                     		set(
                     			current, 
                     			"Type",
                      		lv_Type_3_0, 
                      		"QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5808:2: ( (lv_name_4_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5809:1: (lv_name_4_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5809:1: (lv_name_4_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5810:3: lv_name_4_0= RULE_ID
            {
            lv_name_4_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSootFieldRef12845); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_4_0, grammarAccess.getSootFieldRefAccess().getNameIDTerminalRuleCall_4_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSootFieldRefRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_4_0, 
                      		"ID");
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,59,FOLLOW_59_in_ruleSootFieldRef12862); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getSootFieldRefAccess().getGreaterThanSignKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSootFieldRef"


    // $ANTLR start "entryRuleInstanceFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5838:1: entryRuleInstanceFieldRef returns [EObject current=null] : iv_ruleInstanceFieldRef= ruleInstanceFieldRef EOF ;
    public final EObject entryRuleInstanceFieldRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInstanceFieldRef = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5839:2: (iv_ruleInstanceFieldRef= ruleInstanceFieldRef EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5840:2: iv_ruleInstanceFieldRef= ruleInstanceFieldRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInstanceFieldRefRule()); 
            }
            pushFollow(FOLLOW_ruleInstanceFieldRef_in_entryRuleInstanceFieldRef12898);
            iv_ruleInstanceFieldRef=ruleInstanceFieldRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInstanceFieldRef; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleInstanceFieldRef12908); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInstanceFieldRef"


    // $ANTLR start "ruleInstanceFieldRef"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5847:1: ruleInstanceFieldRef returns [EObject current=null] : ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '.' ( (lv_fieldRef_2_0= ruleFieldRef ) ) ) ;
    public final EObject ruleInstanceFieldRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_base_0_0 = null;

        EObject lv_fieldRef_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5850:28: ( ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '.' ( (lv_fieldRef_2_0= ruleFieldRef ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5851:1: ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '.' ( (lv_fieldRef_2_0= ruleFieldRef ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5851:1: ( ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '.' ( (lv_fieldRef_2_0= ruleFieldRef ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5851:2: ( (lv_base_0_0= ruleLocalOrWildcard ) ) otherlv_1= '.' ( (lv_fieldRef_2_0= ruleFieldRef ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5851:2: ( (lv_base_0_0= ruleLocalOrWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5852:1: (lv_base_0_0= ruleLocalOrWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5852:1: (lv_base_0_0= ruleLocalOrWildcard )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5853:3: lv_base_0_0= ruleLocalOrWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInstanceFieldRefAccess().getBaseLocalOrWildcardParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleLocalOrWildcard_in_ruleInstanceFieldRef12954);
            lv_base_0_0=ruleLocalOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInstanceFieldRefRule());
              	        }
                     		set(
                     			current, 
                     			"base",
                      		lv_base_0_0, 
                      		"LocalOrWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,66,FOLLOW_66_in_ruleInstanceFieldRef12966); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInstanceFieldRefAccess().getFullStopKeyword_1());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5873:1: ( (lv_fieldRef_2_0= ruleFieldRef ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5874:1: (lv_fieldRef_2_0= ruleFieldRef )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5874:1: (lv_fieldRef_2_0= ruleFieldRef )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5875:3: lv_fieldRef_2_0= ruleFieldRef
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInstanceFieldRefAccess().getFieldRefFieldRefParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleFieldRef_in_ruleInstanceFieldRef12987);
            lv_fieldRef_2_0=ruleFieldRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInstanceFieldRefRule());
              	        }
                     		set(
                     			current, 
                     			"fieldRef",
                      		lv_fieldRef_2_0, 
                      		"FieldRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInstanceFieldRef"


    // $ANTLR start "entryRuleConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5899:1: entryRuleConstant returns [EObject current=null] : iv_ruleConstant= ruleConstant EOF ;
    public final EObject entryRuleConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5900:2: (iv_ruleConstant= ruleConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5901:2: iv_ruleConstant= ruleConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantRule()); 
            }
            pushFollow(FOLLOW_ruleConstant_in_entryRuleConstant13023);
            iv_ruleConstant=ruleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleConstant13033); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstant"


    // $ANTLR start "ruleConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5908:1: ruleConstant returns [EObject current=null] : (this_ClassConstant_0= ruleClassConstant | this_NullConstant_1= ruleNullConstant | this_NumericConstant_2= ruleNumericConstant | this_StringConstant_3= ruleStringConstant ) ;
    public final EObject ruleConstant() throws RecognitionException {
        EObject current = null;

        EObject this_ClassConstant_0 = null;

        EObject this_NullConstant_1 = null;

        EObject this_NumericConstant_2 = null;

        EObject this_StringConstant_3 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5911:28: ( (this_ClassConstant_0= ruleClassConstant | this_NullConstant_1= ruleNullConstant | this_NumericConstant_2= ruleNumericConstant | this_StringConstant_3= ruleStringConstant ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5912:1: (this_ClassConstant_0= ruleClassConstant | this_NullConstant_1= ruleNullConstant | this_NumericConstant_2= ruleNumericConstant | this_StringConstant_3= ruleStringConstant )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5912:1: (this_ClassConstant_0= ruleClassConstant | this_NullConstant_1= ruleNullConstant | this_NumericConstant_2= ruleNumericConstant | this_StringConstant_3= ruleStringConstant )
            int alt52=4;
            switch ( input.LA(1) ) {
            case 17:
                {
                alt52=1;
                }
                break;
            case 80:
                {
                alt52=2;
                }
                break;
            case RULE_INT:
                {
                alt52=3;
                }
                break;
            case RULE_STRING:
                {
                alt52=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5913:2: this_ClassConstant_0= ruleClassConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getClassConstantParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleClassConstant_in_ruleConstant13083);
                    this_ClassConstant_0=ruleClassConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ClassConstant_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5926:2: this_NullConstant_1= ruleNullConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getNullConstantParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNullConstant_in_ruleConstant13113);
                    this_NullConstant_1=ruleNullConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NullConstant_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5939:2: this_NumericConstant_2= ruleNumericConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getNumericConstantParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleNumericConstant_in_ruleConstant13143);
                    this_NumericConstant_2=ruleNumericConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NumericConstant_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5952:2: this_StringConstant_3= ruleStringConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstantAccess().getStringConstantParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleStringConstant_in_ruleConstant13173);
                    this_StringConstant_3=ruleStringConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringConstant_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstant"


    // $ANTLR start "entryRuleClassConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5971:1: entryRuleClassConstant returns [EObject current=null] : iv_ruleClassConstant= ruleClassConstant EOF ;
    public final EObject entryRuleClassConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5972:2: (iv_ruleClassConstant= ruleClassConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5973:2: iv_ruleClassConstant= ruleClassConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassConstantRule()); 
            }
            pushFollow(FOLLOW_ruleClassConstant_in_entryRuleClassConstant13208);
            iv_ruleClassConstant=ruleClassConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleClassConstant13218); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassConstant"


    // $ANTLR start "ruleClassConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5980:1: ruleClassConstant returns [EObject current=null] : (otherlv_0= 'class' ( (lv_name_1_0= ruleQualifiedNameOrWildcard ) ) ) ;
    public final EObject ruleClassConstant() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_name_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5983:28: ( (otherlv_0= 'class' ( (lv_name_1_0= ruleQualifiedNameOrWildcard ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5984:1: (otherlv_0= 'class' ( (lv_name_1_0= ruleQualifiedNameOrWildcard ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5984:1: (otherlv_0= 'class' ( (lv_name_1_0= ruleQualifiedNameOrWildcard ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5984:3: otherlv_0= 'class' ( (lv_name_1_0= ruleQualifiedNameOrWildcard ) )
            {
            otherlv_0=(Token)match(input,17,FOLLOW_17_in_ruleClassConstant13255); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getClassConstantAccess().getClassKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5988:1: ( (lv_name_1_0= ruleQualifiedNameOrWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5989:1: (lv_name_1_0= ruleQualifiedNameOrWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5989:1: (lv_name_1_0= ruleQualifiedNameOrWildcard )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:5990:3: lv_name_1_0= ruleQualifiedNameOrWildcard
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getClassConstantAccess().getNameQualifiedNameOrWildcardParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQualifiedNameOrWildcard_in_ruleClassConstant13276);
            lv_name_1_0=ruleQualifiedNameOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getClassConstantRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"QualifiedNameOrWildcard");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassConstant"


    // $ANTLR start "entryRuleQualifiedNameOrWildcard"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6014:1: entryRuleQualifiedNameOrWildcard returns [EObject current=null] : iv_ruleQualifiedNameOrWildcard= ruleQualifiedNameOrWildcard EOF ;
    public final EObject entryRuleQualifiedNameOrWildcard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedNameOrWildcard = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6015:2: (iv_ruleQualifiedNameOrWildcard= ruleQualifiedNameOrWildcard EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6016:2: iv_ruleQualifiedNameOrWildcard= ruleQualifiedNameOrWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameOrWildcardRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedNameOrWildcard_in_entryRuleQualifiedNameOrWildcard13312);
            iv_ruleQualifiedNameOrWildcard=ruleQualifiedNameOrWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameOrWildcard; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedNameOrWildcard13322); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameOrWildcard"


    // $ANTLR start "ruleQualifiedNameOrWildcard"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6023:1: ruleQualifiedNameOrWildcard returns [EObject current=null] : (this_QualifiedName_0= ruleQualifiedName | this_Wildcard_1= ruleWildcard ) ;
    public final EObject ruleQualifiedNameOrWildcard() throws RecognitionException {
        EObject current = null;

        EObject this_QualifiedName_0 = null;

        EObject this_Wildcard_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6026:28: ( (this_QualifiedName_0= ruleQualifiedName | this_Wildcard_1= ruleWildcard ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6027:1: (this_QualifiedName_0= ruleQualifiedName | this_Wildcard_1= ruleWildcard )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6027:1: (this_QualifiedName_0= ruleQualifiedName | this_Wildcard_1= ruleWildcard )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_ID) ) {
                alt53=1;
            }
            else if ( (LA53_0==84) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6028:2: this_QualifiedName_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQualifiedNameOrWildcardAccess().getQualifiedNameParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleQualifiedName_in_ruleQualifiedNameOrWildcard13372);
                    this_QualifiedName_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_QualifiedName_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6041:2: this_Wildcard_1= ruleWildcard
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getQualifiedNameOrWildcardAccess().getWildcardParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcard_in_ruleQualifiedNameOrWildcard13402);
                    this_Wildcard_1=ruleWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Wildcard_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameOrWildcard"


    // $ANTLR start "entryRuleNullConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6062:1: entryRuleNullConstant returns [EObject current=null] : iv_ruleNullConstant= ruleNullConstant EOF ;
    public final EObject entryRuleNullConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6063:2: (iv_ruleNullConstant= ruleNullConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6064:2: iv_ruleNullConstant= ruleNullConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullConstantRule()); 
            }
            pushFollow(FOLLOW_ruleNullConstant_in_entryRuleNullConstant13439);
            iv_ruleNullConstant=ruleNullConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNullConstant13449); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullConstant"


    // $ANTLR start "ruleNullConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6071:1: ruleNullConstant returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullConstant() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6074:28: ( ( () otherlv_1= 'null' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6075:1: ( () otherlv_1= 'null' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6075:1: ( () otherlv_1= 'null' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6075:2: () otherlv_1= 'null'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6075:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6076:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullConstantAccess().getNullConstantAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_80_in_ruleNullConstant13498); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullConstantAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullConstant"


    // $ANTLR start "entryRuleNumericConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6096:1: entryRuleNumericConstant returns [EObject current=null] : iv_ruleNumericConstant= ruleNumericConstant EOF ;
    public final EObject entryRuleNumericConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumericConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6097:2: (iv_ruleNumericConstant= ruleNumericConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6098:2: iv_ruleNumericConstant= ruleNumericConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericConstantRule()); 
            }
            pushFollow(FOLLOW_ruleNumericConstant_in_entryRuleNumericConstant13534);
            iv_ruleNumericConstant=ruleNumericConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumericConstant13544); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumericConstant"


    // $ANTLR start "ruleNumericConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6105:1: ruleNumericConstant returns [EObject current=null] : (this_IntConstant_0= ruleIntConstant | this_LongConstant_1= ruleLongConstant | this_DoubleConstant_2= ruleDoubleConstant | this_FloatConstant_3= ruleFloatConstant ) ;
    public final EObject ruleNumericConstant() throws RecognitionException {
        EObject current = null;

        EObject this_IntConstant_0 = null;

        EObject this_LongConstant_1 = null;

        EObject this_DoubleConstant_2 = null;

        EObject this_FloatConstant_3 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6108:28: ( (this_IntConstant_0= ruleIntConstant | this_LongConstant_1= ruleLongConstant | this_DoubleConstant_2= ruleDoubleConstant | this_FloatConstant_3= ruleFloatConstant ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6109:1: (this_IntConstant_0= ruleIntConstant | this_LongConstant_1= ruleLongConstant | this_DoubleConstant_2= ruleDoubleConstant | this_FloatConstant_3= ruleFloatConstant )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6109:1: (this_IntConstant_0= ruleIntConstant | this_LongConstant_1= ruleLongConstant | this_DoubleConstant_2= ruleDoubleConstant | this_FloatConstant_3= ruleFloatConstant )
            int alt54=4;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_INT) ) {
                switch ( input.LA(2) ) {
                case 82:
                    {
                    alt54=3;
                    }
                    break;
                case 83:
                    {
                    alt54=4;
                    }
                    break;
                case 81:
                    {
                    alt54=2;
                    }
                    break;
                case EOF:
                case 21:
                case 25:
                case 27:
                case 32:
                case 43:
                case 44:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 74:
                    {
                    alt54=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6110:2: this_IntConstant_0= ruleIntConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericConstantAccess().getIntConstantParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleIntConstant_in_ruleNumericConstant13594);
                    this_IntConstant_0=ruleIntConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntConstant_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6123:2: this_LongConstant_1= ruleLongConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericConstantAccess().getLongConstantParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleLongConstant_in_ruleNumericConstant13624);
                    this_LongConstant_1=ruleLongConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LongConstant_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6136:2: this_DoubleConstant_2= ruleDoubleConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericConstantAccess().getDoubleConstantParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleDoubleConstant_in_ruleNumericConstant13654);
                    this_DoubleConstant_2=ruleDoubleConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DoubleConstant_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6149:2: this_FloatConstant_3= ruleFloatConstant
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericConstantAccess().getFloatConstantParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleFloatConstant_in_ruleNumericConstant13684);
                    this_FloatConstant_3=ruleFloatConstant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FloatConstant_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumericConstant"


    // $ANTLR start "entryRuleIntConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6168:1: entryRuleIntConstant returns [EObject current=null] : iv_ruleIntConstant= ruleIntConstant EOF ;
    public final EObject entryRuleIntConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6169:2: (iv_ruleIntConstant= ruleIntConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6170:2: iv_ruleIntConstant= ruleIntConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntConstantRule()); 
            }
            pushFollow(FOLLOW_ruleIntConstant_in_entryRuleIntConstant13719);
            iv_ruleIntConstant=ruleIntConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleIntConstant13729); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntConstant"


    // $ANTLR start "ruleIntConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6177:1: ruleIntConstant returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntConstant() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6180:28: ( ( (lv_value_0_0= RULE_INT ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6181:1: ( (lv_value_0_0= RULE_INT ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6181:1: ( (lv_value_0_0= RULE_INT ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6182:1: (lv_value_0_0= RULE_INT )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6182:1: (lv_value_0_0= RULE_INT )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6183:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleIntConstant13770); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getIntConstantAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIntConstantRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntConstant"


    // $ANTLR start "entryRuleLongConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6207:1: entryRuleLongConstant returns [EObject current=null] : iv_ruleLongConstant= ruleLongConstant EOF ;
    public final EObject entryRuleLongConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLongConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6208:2: (iv_ruleLongConstant= ruleLongConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6209:2: iv_ruleLongConstant= ruleLongConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLongConstantRule()); 
            }
            pushFollow(FOLLOW_ruleLongConstant_in_entryRuleLongConstant13810);
            iv_ruleLongConstant=ruleLongConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLongConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleLongConstant13820); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLongConstant"


    // $ANTLR start "ruleLongConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6216:1: ruleLongConstant returns [EObject current=null] : ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'L' ) ;
    public final EObject ruleLongConstant() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6219:28: ( ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'L' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6220:1: ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'L' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6220:1: ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'L' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6220:2: ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'L'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6220:2: ( (lv_value_0_0= RULE_INT ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6221:1: (lv_value_0_0= RULE_INT )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6221:1: (lv_value_0_0= RULE_INT )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6222:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleLongConstant13862); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getLongConstantAccess().getValueINTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getLongConstantRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"INT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,81,FOLLOW_81_in_ruleLongConstant13879); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLongConstantAccess().getLKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLongConstant"


    // $ANTLR start "entryRuleDoubleConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6250:1: entryRuleDoubleConstant returns [EObject current=null] : iv_ruleDoubleConstant= ruleDoubleConstant EOF ;
    public final EObject entryRuleDoubleConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoubleConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6251:2: (iv_ruleDoubleConstant= ruleDoubleConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6252:2: iv_ruleDoubleConstant= ruleDoubleConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoubleConstantRule()); 
            }
            pushFollow(FOLLOW_ruleDoubleConstant_in_entryRuleDoubleConstant13915);
            iv_ruleDoubleConstant=ruleDoubleConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoubleConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleDoubleConstant13925); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDoubleConstant"


    // $ANTLR start "ruleDoubleConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6259:1: ruleDoubleConstant returns [EObject current=null] : ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'D' ) ;
    public final EObject ruleDoubleConstant() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6262:28: ( ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'D' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6263:1: ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'D' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6263:1: ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'D' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6263:2: ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'D'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6263:2: ( (lv_value_0_0= RULE_INT ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6264:1: (lv_value_0_0= RULE_INT )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6264:1: (lv_value_0_0= RULE_INT )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6265:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleDoubleConstant13967); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getDoubleConstantAccess().getValueINTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDoubleConstantRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"INT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,82,FOLLOW_82_in_ruleDoubleConstant13984); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDoubleConstantAccess().getDKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDoubleConstant"


    // $ANTLR start "entryRuleFloatConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6293:1: entryRuleFloatConstant returns [EObject current=null] : iv_ruleFloatConstant= ruleFloatConstant EOF ;
    public final EObject entryRuleFloatConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6294:2: (iv_ruleFloatConstant= ruleFloatConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6295:2: iv_ruleFloatConstant= ruleFloatConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatConstantRule()); 
            }
            pushFollow(FOLLOW_ruleFloatConstant_in_entryRuleFloatConstant14020);
            iv_ruleFloatConstant=ruleFloatConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleFloatConstant14030); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatConstant"


    // $ANTLR start "ruleFloatConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6302:1: ruleFloatConstant returns [EObject current=null] : ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'F' ) ;
    public final EObject ruleFloatConstant() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6305:28: ( ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'F' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6306:1: ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'F' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6306:1: ( ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'F' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6306:2: ( (lv_value_0_0= RULE_INT ) ) otherlv_1= 'F'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6306:2: ( (lv_value_0_0= RULE_INT ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6307:1: (lv_value_0_0= RULE_INT )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6307:1: (lv_value_0_0= RULE_INT )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6308:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleFloatConstant14072); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getFloatConstantAccess().getValueINTTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFloatConstantRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"INT");
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,83,FOLLOW_83_in_ruleFloatConstant14089); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFloatConstantAccess().getFKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatConstant"


    // $ANTLR start "entryRuleStringConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6336:1: entryRuleStringConstant returns [EObject current=null] : iv_ruleStringConstant= ruleStringConstant EOF ;
    public final EObject entryRuleStringConstant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringConstant = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6337:2: (iv_ruleStringConstant= ruleStringConstant EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6338:2: iv_ruleStringConstant= ruleStringConstant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringConstantRule()); 
            }
            pushFollow(FOLLOW_ruleStringConstant_in_entryRuleStringConstant14125);
            iv_ruleStringConstant=ruleStringConstant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringConstant; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleStringConstant14135); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringConstant"


    // $ANTLR start "ruleStringConstant"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6345:1: ruleStringConstant returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringConstant() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6348:28: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6349:1: ( (lv_value_0_0= RULE_STRING ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6349:1: ( (lv_value_0_0= RULE_STRING ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6350:1: (lv_value_0_0= RULE_STRING )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6350:1: (lv_value_0_0= RULE_STRING )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6351:3: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleStringConstant14176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStringConstantRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringConstant"


    // $ANTLR start "entryRuleMethodName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6377:1: entryRuleMethodName returns [String current=null] : iv_ruleMethodName= ruleMethodName EOF ;
    public final String entryRuleMethodName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMethodName = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6378:2: (iv_ruleMethodName= ruleMethodName EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6379:2: iv_ruleMethodName= ruleMethodName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodNameRule()); 
            }
            pushFollow(FOLLOW_ruleMethodName_in_entryRuleMethodName14219);
            iv_ruleMethodName=ruleMethodName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleMethodName14230); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodName"


    // $ANTLR start "ruleMethodName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6386:1: ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '<' )? this_ID_1= RULE_ID (kw= '>' )? ) ;
    public final AntlrDatatypeRuleToken ruleMethodName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_ID_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6389:28: ( ( (kw= '<' )? this_ID_1= RULE_ID (kw= '>' )? ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6390:1: ( (kw= '<' )? this_ID_1= RULE_ID (kw= '>' )? )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6390:1: ( (kw= '<' )? this_ID_1= RULE_ID (kw= '>' )? )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6390:2: (kw= '<' )? this_ID_1= RULE_ID (kw= '>' )?
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6390:2: (kw= '<' )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==61) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6391:2: kw= '<'
                    {
                    kw=(Token)match(input,61,FOLLOW_61_in_ruleMethodName14269); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodNameAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;

            }

            this_ID_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleMethodName14286); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_1);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_1, grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1()); 
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6403:1: (kw= '>' )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==59) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6404:2: kw= '>'
                    {
                    kw=(Token)match(input,59,FOLLOW_59_in_ruleMethodName14305); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getMethodNameAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodName"


    // $ANTLR start "entryRuleQualifiedName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6417:1: entryRuleQualifiedName returns [EObject current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final EObject entryRuleQualifiedName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualifiedName = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6418:2: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6419:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName14347);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQualifiedName14357); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6426:1: ruleQualifiedName returns [EObject current=null] : ( (lv_name_0_0= ruleQName ) ) ;
    public final EObject ruleQualifiedName() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6429:28: ( ( (lv_name_0_0= ruleQName ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6430:1: ( (lv_name_0_0= ruleQName ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6430:1: ( (lv_name_0_0= ruleQName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6431:1: (lv_name_0_0= ruleQName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6431:1: (lv_name_0_0= ruleQName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6432:3: lv_name_0_0= ruleQName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameQNameParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleQName_in_ruleQualifiedName14402);
            lv_name_0_0=ruleQName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getQualifiedNameRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"QName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleWildcard"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6456:1: entryRuleWildcard returns [EObject current=null] : iv_ruleWildcard= ruleWildcard EOF ;
    public final EObject entryRuleWildcard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcard = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6457:2: (iv_ruleWildcard= ruleWildcard EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6458:2: iv_ruleWildcard= ruleWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardRule()); 
            }
            pushFollow(FOLLOW_ruleWildcard_in_entryRuleWildcard14437);
            iv_ruleWildcard=ruleWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcard; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcard14447); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcard"


    // $ANTLR start "ruleWildcard"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6465:1: ruleWildcard returns [EObject current=null] : (otherlv_0= '\\u00AB' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= '\\u00BB' ) ;
    public final EObject ruleWildcard() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6468:28: ( (otherlv_0= '\\u00AB' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= '\\u00BB' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6469:1: (otherlv_0= '\\u00AB' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= '\\u00BB' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6469:1: (otherlv_0= '\\u00AB' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= '\\u00BB' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6469:3: otherlv_0= '\\u00AB' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= '\\u00BB'
            {
            otherlv_0=(Token)match(input,84,FOLLOW_84_in_ruleWildcard14484); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWildcardAccess().getLeftPointingDoubleAngleQuotationMarkKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6473:1: ( (lv_expression_1_0= ruleWildcardExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6474:1: (lv_expression_1_0= ruleWildcardExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6474:1: (lv_expression_1_0= ruleWildcardExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6475:3: lv_expression_1_0= ruleWildcardExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardAccess().getExpressionWildcardExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardExpression_in_ruleWildcard14505);
            lv_expression_1_0=ruleWildcardExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"WildcardExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,85,FOLLOW_85_in_ruleWildcard14517); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getWildcardAccess().getRightPointingDoubleAngleQuotationMarkKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcard"


    // $ANTLR start "entryRuleWildcardName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6503:1: entryRuleWildcardName returns [EObject current=null] : iv_ruleWildcardName= ruleWildcardName EOF ;
    public final EObject entryRuleWildcardName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardName = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6504:2: (iv_ruleWildcardName= ruleWildcardName EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6505:2: iv_ruleWildcardName= ruleWildcardName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardNameRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardName_in_entryRuleWildcardName14553);
            iv_ruleWildcardName=ruleWildcardName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardName; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardName14563); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardName"


    // $ANTLR start "ruleWildcardName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6512:1: ruleWildcardName returns [EObject current=null] : (otherlv_0= '\\u00AB' ( (lv_wName_1_0= RULE_ID ) ) otherlv_2= '\\u00BB' ) ;
    public final EObject ruleWildcardName() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_wName_1_0=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6515:28: ( (otherlv_0= '\\u00AB' ( (lv_wName_1_0= RULE_ID ) ) otherlv_2= '\\u00BB' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6516:1: (otherlv_0= '\\u00AB' ( (lv_wName_1_0= RULE_ID ) ) otherlv_2= '\\u00BB' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6516:1: (otherlv_0= '\\u00AB' ( (lv_wName_1_0= RULE_ID ) ) otherlv_2= '\\u00BB' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6516:3: otherlv_0= '\\u00AB' ( (lv_wName_1_0= RULE_ID ) ) otherlv_2= '\\u00BB'
            {
            otherlv_0=(Token)match(input,84,FOLLOW_84_in_ruleWildcardName14600); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWildcardNameAccess().getLeftPointingDoubleAngleQuotationMarkKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6520:1: ( (lv_wName_1_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6521:1: (lv_wName_1_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6521:1: (lv_wName_1_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6522:3: lv_wName_1_0= RULE_ID
            {
            lv_wName_1_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleWildcardName14617); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_wName_1_0, grammarAccess.getWildcardNameAccess().getWNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getWildcardNameRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"wName",
                      		lv_wName_1_0, 
                      		"ID");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,85,FOLLOW_85_in_ruleWildcardName14634); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getWildcardNameAccess().getRightPointingDoubleAngleQuotationMarkKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardName"


    // $ANTLR start "entryRuleWildcardExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6550:1: entryRuleWildcardExpression returns [EObject current=null] : iv_ruleWildcardExpression= ruleWildcardExpression EOF ;
    public final EObject entryRuleWildcardExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6551:2: (iv_ruleWildcardExpression= ruleWildcardExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6552:2: iv_ruleWildcardExpression= ruleWildcardExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardExpression_in_entryRuleWildcardExpression14670);
            iv_ruleWildcardExpression=ruleWildcardExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardExpression14680); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardExpression"


    // $ANTLR start "ruleWildcardExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6559:1: ruleWildcardExpression returns [EObject current=null] : ( (lv_expression_0_0= ruleWildcardConditionalOrExpression ) ) ;
    public final EObject ruleWildcardExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6562:28: ( ( (lv_expression_0_0= ruleWildcardConditionalOrExpression ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6563:1: ( (lv_expression_0_0= ruleWildcardConditionalOrExpression ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6563:1: ( (lv_expression_0_0= ruleWildcardConditionalOrExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6564:1: (lv_expression_0_0= ruleWildcardConditionalOrExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6564:1: (lv_expression_0_0= ruleWildcardConditionalOrExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6565:3: lv_expression_0_0= ruleWildcardConditionalOrExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardExpressionAccess().getExpressionWildcardConditionalOrExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardConditionalOrExpression_in_ruleWildcardExpression14725);
            lv_expression_0_0=ruleWildcardConditionalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"WildcardConditionalOrExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardExpression"


    // $ANTLR start "entryRuleWildcardConditionalOrExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6589:1: entryRuleWildcardConditionalOrExpression returns [EObject current=null] : iv_ruleWildcardConditionalOrExpression= ruleWildcardConditionalOrExpression EOF ;
    public final EObject entryRuleWildcardConditionalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardConditionalOrExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6590:2: (iv_ruleWildcardConditionalOrExpression= ruleWildcardConditionalOrExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6591:2: iv_ruleWildcardConditionalOrExpression= ruleWildcardConditionalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardConditionalOrExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardConditionalOrExpression_in_entryRuleWildcardConditionalOrExpression14760);
            iv_ruleWildcardConditionalOrExpression=ruleWildcardConditionalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardConditionalOrExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardConditionalOrExpression14770); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardConditionalOrExpression"


    // $ANTLR start "ruleWildcardConditionalOrExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6598:1: ruleWildcardConditionalOrExpression returns [EObject current=null] : ( ( (lv_operands_0_0= ruleWildcardConditionalAndExpression ) ) (otherlv_1= '||' ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) ) )* ) ;
    public final EObject ruleWildcardConditionalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_operands_0_0 = null;

        EObject lv_operands_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6601:28: ( ( ( (lv_operands_0_0= ruleWildcardConditionalAndExpression ) ) (otherlv_1= '||' ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) ) )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6602:1: ( ( (lv_operands_0_0= ruleWildcardConditionalAndExpression ) ) (otherlv_1= '||' ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) ) )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6602:1: ( ( (lv_operands_0_0= ruleWildcardConditionalAndExpression ) ) (otherlv_1= '||' ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) ) )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6602:2: ( (lv_operands_0_0= ruleWildcardConditionalAndExpression ) ) (otherlv_1= '||' ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) ) )*
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6602:2: ( (lv_operands_0_0= ruleWildcardConditionalAndExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6603:1: (lv_operands_0_0= ruleWildcardConditionalAndExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6603:1: (lv_operands_0_0= ruleWildcardConditionalAndExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6604:3: lv_operands_0_0= ruleWildcardConditionalAndExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardConditionalOrExpressionAccess().getOperandsWildcardConditionalAndExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardConditionalAndExpression_in_ruleWildcardConditionalOrExpression14816);
            lv_operands_0_0=ruleWildcardConditionalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardConditionalOrExpressionRule());
              	        }
                     		add(
                     			current, 
                     			"operands",
                      		lv_operands_0_0, 
                      		"WildcardConditionalAndExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6620:2: (otherlv_1= '||' ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==86) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6620:4: otherlv_1= '||' ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,86,FOLLOW_86_in_ruleWildcardConditionalOrExpression14829); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getWildcardConditionalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_0());
            	          
            	    }
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6624:1: ( (lv_operands_2_0= ruleWildcardConditionalAndExpression ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6625:1: (lv_operands_2_0= ruleWildcardConditionalAndExpression )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6625:1: (lv_operands_2_0= ruleWildcardConditionalAndExpression )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6626:3: lv_operands_2_0= ruleWildcardConditionalAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWildcardConditionalOrExpressionAccess().getOperandsWildcardConditionalAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleWildcardConditionalAndExpression_in_ruleWildcardConditionalOrExpression14850);
            	    lv_operands_2_0=ruleWildcardConditionalAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWildcardConditionalOrExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"operands",
            	              		lv_operands_2_0, 
            	              		"WildcardConditionalAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardConditionalOrExpression"


    // $ANTLR start "entryRuleWildcardConditionalAndExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6650:1: entryRuleWildcardConditionalAndExpression returns [EObject current=null] : iv_ruleWildcardConditionalAndExpression= ruleWildcardConditionalAndExpression EOF ;
    public final EObject entryRuleWildcardConditionalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardConditionalAndExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6651:2: (iv_ruleWildcardConditionalAndExpression= ruleWildcardConditionalAndExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6652:2: iv_ruleWildcardConditionalAndExpression= ruleWildcardConditionalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardConditionalAndExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardConditionalAndExpression_in_entryRuleWildcardConditionalAndExpression14888);
            iv_ruleWildcardConditionalAndExpression=ruleWildcardConditionalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardConditionalAndExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardConditionalAndExpression14898); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardConditionalAndExpression"


    // $ANTLR start "ruleWildcardConditionalAndExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6659:1: ruleWildcardConditionalAndExpression returns [EObject current=null] : ( ( (lv_operands_0_0= ruleWildcardEqualityExpression ) ) (otherlv_1= '&&' ( (lv_operands_2_0= ruleWildcardEqualityExpression ) ) )* ) ;
    public final EObject ruleWildcardConditionalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_operands_0_0 = null;

        EObject lv_operands_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6662:28: ( ( ( (lv_operands_0_0= ruleWildcardEqualityExpression ) ) (otherlv_1= '&&' ( (lv_operands_2_0= ruleWildcardEqualityExpression ) ) )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6663:1: ( ( (lv_operands_0_0= ruleWildcardEqualityExpression ) ) (otherlv_1= '&&' ( (lv_operands_2_0= ruleWildcardEqualityExpression ) ) )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6663:1: ( ( (lv_operands_0_0= ruleWildcardEqualityExpression ) ) (otherlv_1= '&&' ( (lv_operands_2_0= ruleWildcardEqualityExpression ) ) )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6663:2: ( (lv_operands_0_0= ruleWildcardEqualityExpression ) ) (otherlv_1= '&&' ( (lv_operands_2_0= ruleWildcardEqualityExpression ) ) )*
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6663:2: ( (lv_operands_0_0= ruleWildcardEqualityExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6664:1: (lv_operands_0_0= ruleWildcardEqualityExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6664:1: (lv_operands_0_0= ruleWildcardEqualityExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6665:3: lv_operands_0_0= ruleWildcardEqualityExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardConditionalAndExpressionAccess().getOperandsWildcardEqualityExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardEqualityExpression_in_ruleWildcardConditionalAndExpression14944);
            lv_operands_0_0=ruleWildcardEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardConditionalAndExpressionRule());
              	        }
                     		add(
                     			current, 
                     			"operands",
                      		lv_operands_0_0, 
                      		"WildcardEqualityExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6681:2: (otherlv_1= '&&' ( (lv_operands_2_0= ruleWildcardEqualityExpression ) ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==87) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6681:4: otherlv_1= '&&' ( (lv_operands_2_0= ruleWildcardEqualityExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,87,FOLLOW_87_in_ruleWildcardConditionalAndExpression14957); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getWildcardConditionalAndExpressionAccess().getAmpersandAmpersandKeyword_1_0());
            	          
            	    }
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6685:1: ( (lv_operands_2_0= ruleWildcardEqualityExpression ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6686:1: (lv_operands_2_0= ruleWildcardEqualityExpression )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6686:1: (lv_operands_2_0= ruleWildcardEqualityExpression )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6687:3: lv_operands_2_0= ruleWildcardEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWildcardConditionalAndExpressionAccess().getOperandsWildcardEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleWildcardEqualityExpression_in_ruleWildcardConditionalAndExpression14978);
            	    lv_operands_2_0=ruleWildcardEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWildcardConditionalAndExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"operands",
            	              		lv_operands_2_0, 
            	              		"WildcardEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardConditionalAndExpression"


    // $ANTLR start "entryRuleWildcardEqualityExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6711:1: entryRuleWildcardEqualityExpression returns [EObject current=null] : iv_ruleWildcardEqualityExpression= ruleWildcardEqualityExpression EOF ;
    public final EObject entryRuleWildcardEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardEqualityExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6712:2: (iv_ruleWildcardEqualityExpression= ruleWildcardEqualityExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6713:2: iv_ruleWildcardEqualityExpression= ruleWildcardEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardEqualityExpression_in_entryRuleWildcardEqualityExpression15016);
            iv_ruleWildcardEqualityExpression=ruleWildcardEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardEqualityExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardEqualityExpression15026); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardEqualityExpression"


    // $ANTLR start "ruleWildcardEqualityExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6720:1: ruleWildcardEqualityExpression returns [EObject current=null] : ( ( (lv_operands_0_0= ruleWildcardInstanceOfExpression ) ) ( ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) ) ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) ) )* ) ;
    public final EObject ruleWildcardEqualityExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_0=null;
        Token lv_operator_2_0=null;
        EObject lv_operands_0_0 = null;

        EObject lv_operands_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6723:28: ( ( ( (lv_operands_0_0= ruleWildcardInstanceOfExpression ) ) ( ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) ) ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) ) )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6724:1: ( ( (lv_operands_0_0= ruleWildcardInstanceOfExpression ) ) ( ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) ) ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) ) )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6724:1: ( ( (lv_operands_0_0= ruleWildcardInstanceOfExpression ) ) ( ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) ) ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) ) )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6724:2: ( (lv_operands_0_0= ruleWildcardInstanceOfExpression ) ) ( ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) ) ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) ) )*
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6724:2: ( (lv_operands_0_0= ruleWildcardInstanceOfExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6725:1: (lv_operands_0_0= ruleWildcardInstanceOfExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6725:1: (lv_operands_0_0= ruleWildcardInstanceOfExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6726:3: lv_operands_0_0= ruleWildcardInstanceOfExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardEqualityExpressionAccess().getOperandsWildcardInstanceOfExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardInstanceOfExpression_in_ruleWildcardEqualityExpression15072);
            lv_operands_0_0=ruleWildcardInstanceOfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardEqualityExpressionRule());
              	        }
                     		add(
                     			current, 
                     			"operands",
                      		lv_operands_0_0, 
                      		"WildcardInstanceOfExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6742:2: ( ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) ) ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==57||LA60_0==62) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6742:3: ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) ) ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6742:3: ( ( (lv_operator_1_0= '==' ) ) | ( (lv_operator_2_0= '!=' ) ) )
            	    int alt59=2;
            	    int LA59_0 = input.LA(1);

            	    if ( (LA59_0==57) ) {
            	        alt59=1;
            	    }
            	    else if ( (LA59_0==62) ) {
            	        alt59=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 59, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt59) {
            	        case 1 :
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6742:4: ( (lv_operator_1_0= '==' ) )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6742:4: ( (lv_operator_1_0= '==' ) )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6743:1: (lv_operator_1_0= '==' )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6743:1: (lv_operator_1_0= '==' )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6744:3: lv_operator_1_0= '=='
            	            {
            	            lv_operator_1_0=(Token)match(input,57,FOLLOW_57_in_ruleWildcardEqualityExpression15092); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_1_0, grammarAccess.getWildcardEqualityExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_0_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getWildcardEqualityExpressionRule());
            	              	        }
            	                     		addWithLastConsumed(current, "operator", lv_operator_1_0, "==");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6758:6: ( (lv_operator_2_0= '!=' ) )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6758:6: ( (lv_operator_2_0= '!=' ) )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6759:1: (lv_operator_2_0= '!=' )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6759:1: (lv_operator_2_0= '!=' )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6760:3: lv_operator_2_0= '!='
            	            {
            	            lv_operator_2_0=(Token)match(input,62,FOLLOW_62_in_ruleWildcardEqualityExpression15129); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operator_2_0, grammarAccess.getWildcardEqualityExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_0_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getWildcardEqualityExpressionRule());
            	              	        }
            	                     		addWithLastConsumed(current, "operator", lv_operator_2_0, "!=");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6773:3: ( (lv_operands_3_0= ruleWildcardInstanceOfExpression ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6774:1: (lv_operands_3_0= ruleWildcardInstanceOfExpression )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6774:1: (lv_operands_3_0= ruleWildcardInstanceOfExpression )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6775:3: lv_operands_3_0= ruleWildcardInstanceOfExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWildcardEqualityExpressionAccess().getOperandsWildcardInstanceOfExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleWildcardInstanceOfExpression_in_ruleWildcardEqualityExpression15164);
            	    lv_operands_3_0=ruleWildcardInstanceOfExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWildcardEqualityExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"operands",
            	              		lv_operands_3_0, 
            	              		"WildcardInstanceOfExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardEqualityExpression"


    // $ANTLR start "entryRuleWildcardInstanceOfExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6799:1: entryRuleWildcardInstanceOfExpression returns [EObject current=null] : iv_ruleWildcardInstanceOfExpression= ruleWildcardInstanceOfExpression EOF ;
    public final EObject entryRuleWildcardInstanceOfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardInstanceOfExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6800:2: (iv_ruleWildcardInstanceOfExpression= ruleWildcardInstanceOfExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6801:2: iv_ruleWildcardInstanceOfExpression= ruleWildcardInstanceOfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardInstanceOfExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardInstanceOfExpression_in_entryRuleWildcardInstanceOfExpression15202);
            iv_ruleWildcardInstanceOfExpression=ruleWildcardInstanceOfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardInstanceOfExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardInstanceOfExpression15212); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardInstanceOfExpression"


    // $ANTLR start "ruleWildcardInstanceOfExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6808:1: ruleWildcardInstanceOfExpression returns [EObject current=null] : ( ( (lv_operand_0_0= ruleWildcardRelationalExpression ) ) (otherlv_1= 'instanceof' ( (lv_type_2_0= ruleWildcardQName ) ) )? ) ;
    public final EObject ruleWildcardInstanceOfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_operand_0_0 = null;

        EObject lv_type_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6811:28: ( ( ( (lv_operand_0_0= ruleWildcardRelationalExpression ) ) (otherlv_1= 'instanceof' ( (lv_type_2_0= ruleWildcardQName ) ) )? ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6812:1: ( ( (lv_operand_0_0= ruleWildcardRelationalExpression ) ) (otherlv_1= 'instanceof' ( (lv_type_2_0= ruleWildcardQName ) ) )? )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6812:1: ( ( (lv_operand_0_0= ruleWildcardRelationalExpression ) ) (otherlv_1= 'instanceof' ( (lv_type_2_0= ruleWildcardQName ) ) )? )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6812:2: ( (lv_operand_0_0= ruleWildcardRelationalExpression ) ) (otherlv_1= 'instanceof' ( (lv_type_2_0= ruleWildcardQName ) ) )?
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6812:2: ( (lv_operand_0_0= ruleWildcardRelationalExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6813:1: (lv_operand_0_0= ruleWildcardRelationalExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6813:1: (lv_operand_0_0= ruleWildcardRelationalExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6814:3: lv_operand_0_0= ruleWildcardRelationalExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardInstanceOfExpressionAccess().getOperandWildcardRelationalExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardRelationalExpression_in_ruleWildcardInstanceOfExpression15258);
            lv_operand_0_0=ruleWildcardRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardInstanceOfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"operand",
                      		lv_operand_0_0, 
                      		"WildcardRelationalExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6830:2: (otherlv_1= 'instanceof' ( (lv_type_2_0= ruleWildcardQName ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==63) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6830:4: otherlv_1= 'instanceof' ( (lv_type_2_0= ruleWildcardQName ) )
                    {
                    otherlv_1=(Token)match(input,63,FOLLOW_63_in_ruleWildcardInstanceOfExpression15271); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getWildcardInstanceOfExpressionAccess().getInstanceofKeyword_1_0());
                          
                    }
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6834:1: ( (lv_type_2_0= ruleWildcardQName ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6835:1: (lv_type_2_0= ruleWildcardQName )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6835:1: (lv_type_2_0= ruleWildcardQName )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6836:3: lv_type_2_0= ruleWildcardQName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardInstanceOfExpressionAccess().getTypeWildcardQNameParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardQName_in_ruleWildcardInstanceOfExpression15292);
                    lv_type_2_0=ruleWildcardQName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardInstanceOfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_2_0, 
                              		"WildcardQName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardInstanceOfExpression"


    // $ANTLR start "entryRuleWildcardRelationalExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6860:1: entryRuleWildcardRelationalExpression returns [EObject current=null] : iv_ruleWildcardRelationalExpression= ruleWildcardRelationalExpression EOF ;
    public final EObject entryRuleWildcardRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardRelationalExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6861:2: (iv_ruleWildcardRelationalExpression= ruleWildcardRelationalExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6862:2: iv_ruleWildcardRelationalExpression= ruleWildcardRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardRelationalExpression_in_entryRuleWildcardRelationalExpression15330);
            iv_ruleWildcardRelationalExpression=ruleWildcardRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardRelationalExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardRelationalExpression15340); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardRelationalExpression"


    // $ANTLR start "ruleWildcardRelationalExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6869:1: ruleWildcardRelationalExpression returns [EObject current=null] : ( ( (lv_operands_0_0= ruleWildcardAdditiveExpression ) ) ( ( (lv_operators_1_0= ruleWildcardRelationalOp ) ) ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) ) )* ) ;
    public final EObject ruleWildcardRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_operands_0_0 = null;

        AntlrDatatypeRuleToken lv_operators_1_0 = null;

        EObject lv_operands_2_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6872:28: ( ( ( (lv_operands_0_0= ruleWildcardAdditiveExpression ) ) ( ( (lv_operators_1_0= ruleWildcardRelationalOp ) ) ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) ) )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6873:1: ( ( (lv_operands_0_0= ruleWildcardAdditiveExpression ) ) ( ( (lv_operators_1_0= ruleWildcardRelationalOp ) ) ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) ) )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6873:1: ( ( (lv_operands_0_0= ruleWildcardAdditiveExpression ) ) ( ( (lv_operators_1_0= ruleWildcardRelationalOp ) ) ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) ) )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6873:2: ( (lv_operands_0_0= ruleWildcardAdditiveExpression ) ) ( ( (lv_operators_1_0= ruleWildcardRelationalOp ) ) ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) ) )*
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6873:2: ( (lv_operands_0_0= ruleWildcardAdditiveExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6874:1: (lv_operands_0_0= ruleWildcardAdditiveExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6874:1: (lv_operands_0_0= ruleWildcardAdditiveExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6875:3: lv_operands_0_0= ruleWildcardAdditiveExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardRelationalExpressionAccess().getOperandsWildcardAdditiveExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardAdditiveExpression_in_ruleWildcardRelationalExpression15386);
            lv_operands_0_0=ruleWildcardAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardRelationalExpressionRule());
              	        }
                     		add(
                     			current, 
                     			"operands",
                      		lv_operands_0_0, 
                      		"WildcardAdditiveExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6891:2: ( ( (lv_operators_1_0= ruleWildcardRelationalOp ) ) ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( ((LA62_0>=58 && LA62_0<=61)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6891:3: ( (lv_operators_1_0= ruleWildcardRelationalOp ) ) ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6891:3: ( (lv_operators_1_0= ruleWildcardRelationalOp ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6892:1: (lv_operators_1_0= ruleWildcardRelationalOp )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6892:1: (lv_operators_1_0= ruleWildcardRelationalOp )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6893:3: lv_operators_1_0= ruleWildcardRelationalOp
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWildcardRelationalExpressionAccess().getOperatorsWildcardRelationalOpParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleWildcardRelationalOp_in_ruleWildcardRelationalExpression15408);
            	    lv_operators_1_0=ruleWildcardRelationalOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWildcardRelationalExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"operators",
            	              		lv_operators_1_0, 
            	              		"WildcardRelationalOp");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6909:2: ( (lv_operands_2_0= ruleWildcardAdditiveExpression ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6910:1: (lv_operands_2_0= ruleWildcardAdditiveExpression )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6910:1: (lv_operands_2_0= ruleWildcardAdditiveExpression )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6911:3: lv_operands_2_0= ruleWildcardAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWildcardRelationalExpressionAccess().getOperandsWildcardAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleWildcardAdditiveExpression_in_ruleWildcardRelationalExpression15429);
            	    lv_operands_2_0=ruleWildcardAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWildcardRelationalExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"operands",
            	              		lv_operands_2_0, 
            	              		"WildcardAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardRelationalExpression"


    // $ANTLR start "entryRuleWildcardRelationalOp"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6935:1: entryRuleWildcardRelationalOp returns [String current=null] : iv_ruleWildcardRelationalOp= ruleWildcardRelationalOp EOF ;
    public final String entryRuleWildcardRelationalOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleWildcardRelationalOp = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6936:2: (iv_ruleWildcardRelationalOp= ruleWildcardRelationalOp EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6937:2: iv_ruleWildcardRelationalOp= ruleWildcardRelationalOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardRelationalOpRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardRelationalOp_in_entryRuleWildcardRelationalOp15468);
            iv_ruleWildcardRelationalOp=ruleWildcardRelationalOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardRelationalOp.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardRelationalOp15479); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardRelationalOp"


    // $ANTLR start "ruleWildcardRelationalOp"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6944:1: ruleWildcardRelationalOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<=' | kw= '>=' | kw= '<' | kw= '>' ) ;
    public final AntlrDatatypeRuleToken ruleWildcardRelationalOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6947:28: ( (kw= '<=' | kw= '>=' | kw= '<' | kw= '>' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6948:1: (kw= '<=' | kw= '>=' | kw= '<' | kw= '>' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6948:1: (kw= '<=' | kw= '>=' | kw= '<' | kw= '>' )
            int alt63=4;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt63=1;
                }
                break;
            case 58:
                {
                alt63=2;
                }
                break;
            case 61:
                {
                alt63=3;
                }
                break;
            case 59:
                {
                alt63=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6949:2: kw= '<='
                    {
                    kw=(Token)match(input,60,FOLLOW_60_in_ruleWildcardRelationalOp15517); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getWildcardRelationalOpAccess().getLessThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6956:2: kw= '>='
                    {
                    kw=(Token)match(input,58,FOLLOW_58_in_ruleWildcardRelationalOp15536); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getWildcardRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6963:2: kw= '<'
                    {
                    kw=(Token)match(input,61,FOLLOW_61_in_ruleWildcardRelationalOp15555); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getWildcardRelationalOpAccess().getLessThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6970:2: kw= '>'
                    {
                    kw=(Token)match(input,59,FOLLOW_59_in_ruleWildcardRelationalOp15574); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getWildcardRelationalOpAccess().getGreaterThanSignKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardRelationalOp"


    // $ANTLR start "entryRuleWildcardAdditiveExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6983:1: entryRuleWildcardAdditiveExpression returns [EObject current=null] : iv_ruleWildcardAdditiveExpression= ruleWildcardAdditiveExpression EOF ;
    public final EObject entryRuleWildcardAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardAdditiveExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6984:2: (iv_ruleWildcardAdditiveExpression= ruleWildcardAdditiveExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6985:2: iv_ruleWildcardAdditiveExpression= ruleWildcardAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardAdditiveExpression_in_entryRuleWildcardAdditiveExpression15614);
            iv_ruleWildcardAdditiveExpression=ruleWildcardAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardAdditiveExpression15624); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardAdditiveExpression"


    // $ANTLR start "ruleWildcardAdditiveExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6992:1: ruleWildcardAdditiveExpression returns [EObject current=null] : ( ( (lv_operands_0_0= ruleWildcardMultiplicativeExpression ) ) ( ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) ) ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleWildcardAdditiveExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        Token lv_operators_2_0=null;
        EObject lv_operands_0_0 = null;

        EObject lv_operands_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6995:28: ( ( ( (lv_operands_0_0= ruleWildcardMultiplicativeExpression ) ) ( ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) ) ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) ) )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6996:1: ( ( (lv_operands_0_0= ruleWildcardMultiplicativeExpression ) ) ( ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) ) ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) ) )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6996:1: ( ( (lv_operands_0_0= ruleWildcardMultiplicativeExpression ) ) ( ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) ) ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) ) )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6996:2: ( (lv_operands_0_0= ruleWildcardMultiplicativeExpression ) ) ( ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) ) ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) ) )*
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6996:2: ( (lv_operands_0_0= ruleWildcardMultiplicativeExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6997:1: (lv_operands_0_0= ruleWildcardMultiplicativeExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6997:1: (lv_operands_0_0= ruleWildcardMultiplicativeExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:6998:3: lv_operands_0_0= ruleWildcardMultiplicativeExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardAdditiveExpressionAccess().getOperandsWildcardMultiplicativeExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardMultiplicativeExpression_in_ruleWildcardAdditiveExpression15670);
            lv_operands_0_0=ruleWildcardMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardAdditiveExpressionRule());
              	        }
                     		add(
                     			current, 
                     			"operands",
                      		lv_operands_0_0, 
                      		"WildcardMultiplicativeExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7014:2: ( ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) ) ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==43||LA65_0==54) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7014:3: ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) ) ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7014:3: ( ( (lv_operators_1_0= '+' ) ) | ( (lv_operators_2_0= '-' ) ) )
            	    int alt64=2;
            	    int LA64_0 = input.LA(1);

            	    if ( (LA64_0==43) ) {
            	        alt64=1;
            	    }
            	    else if ( (LA64_0==54) ) {
            	        alt64=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 64, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt64) {
            	        case 1 :
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7014:4: ( (lv_operators_1_0= '+' ) )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7014:4: ( (lv_operators_1_0= '+' ) )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7015:1: (lv_operators_1_0= '+' )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7015:1: (lv_operators_1_0= '+' )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7016:3: lv_operators_1_0= '+'
            	            {
            	            lv_operators_1_0=(Token)match(input,43,FOLLOW_43_in_ruleWildcardAdditiveExpression15690); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operators_1_0, grammarAccess.getWildcardAdditiveExpressionAccess().getOperatorsPlusSignKeyword_1_0_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getWildcardAdditiveExpressionRule());
            	              	        }
            	                     		addWithLastConsumed(current, "operators", lv_operators_1_0, "+");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7030:6: ( (lv_operators_2_0= '-' ) )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7030:6: ( (lv_operators_2_0= '-' ) )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7031:1: (lv_operators_2_0= '-' )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7031:1: (lv_operators_2_0= '-' )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7032:3: lv_operators_2_0= '-'
            	            {
            	            lv_operators_2_0=(Token)match(input,54,FOLLOW_54_in_ruleWildcardAdditiveExpression15727); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operators_2_0, grammarAccess.getWildcardAdditiveExpressionAccess().getOperatorsHyphenMinusKeyword_1_0_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getWildcardAdditiveExpressionRule());
            	              	        }
            	                     		addWithLastConsumed(current, "operators", lv_operators_2_0, "-");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7045:3: ( (lv_operands_3_0= ruleWildcardMultiplicativeExpression ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7046:1: (lv_operands_3_0= ruleWildcardMultiplicativeExpression )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7046:1: (lv_operands_3_0= ruleWildcardMultiplicativeExpression )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7047:3: lv_operands_3_0= ruleWildcardMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWildcardAdditiveExpressionAccess().getOperandsWildcardMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleWildcardMultiplicativeExpression_in_ruleWildcardAdditiveExpression15762);
            	    lv_operands_3_0=ruleWildcardMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWildcardAdditiveExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"operands",
            	              		lv_operands_3_0, 
            	              		"WildcardMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardAdditiveExpression"


    // $ANTLR start "entryRuleWildcardMultiplicativeExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7071:1: entryRuleWildcardMultiplicativeExpression returns [EObject current=null] : iv_ruleWildcardMultiplicativeExpression= ruleWildcardMultiplicativeExpression EOF ;
    public final EObject entryRuleWildcardMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardMultiplicativeExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7072:2: (iv_ruleWildcardMultiplicativeExpression= ruleWildcardMultiplicativeExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7073:2: iv_ruleWildcardMultiplicativeExpression= ruleWildcardMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardMultiplicativeExpression_in_entryRuleWildcardMultiplicativeExpression15800);
            iv_ruleWildcardMultiplicativeExpression=ruleWildcardMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardMultiplicativeExpression15810); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardMultiplicativeExpression"


    // $ANTLR start "ruleWildcardMultiplicativeExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7080:1: ruleWildcardMultiplicativeExpression returns [EObject current=null] : ( ( (lv_operands_0_0= ruleWildcardUnaryExpression ) ) ( ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) ) ( (lv_operands_4_0= ruleWildcardUnaryExpression ) ) )* ) ;
    public final EObject ruleWildcardMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        Token lv_operators_2_0=null;
        Token lv_operators_3_0=null;
        EObject lv_operands_0_0 = null;

        EObject lv_operands_4_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7083:28: ( ( ( (lv_operands_0_0= ruleWildcardUnaryExpression ) ) ( ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) ) ( (lv_operands_4_0= ruleWildcardUnaryExpression ) ) )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7084:1: ( ( (lv_operands_0_0= ruleWildcardUnaryExpression ) ) ( ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) ) ( (lv_operands_4_0= ruleWildcardUnaryExpression ) ) )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7084:1: ( ( (lv_operands_0_0= ruleWildcardUnaryExpression ) ) ( ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) ) ( (lv_operands_4_0= ruleWildcardUnaryExpression ) ) )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7084:2: ( (lv_operands_0_0= ruleWildcardUnaryExpression ) ) ( ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) ) ( (lv_operands_4_0= ruleWildcardUnaryExpression ) ) )*
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7084:2: ( (lv_operands_0_0= ruleWildcardUnaryExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7085:1: (lv_operands_0_0= ruleWildcardUnaryExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7085:1: (lv_operands_0_0= ruleWildcardUnaryExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7086:3: lv_operands_0_0= ruleWildcardUnaryExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardMultiplicativeExpressionAccess().getOperandsWildcardUnaryExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardMultiplicativeExpression15856);
            lv_operands_0_0=ruleWildcardUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardMultiplicativeExpressionRule());
              	        }
                     		add(
                     			current, 
                     			"operands",
                      		lv_operands_0_0, 
                      		"WildcardUnaryExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7102:2: ( ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) ) ( (lv_operands_4_0= ruleWildcardUnaryExpression ) ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( ((LA67_0>=48 && LA67_0<=49)||LA67_0==51) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7102:3: ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) ) ( (lv_operands_4_0= ruleWildcardUnaryExpression ) )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7102:3: ( ( (lv_operators_1_0= '*' ) ) | ( (lv_operators_2_0= '/' ) ) | ( (lv_operators_3_0= '%' ) ) )
            	    int alt66=3;
            	    switch ( input.LA(1) ) {
            	    case 49:
            	        {
            	        alt66=1;
            	        }
            	        break;
            	    case 48:
            	        {
            	        alt66=2;
            	        }
            	        break;
            	    case 51:
            	        {
            	        alt66=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 66, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt66) {
            	        case 1 :
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7102:4: ( (lv_operators_1_0= '*' ) )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7102:4: ( (lv_operators_1_0= '*' ) )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7103:1: (lv_operators_1_0= '*' )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7103:1: (lv_operators_1_0= '*' )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7104:3: lv_operators_1_0= '*'
            	            {
            	            lv_operators_1_0=(Token)match(input,49,FOLLOW_49_in_ruleWildcardMultiplicativeExpression15876); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operators_1_0, grammarAccess.getWildcardMultiplicativeExpressionAccess().getOperatorsAsteriskKeyword_1_0_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getWildcardMultiplicativeExpressionRule());
            	              	        }
            	                     		addWithLastConsumed(current, "operators", lv_operators_1_0, "*");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7118:6: ( (lv_operators_2_0= '/' ) )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7118:6: ( (lv_operators_2_0= '/' ) )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7119:1: (lv_operators_2_0= '/' )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7119:1: (lv_operators_2_0= '/' )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7120:3: lv_operators_2_0= '/'
            	            {
            	            lv_operators_2_0=(Token)match(input,48,FOLLOW_48_in_ruleWildcardMultiplicativeExpression15913); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operators_2_0, grammarAccess.getWildcardMultiplicativeExpressionAccess().getOperatorsSolidusKeyword_1_0_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getWildcardMultiplicativeExpressionRule());
            	              	        }
            	                     		addWithLastConsumed(current, "operators", lv_operators_2_0, "/");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7134:6: ( (lv_operators_3_0= '%' ) )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7134:6: ( (lv_operators_3_0= '%' ) )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7135:1: (lv_operators_3_0= '%' )
            	            {
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7135:1: (lv_operators_3_0= '%' )
            	            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7136:3: lv_operators_3_0= '%'
            	            {
            	            lv_operators_3_0=(Token)match(input,51,FOLLOW_51_in_ruleWildcardMultiplicativeExpression15950); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_operators_3_0, grammarAccess.getWildcardMultiplicativeExpressionAccess().getOperatorsPercentSignKeyword_1_0_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getWildcardMultiplicativeExpressionRule());
            	              	        }
            	                     		addWithLastConsumed(current, "operators", lv_operators_3_0, "%");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7149:3: ( (lv_operands_4_0= ruleWildcardUnaryExpression ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7150:1: (lv_operands_4_0= ruleWildcardUnaryExpression )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7150:1: (lv_operands_4_0= ruleWildcardUnaryExpression )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7151:3: lv_operands_4_0= ruleWildcardUnaryExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getWildcardMultiplicativeExpressionAccess().getOperandsWildcardUnaryExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardMultiplicativeExpression15985);
            	    lv_operands_4_0=ruleWildcardUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getWildcardMultiplicativeExpressionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"operands",
            	              		lv_operands_4_0, 
            	              		"WildcardUnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardMultiplicativeExpression"


    // $ANTLR start "entryRuleWildcardUnaryExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7175:1: entryRuleWildcardUnaryExpression returns [EObject current=null] : iv_ruleWildcardUnaryExpression= ruleWildcardUnaryExpression EOF ;
    public final EObject entryRuleWildcardUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardUnaryExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7176:2: (iv_ruleWildcardUnaryExpression= ruleWildcardUnaryExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7177:2: iv_ruleWildcardUnaryExpression= ruleWildcardUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardUnaryExpression_in_entryRuleWildcardUnaryExpression16023);
            iv_ruleWildcardUnaryExpression=ruleWildcardUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardUnaryExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardUnaryExpression16033); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardUnaryExpression"


    // $ANTLR start "ruleWildcardUnaryExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7184:1: ruleWildcardUnaryExpression returns [EObject current=null] : ( ( ( (lv_operator_0_0= '+' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operator_2_0= '-' ) ) ( (lv_operand_3_0= ruleWildcardUnaryExpression ) ) ) | ( (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus ) ) ) ;
    public final EObject ruleWildcardUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_operator_0_0=null;
        Token lv_operator_2_0=null;
        EObject lv_operand_1_0 = null;

        EObject lv_operand_3_0 = null;

        EObject lv_operand_4_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7187:28: ( ( ( ( (lv_operator_0_0= '+' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operator_2_0= '-' ) ) ( (lv_operand_3_0= ruleWildcardUnaryExpression ) ) ) | ( (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7188:1: ( ( ( (lv_operator_0_0= '+' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operator_2_0= '-' ) ) ( (lv_operand_3_0= ruleWildcardUnaryExpression ) ) ) | ( (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7188:1: ( ( ( (lv_operator_0_0= '+' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operator_2_0= '-' ) ) ( (lv_operand_3_0= ruleWildcardUnaryExpression ) ) ) | ( (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus ) ) )
            int alt68=3;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt68=1;
                }
                break;
            case 54:
                {
                alt68=2;
                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_STRING:
            case 26:
            case 66:
            case 70:
            case 80:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
                {
                alt68=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }

            switch (alt68) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7188:2: ( ( (lv_operator_0_0= '+' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7188:2: ( ( (lv_operator_0_0= '+' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7188:3: ( (lv_operator_0_0= '+' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7188:3: ( (lv_operator_0_0= '+' ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7189:1: (lv_operator_0_0= '+' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7189:1: (lv_operator_0_0= '+' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7190:3: lv_operator_0_0= '+'
                    {
                    lv_operator_0_0=(Token)match(input,43,FOLLOW_43_in_ruleWildcardUnaryExpression16077); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_operator_0_0, grammarAccess.getWildcardUnaryExpressionAccess().getOperatorPlusSignKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardUnaryExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "operator", lv_operator_0_0, "+");
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7203:2: ( (lv_operand_1_0= ruleWildcardUnaryExpression ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7204:1: (lv_operand_1_0= ruleWildcardUnaryExpression )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7204:1: (lv_operand_1_0= ruleWildcardUnaryExpression )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7205:3: lv_operand_1_0= ruleWildcardUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardUnaryExpressionAccess().getOperandWildcardUnaryExpressionParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardUnaryExpression16111);
                    lv_operand_1_0=ruleWildcardUnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_1_0, 
                              		"WildcardUnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7222:6: ( ( (lv_operator_2_0= '-' ) ) ( (lv_operand_3_0= ruleWildcardUnaryExpression ) ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7222:6: ( ( (lv_operator_2_0= '-' ) ) ( (lv_operand_3_0= ruleWildcardUnaryExpression ) ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7222:7: ( (lv_operator_2_0= '-' ) ) ( (lv_operand_3_0= ruleWildcardUnaryExpression ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7222:7: ( (lv_operator_2_0= '-' ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7223:1: (lv_operator_2_0= '-' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7223:1: (lv_operator_2_0= '-' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7224:3: lv_operator_2_0= '-'
                    {
                    lv_operator_2_0=(Token)match(input,54,FOLLOW_54_in_ruleWildcardUnaryExpression16137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_operator_2_0, grammarAccess.getWildcardUnaryExpressionAccess().getOperatorHyphenMinusKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardUnaryExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "operator", lv_operator_2_0, "-");
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7237:2: ( (lv_operand_3_0= ruleWildcardUnaryExpression ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7238:1: (lv_operand_3_0= ruleWildcardUnaryExpression )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7238:1: (lv_operand_3_0= ruleWildcardUnaryExpression )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7239:3: lv_operand_3_0= ruleWildcardUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardUnaryExpressionAccess().getOperandWildcardUnaryExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardUnaryExpression16171);
                    lv_operand_3_0=ruleWildcardUnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_3_0, 
                              		"WildcardUnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7256:6: ( (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7256:6: ( (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7257:1: (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7257:1: (lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7258:3: lv_operand_4_0= ruleWildcardUnaryExpressionNotPlusMinus
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardUnaryExpressionAccess().getOperandWildcardUnaryExpressionNotPlusMinusParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardUnaryExpressionNotPlusMinus_in_ruleWildcardUnaryExpression16199);
                    lv_operand_4_0=ruleWildcardUnaryExpressionNotPlusMinus();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_4_0, 
                              		"WildcardUnaryExpressionNotPlusMinus");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardUnaryExpression"


    // $ANTLR start "entryRuleWildcardUnaryExpressionNotPlusMinus"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7282:1: entryRuleWildcardUnaryExpressionNotPlusMinus returns [EObject current=null] : iv_ruleWildcardUnaryExpressionNotPlusMinus= ruleWildcardUnaryExpressionNotPlusMinus EOF ;
    public final EObject entryRuleWildcardUnaryExpressionNotPlusMinus() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardUnaryExpressionNotPlusMinus = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7283:2: (iv_ruleWildcardUnaryExpressionNotPlusMinus= ruleWildcardUnaryExpressionNotPlusMinus EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7284:2: iv_ruleWildcardUnaryExpressionNotPlusMinus= ruleWildcardUnaryExpressionNotPlusMinus EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardUnaryExpressionNotPlusMinusRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardUnaryExpressionNotPlusMinus_in_entryRuleWildcardUnaryExpressionNotPlusMinus16235);
            iv_ruleWildcardUnaryExpressionNotPlusMinus=ruleWildcardUnaryExpressionNotPlusMinus();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardUnaryExpressionNotPlusMinus; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardUnaryExpressionNotPlusMinus16245); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardUnaryExpressionNotPlusMinus"


    // $ANTLR start "ruleWildcardUnaryExpressionNotPlusMinus"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7291:1: ruleWildcardUnaryExpressionNotPlusMinus returns [EObject current=null] : ( ( ( (lv_not_0_0= '!' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operand_2_0= ruleWildcardPrimary ) ) ( (lv_dereferences_3_0= ruleWildcardDereference ) )* ) ) ;
    public final EObject ruleWildcardUnaryExpressionNotPlusMinus() throws RecognitionException {
        EObject current = null;

        Token lv_not_0_0=null;
        EObject lv_operand_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject lv_dereferences_3_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7294:28: ( ( ( ( (lv_not_0_0= '!' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operand_2_0= ruleWildcardPrimary ) ) ( (lv_dereferences_3_0= ruleWildcardDereference ) )* ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7295:1: ( ( ( (lv_not_0_0= '!' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operand_2_0= ruleWildcardPrimary ) ) ( (lv_dereferences_3_0= ruleWildcardDereference ) )* ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7295:1: ( ( ( (lv_not_0_0= '!' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) ) | ( ( (lv_operand_2_0= ruleWildcardPrimary ) ) ( (lv_dereferences_3_0= ruleWildcardDereference ) )* ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==88) ) {
                alt70=1;
            }
            else if ( (LA70_0==RULE_ID||(LA70_0>=RULE_INT && LA70_0<=RULE_STRING)||LA70_0==26||LA70_0==66||LA70_0==70||LA70_0==80||(LA70_0>=89 && LA70_0<=99)) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7295:2: ( ( (lv_not_0_0= '!' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7295:2: ( ( (lv_not_0_0= '!' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7295:3: ( (lv_not_0_0= '!' ) ) ( (lv_operand_1_0= ruleWildcardUnaryExpression ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7295:3: ( (lv_not_0_0= '!' ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7296:1: (lv_not_0_0= '!' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7296:1: (lv_not_0_0= '!' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7297:3: lv_not_0_0= '!'
                    {
                    lv_not_0_0=(Token)match(input,88,FOLLOW_88_in_ruleWildcardUnaryExpressionNotPlusMinus16289); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_not_0_0, grammarAccess.getWildcardUnaryExpressionNotPlusMinusAccess().getNotExclamationMarkKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardUnaryExpressionNotPlusMinusRule());
                      	        }
                             		setWithLastConsumed(current, "not", true, "!");
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7310:2: ( (lv_operand_1_0= ruleWildcardUnaryExpression ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7311:1: (lv_operand_1_0= ruleWildcardUnaryExpression )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7311:1: (lv_operand_1_0= ruleWildcardUnaryExpression )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7312:3: lv_operand_1_0= ruleWildcardUnaryExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardUnaryExpressionNotPlusMinusAccess().getOperandWildcardUnaryExpressionParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardUnaryExpressionNotPlusMinus16323);
                    lv_operand_1_0=ruleWildcardUnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardUnaryExpressionNotPlusMinusRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_1_0, 
                              		"WildcardUnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7329:6: ( ( (lv_operand_2_0= ruleWildcardPrimary ) ) ( (lv_dereferences_3_0= ruleWildcardDereference ) )* )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7329:6: ( ( (lv_operand_2_0= ruleWildcardPrimary ) ) ( (lv_dereferences_3_0= ruleWildcardDereference ) )* )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7329:7: ( (lv_operand_2_0= ruleWildcardPrimary ) ) ( (lv_dereferences_3_0= ruleWildcardDereference ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7329:7: ( (lv_operand_2_0= ruleWildcardPrimary ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7330:1: (lv_operand_2_0= ruleWildcardPrimary )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7330:1: (lv_operand_2_0= ruleWildcardPrimary )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7331:3: lv_operand_2_0= ruleWildcardPrimary
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardUnaryExpressionNotPlusMinusAccess().getOperandWildcardPrimaryParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardPrimary_in_ruleWildcardUnaryExpressionNotPlusMinus16352);
                    lv_operand_2_0=ruleWildcardPrimary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardUnaryExpressionNotPlusMinusRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"WildcardPrimary");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7347:2: ( (lv_dereferences_3_0= ruleWildcardDereference ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==66) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7348:1: (lv_dereferences_3_0= ruleWildcardDereference )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7348:1: (lv_dereferences_3_0= ruleWildcardDereference )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7349:3: lv_dereferences_3_0= ruleWildcardDereference
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getWildcardUnaryExpressionNotPlusMinusAccess().getDereferencesWildcardDereferenceParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleWildcardDereference_in_ruleWildcardUnaryExpressionNotPlusMinus16373);
                    	    lv_dereferences_3_0=ruleWildcardDereference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getWildcardUnaryExpressionNotPlusMinusRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"dereferences",
                    	              		lv_dereferences_3_0, 
                    	              		"WildcardDereference");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardUnaryExpressionNotPlusMinus"


    // $ANTLR start "entryRuleWildcardPrimary"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7373:1: entryRuleWildcardPrimary returns [EObject current=null] : iv_ruleWildcardPrimary= ruleWildcardPrimary EOF ;
    public final EObject entryRuleWildcardPrimary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardPrimary = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7374:2: (iv_ruleWildcardPrimary= ruleWildcardPrimary EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7375:2: iv_ruleWildcardPrimary= ruleWildcardPrimary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardPrimaryRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardPrimary_in_entryRuleWildcardPrimary16411);
            iv_ruleWildcardPrimary=ruleWildcardPrimary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardPrimary; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardPrimary16421); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardPrimary"


    // $ANTLR start "ruleWildcardPrimary"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7382:1: ruleWildcardPrimary returns [EObject current=null] : (this_WildcardParExpression_0= ruleWildcardParExpression | this_WildcardDereference_1= ruleWildcardDereference | this_WildcardLiteral_2= ruleWildcardLiteral | this_WildcardClassLiteral_3= ruleWildcardClassLiteral | this_WildcardNew_4= ruleWildcardNew | this_WildcardQName_5= ruleWildcardQName ) ;
    public final EObject ruleWildcardPrimary() throws RecognitionException {
        EObject current = null;

        EObject this_WildcardParExpression_0 = null;

        EObject this_WildcardDereference_1 = null;

        EObject this_WildcardLiteral_2 = null;

        EObject this_WildcardClassLiteral_3 = null;

        EObject this_WildcardNew_4 = null;

        EObject this_WildcardQName_5 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7385:28: ( (this_WildcardParExpression_0= ruleWildcardParExpression | this_WildcardDereference_1= ruleWildcardDereference | this_WildcardLiteral_2= ruleWildcardLiteral | this_WildcardClassLiteral_3= ruleWildcardClassLiteral | this_WildcardNew_4= ruleWildcardNew | this_WildcardQName_5= ruleWildcardQName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7386:1: (this_WildcardParExpression_0= ruleWildcardParExpression | this_WildcardDereference_1= ruleWildcardDereference | this_WildcardLiteral_2= ruleWildcardLiteral | this_WildcardClassLiteral_3= ruleWildcardClassLiteral | this_WildcardNew_4= ruleWildcardNew | this_WildcardQName_5= ruleWildcardQName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7386:1: (this_WildcardParExpression_0= ruleWildcardParExpression | this_WildcardDereference_1= ruleWildcardDereference | this_WildcardLiteral_2= ruleWildcardLiteral | this_WildcardClassLiteral_3= ruleWildcardClassLiteral | this_WildcardNew_4= ruleWildcardNew | this_WildcardQName_5= ruleWildcardQName )
            int alt71=6;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7387:2: this_WildcardParExpression_0= ruleWildcardParExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardPrimaryAccess().getWildcardParExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardParExpression_in_ruleWildcardPrimary16471);
                    this_WildcardParExpression_0=ruleWildcardParExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardParExpression_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7400:2: this_WildcardDereference_1= ruleWildcardDereference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardPrimaryAccess().getWildcardDereferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardDereference_in_ruleWildcardPrimary16501);
                    this_WildcardDereference_1=ruleWildcardDereference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardDereference_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7413:2: this_WildcardLiteral_2= ruleWildcardLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardPrimaryAccess().getWildcardLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardLiteral_in_ruleWildcardPrimary16531);
                    this_WildcardLiteral_2=ruleWildcardLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardLiteral_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7426:2: this_WildcardClassLiteral_3= ruleWildcardClassLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardPrimaryAccess().getWildcardClassLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardClassLiteral_in_ruleWildcardPrimary16561);
                    this_WildcardClassLiteral_3=ruleWildcardClassLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardClassLiteral_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7439:2: this_WildcardNew_4= ruleWildcardNew
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardPrimaryAccess().getWildcardNewParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardNew_in_ruleWildcardPrimary16591);
                    this_WildcardNew_4=ruleWildcardNew();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardNew_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7452:2: this_WildcardQName_5= ruleWildcardQName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardPrimaryAccess().getWildcardQNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardQName_in_ruleWildcardPrimary16621);
                    this_WildcardQName_5=ruleWildcardQName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardQName_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardPrimary"


    // $ANTLR start "entryRuleWildcardParExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7471:1: entryRuleWildcardParExpression returns [EObject current=null] : iv_ruleWildcardParExpression= ruleWildcardParExpression EOF ;
    public final EObject entryRuleWildcardParExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardParExpression = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7472:2: (iv_ruleWildcardParExpression= ruleWildcardParExpression EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7473:2: iv_ruleWildcardParExpression= ruleWildcardParExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardParExpressionRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardParExpression_in_entryRuleWildcardParExpression16656);
            iv_ruleWildcardParExpression=ruleWildcardParExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardParExpression; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardParExpression16666); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardParExpression"


    // $ANTLR start "ruleWildcardParExpression"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7480:1: ruleWildcardParExpression returns [EObject current=null] : (otherlv_0= '(' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= ')' ) ;
    public final EObject ruleWildcardParExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7483:28: ( (otherlv_0= '(' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= ')' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7484:1: (otherlv_0= '(' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= ')' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7484:1: (otherlv_0= '(' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= ')' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7484:3: otherlv_0= '(' ( (lv_expression_1_0= ruleWildcardExpression ) ) otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,26,FOLLOW_26_in_ruleWildcardParExpression16703); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWildcardParExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7488:1: ( (lv_expression_1_0= ruleWildcardExpression ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7489:1: (lv_expression_1_0= ruleWildcardExpression )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7489:1: (lv_expression_1_0= ruleWildcardExpression )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7490:3: lv_expression_1_0= ruleWildcardExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardParExpressionAccess().getExpressionWildcardExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardExpression_in_ruleWildcardParExpression16724);
            lv_expression_1_0=ruleWildcardExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardParExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"WildcardExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,27,FOLLOW_27_in_ruleWildcardParExpression16736); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getWildcardParExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardParExpression"


    // $ANTLR start "entryRuleWildcardClassLiteral"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7518:1: entryRuleWildcardClassLiteral returns [EObject current=null] : iv_ruleWildcardClassLiteral= ruleWildcardClassLiteral EOF ;
    public final EObject entryRuleWildcardClassLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardClassLiteral = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7519:2: (iv_ruleWildcardClassLiteral= ruleWildcardClassLiteral EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7520:2: iv_ruleWildcardClassLiteral= ruleWildcardClassLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardClassLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardClassLiteral_in_entryRuleWildcardClassLiteral16772);
            iv_ruleWildcardClassLiteral=ruleWildcardClassLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardClassLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardClassLiteral16782); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardClassLiteral"


    // $ANTLR start "ruleWildcardClassLiteral"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7527:1: ruleWildcardClassLiteral returns [EObject current=null] : ( ( (lv_baseType_0_0= ruleWildcardType ) ) ( ( (lv_dimension_1_0= '[' ) ) ( (lv_dimension_2_0= ']' ) ) )* otherlv_3= '.' otherlv_4= 'class' ) ;
    public final EObject ruleWildcardClassLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_dimension_1_0=null;
        Token lv_dimension_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_baseType_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7530:28: ( ( ( (lv_baseType_0_0= ruleWildcardType ) ) ( ( (lv_dimension_1_0= '[' ) ) ( (lv_dimension_2_0= ']' ) ) )* otherlv_3= '.' otherlv_4= 'class' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7531:1: ( ( (lv_baseType_0_0= ruleWildcardType ) ) ( ( (lv_dimension_1_0= '[' ) ) ( (lv_dimension_2_0= ']' ) ) )* otherlv_3= '.' otherlv_4= 'class' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7531:1: ( ( (lv_baseType_0_0= ruleWildcardType ) ) ( ( (lv_dimension_1_0= '[' ) ) ( (lv_dimension_2_0= ']' ) ) )* otherlv_3= '.' otherlv_4= 'class' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7531:2: ( (lv_baseType_0_0= ruleWildcardType ) ) ( ( (lv_dimension_1_0= '[' ) ) ( (lv_dimension_2_0= ']' ) ) )* otherlv_3= '.' otherlv_4= 'class'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7531:2: ( (lv_baseType_0_0= ruleWildcardType ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7532:1: (lv_baseType_0_0= ruleWildcardType )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7532:1: (lv_baseType_0_0= ruleWildcardType )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7533:3: lv_baseType_0_0= ruleWildcardType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardClassLiteralAccess().getBaseTypeWildcardTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardType_in_ruleWildcardClassLiteral16828);
            lv_baseType_0_0=ruleWildcardType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardClassLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"baseType",
                      		lv_baseType_0_0, 
                      		"WildcardType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7549:2: ( ( (lv_dimension_1_0= '[' ) ) ( (lv_dimension_2_0= ']' ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==73) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7549:3: ( (lv_dimension_1_0= '[' ) ) ( (lv_dimension_2_0= ']' ) )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7549:3: ( (lv_dimension_1_0= '[' ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7550:1: (lv_dimension_1_0= '[' )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7550:1: (lv_dimension_1_0= '[' )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7551:3: lv_dimension_1_0= '['
            	    {
            	    lv_dimension_1_0=(Token)match(input,73,FOLLOW_73_in_ruleWildcardClassLiteral16847); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_dimension_1_0, grammarAccess.getWildcardClassLiteralAccess().getDimensionLeftSquareBracketKeyword_1_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getWildcardClassLiteralRule());
            	      	        }
            	             		addWithLastConsumed(current, "dimension", lv_dimension_1_0, "[");
            	      	    
            	    }

            	    }


            	    }

            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7564:2: ( (lv_dimension_2_0= ']' ) )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7565:1: (lv_dimension_2_0= ']' )
            	    {
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7565:1: (lv_dimension_2_0= ']' )
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7566:3: lv_dimension_2_0= ']'
            	    {
            	    lv_dimension_2_0=(Token)match(input,74,FOLLOW_74_in_ruleWildcardClassLiteral16878); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_dimension_2_0, grammarAccess.getWildcardClassLiteralAccess().getDimensionRightSquareBracketKeyword_1_1_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getWildcardClassLiteralRule());
            	      	        }
            	             		addWithLastConsumed(current, "dimension", lv_dimension_2_0, "]");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            otherlv_3=(Token)match(input,66,FOLLOW_66_in_ruleWildcardClassLiteral16905); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWildcardClassLiteralAccess().getFullStopKeyword_2());
                  
            }
            otherlv_4=(Token)match(input,17,FOLLOW_17_in_ruleWildcardClassLiteral16917); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getWildcardClassLiteralAccess().getClassKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardClassLiteral"


    // $ANTLR start "entryRuleWildcardType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7595:1: entryRuleWildcardType returns [EObject current=null] : iv_ruleWildcardType= ruleWildcardType EOF ;
    public final EObject entryRuleWildcardType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardType = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7596:2: (iv_ruleWildcardType= ruleWildcardType EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7597:2: iv_ruleWildcardType= ruleWildcardType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardTypeRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardType_in_entryRuleWildcardType16953);
            iv_ruleWildcardType=ruleWildcardType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardType16963); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardType"


    // $ANTLR start "ruleWildcardType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7604:1: ruleWildcardType returns [EObject current=null] : (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_WildcardQName_1= ruleWildcardQName ) ;
    public final EObject ruleWildcardType() throws RecognitionException {
        EObject current = null;

        EObject this_WildcardPrimitiveType_0 = null;

        EObject this_WildcardQName_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7607:28: ( (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_WildcardQName_1= ruleWildcardQName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7608:1: (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_WildcardQName_1= ruleWildcardQName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7608:1: (this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType | this_WildcardQName_1= ruleWildcardQName )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=89 && LA73_0<=97)) ) {
                alt73=1;
            }
            else if ( (LA73_0==RULE_ID) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7609:2: this_WildcardPrimitiveType_0= ruleWildcardPrimitiveType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardTypeAccess().getWildcardPrimitiveTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardPrimitiveType_in_ruleWildcardType17013);
                    this_WildcardPrimitiveType_0=ruleWildcardPrimitiveType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardPrimitiveType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7622:2: this_WildcardQName_1= ruleWildcardQName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardTypeAccess().getWildcardQNameParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardQName_in_ruleWildcardType17043);
                    this_WildcardQName_1=ruleWildcardQName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardQName_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardType"


    // $ANTLR start "entryRuleWildcardPrimitiveType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7641:1: entryRuleWildcardPrimitiveType returns [EObject current=null] : iv_ruleWildcardPrimitiveType= ruleWildcardPrimitiveType EOF ;
    public final EObject entryRuleWildcardPrimitiveType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardPrimitiveType = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7642:2: (iv_ruleWildcardPrimitiveType= ruleWildcardPrimitiveType EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7643:2: iv_ruleWildcardPrimitiveType= ruleWildcardPrimitiveType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardPrimitiveTypeRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardPrimitiveType_in_entryRuleWildcardPrimitiveType17078);
            iv_ruleWildcardPrimitiveType=ruleWildcardPrimitiveType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardPrimitiveType; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardPrimitiveType17088); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardPrimitiveType"


    // $ANTLR start "ruleWildcardPrimitiveType"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7650:1: ruleWildcardPrimitiveType returns [EObject current=null] : ( ( () otherlv_1= 'boolean' ) | ( () otherlv_3= 'char' ) | ( () otherlv_5= 'byte' ) | ( () otherlv_7= 'short' ) | ( () otherlv_9= 'int' ) | ( () otherlv_11= 'long' ) | ( () otherlv_13= 'float' ) | ( () otherlv_15= 'double' ) | ( () otherlv_17= 'void' ) ) ;
    public final EObject ruleWildcardPrimitiveType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7653:28: ( ( ( () otherlv_1= 'boolean' ) | ( () otherlv_3= 'char' ) | ( () otherlv_5= 'byte' ) | ( () otherlv_7= 'short' ) | ( () otherlv_9= 'int' ) | ( () otherlv_11= 'long' ) | ( () otherlv_13= 'float' ) | ( () otherlv_15= 'double' ) | ( () otherlv_17= 'void' ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7654:1: ( ( () otherlv_1= 'boolean' ) | ( () otherlv_3= 'char' ) | ( () otherlv_5= 'byte' ) | ( () otherlv_7= 'short' ) | ( () otherlv_9= 'int' ) | ( () otherlv_11= 'long' ) | ( () otherlv_13= 'float' ) | ( () otherlv_15= 'double' ) | ( () otherlv_17= 'void' ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7654:1: ( ( () otherlv_1= 'boolean' ) | ( () otherlv_3= 'char' ) | ( () otherlv_5= 'byte' ) | ( () otherlv_7= 'short' ) | ( () otherlv_9= 'int' ) | ( () otherlv_11= 'long' ) | ( () otherlv_13= 'float' ) | ( () otherlv_15= 'double' ) | ( () otherlv_17= 'void' ) )
            int alt74=9;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt74=1;
                }
                break;
            case 90:
                {
                alt74=2;
                }
                break;
            case 91:
                {
                alt74=3;
                }
                break;
            case 92:
                {
                alt74=4;
                }
                break;
            case 93:
                {
                alt74=5;
                }
                break;
            case 94:
                {
                alt74=6;
                }
                break;
            case 95:
                {
                alt74=7;
                }
                break;
            case 96:
                {
                alt74=8;
                }
                break;
            case 97:
                {
                alt74=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7654:2: ( () otherlv_1= 'boolean' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7654:2: ( () otherlv_1= 'boolean' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7654:3: () otherlv_1= 'boolean'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7654:3: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7655:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardBooleanAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,89,FOLLOW_89_in_ruleWildcardPrimitiveType17138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getWildcardPrimitiveTypeAccess().getBooleanKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7668:6: ( () otherlv_3= 'char' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7668:6: ( () otherlv_3= 'char' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7668:7: () otherlv_3= 'char'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7668:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7669:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardCharAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_3=(Token)match(input,90,FOLLOW_90_in_ruleWildcardPrimitiveType17170); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getWildcardPrimitiveTypeAccess().getCharKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7682:6: ( () otherlv_5= 'byte' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7682:6: ( () otherlv_5= 'byte' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7682:7: () otherlv_5= 'byte'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7682:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7683:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardByteAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,91,FOLLOW_91_in_ruleWildcardPrimitiveType17202); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getWildcardPrimitiveTypeAccess().getByteKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7696:6: ( () otherlv_7= 'short' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7696:6: ( () otherlv_7= 'short' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7696:7: () otherlv_7= 'short'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7696:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7697:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardShortAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_7=(Token)match(input,92,FOLLOW_92_in_ruleWildcardPrimitiveType17234); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getWildcardPrimitiveTypeAccess().getShortKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7710:6: ( () otherlv_9= 'int' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7710:6: ( () otherlv_9= 'int' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7710:7: () otherlv_9= 'int'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7710:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7711:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardIntAction_4_0(),
                                  current);
                          
                    }

                    }

                    otherlv_9=(Token)match(input,93,FOLLOW_93_in_ruleWildcardPrimitiveType17266); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getWildcardPrimitiveTypeAccess().getIntKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7724:6: ( () otherlv_11= 'long' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7724:6: ( () otherlv_11= 'long' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7724:7: () otherlv_11= 'long'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7724:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7725:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardLongAction_5_0(),
                                  current);
                          
                    }

                    }

                    otherlv_11=(Token)match(input,94,FOLLOW_94_in_ruleWildcardPrimitiveType17298); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getWildcardPrimitiveTypeAccess().getLongKeyword_5_1());
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7738:6: ( () otherlv_13= 'float' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7738:6: ( () otherlv_13= 'float' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7738:7: () otherlv_13= 'float'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7738:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7739:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardFloatAction_6_0(),
                                  current);
                          
                    }

                    }

                    otherlv_13=(Token)match(input,95,FOLLOW_95_in_ruleWildcardPrimitiveType17330); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getWildcardPrimitiveTypeAccess().getFloatKeyword_6_1());
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7752:6: ( () otherlv_15= 'double' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7752:6: ( () otherlv_15= 'double' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7752:7: () otherlv_15= 'double'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7752:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7753:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardDoubleAction_7_0(),
                                  current);
                          
                    }

                    }

                    otherlv_15=(Token)match(input,96,FOLLOW_96_in_ruleWildcardPrimitiveType17362); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getWildcardPrimitiveTypeAccess().getDoubleKeyword_7_1());
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7766:6: ( () otherlv_17= 'void' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7766:6: ( () otherlv_17= 'void' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7766:7: () otherlv_17= 'void'
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7766:7: ()
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7767:2: 
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getWildcardPrimitiveTypeAccess().getWildcardVoidAction_8_0(),
                                  current);
                          
                    }

                    }

                    otherlv_17=(Token)match(input,97,FOLLOW_97_in_ruleWildcardPrimitiveType17394); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getWildcardPrimitiveTypeAccess().getVoidKeyword_8_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardPrimitiveType"


    // $ANTLR start "entryRuleWildcardLiteral"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7787:1: entryRuleWildcardLiteral returns [EObject current=null] : iv_ruleWildcardLiteral= ruleWildcardLiteral EOF ;
    public final EObject entryRuleWildcardLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardLiteral = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7788:2: (iv_ruleWildcardLiteral= ruleWildcardLiteral EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7789:2: iv_ruleWildcardLiteral= ruleWildcardLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardLiteralRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardLiteral_in_entryRuleWildcardLiteral17431);
            iv_ruleWildcardLiteral=ruleWildcardLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardLiteral; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardLiteral17441); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardLiteral"


    // $ANTLR start "ruleWildcardLiteral"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7796:1: ruleWildcardLiteral returns [EObject current=null] : (this_WildcardBoolean_0= ruleWildcardBoolean | this_WildcardInt_1= ruleWildcardInt | this_WildcardNull_2= ruleWildcardNull | this_WildcardString_3= ruleWildcardString ) ;
    public final EObject ruleWildcardLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_WildcardBoolean_0 = null;

        EObject this_WildcardInt_1 = null;

        EObject this_WildcardNull_2 = null;

        EObject this_WildcardString_3 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7799:28: ( (this_WildcardBoolean_0= ruleWildcardBoolean | this_WildcardInt_1= ruleWildcardInt | this_WildcardNull_2= ruleWildcardNull | this_WildcardString_3= ruleWildcardString ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7800:1: (this_WildcardBoolean_0= ruleWildcardBoolean | this_WildcardInt_1= ruleWildcardInt | this_WildcardNull_2= ruleWildcardNull | this_WildcardString_3= ruleWildcardString )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7800:1: (this_WildcardBoolean_0= ruleWildcardBoolean | this_WildcardInt_1= ruleWildcardInt | this_WildcardNull_2= ruleWildcardNull | this_WildcardString_3= ruleWildcardString )
            int alt75=4;
            switch ( input.LA(1) ) {
            case 98:
            case 99:
                {
                alt75=1;
                }
                break;
            case RULE_INT:
                {
                alt75=2;
                }
                break;
            case 80:
                {
                alt75=3;
                }
                break;
            case RULE_STRING:
                {
                alt75=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }

            switch (alt75) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7801:2: this_WildcardBoolean_0= ruleWildcardBoolean
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardLiteralAccess().getWildcardBooleanParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardBoolean_in_ruleWildcardLiteral17491);
                    this_WildcardBoolean_0=ruleWildcardBoolean();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardBoolean_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7814:2: this_WildcardInt_1= ruleWildcardInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardLiteralAccess().getWildcardIntParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardInt_in_ruleWildcardLiteral17521);
                    this_WildcardInt_1=ruleWildcardInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardInt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7827:2: this_WildcardNull_2= ruleWildcardNull
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardLiteralAccess().getWildcardNullParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardNull_in_ruleWildcardLiteral17551);
                    this_WildcardNull_2=ruleWildcardNull();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardNull_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7840:2: this_WildcardString_3= ruleWildcardString
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardLiteralAccess().getWildcardStringParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardString_in_ruleWildcardLiteral17581);
                    this_WildcardString_3=ruleWildcardString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardString_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardLiteral"


    // $ANTLR start "entryRuleWildcardBoolean"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7859:1: entryRuleWildcardBoolean returns [EObject current=null] : iv_ruleWildcardBoolean= ruleWildcardBoolean EOF ;
    public final EObject entryRuleWildcardBoolean() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardBoolean = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7860:2: (iv_ruleWildcardBoolean= ruleWildcardBoolean EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7861:2: iv_ruleWildcardBoolean= ruleWildcardBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardBooleanRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardBoolean_in_entryRuleWildcardBoolean17616);
            iv_ruleWildcardBoolean=ruleWildcardBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardBoolean; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardBoolean17626); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardBoolean"


    // $ANTLR start "ruleWildcardBoolean"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7868:1: ruleWildcardBoolean returns [EObject current=null] : ( ( (lv_value_0_0= 'true' ) ) | ( (lv_value_1_0= 'false' ) ) ) ;
    public final EObject ruleWildcardBoolean() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7871:28: ( ( ( (lv_value_0_0= 'true' ) ) | ( (lv_value_1_0= 'false' ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7872:1: ( ( (lv_value_0_0= 'true' ) ) | ( (lv_value_1_0= 'false' ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7872:1: ( ( (lv_value_0_0= 'true' ) ) | ( (lv_value_1_0= 'false' ) ) )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==98) ) {
                alt76=1;
            }
            else if ( (LA76_0==99) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7872:2: ( (lv_value_0_0= 'true' ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7872:2: ( (lv_value_0_0= 'true' ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7873:1: (lv_value_0_0= 'true' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7873:1: (lv_value_0_0= 'true' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7874:3: lv_value_0_0= 'true'
                    {
                    lv_value_0_0=(Token)match(input,98,FOLLOW_98_in_ruleWildcardBoolean17669); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_value_0_0, grammarAccess.getWildcardBooleanAccess().getValueTrueKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardBooleanRule());
                      	        }
                             		setWithLastConsumed(current, "value", lv_value_0_0, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7888:6: ( (lv_value_1_0= 'false' ) )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7888:6: ( (lv_value_1_0= 'false' ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7889:1: (lv_value_1_0= 'false' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7889:1: (lv_value_1_0= 'false' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7890:3: lv_value_1_0= 'false'
                    {
                    lv_value_1_0=(Token)match(input,99,FOLLOW_99_in_ruleWildcardBoolean17706); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_value_1_0, grammarAccess.getWildcardBooleanAccess().getValueFalseKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardBooleanRule());
                      	        }
                             		setWithLastConsumed(current, "value", lv_value_1_0, "false");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardBoolean"


    // $ANTLR start "entryRuleWildcardInt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7911:1: entryRuleWildcardInt returns [EObject current=null] : iv_ruleWildcardInt= ruleWildcardInt EOF ;
    public final EObject entryRuleWildcardInt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardInt = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7912:2: (iv_ruleWildcardInt= ruleWildcardInt EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7913:2: iv_ruleWildcardInt= ruleWildcardInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardIntRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardInt_in_entryRuleWildcardInt17755);
            iv_ruleWildcardInt=ruleWildcardInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardInt; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardInt17765); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardInt"


    // $ANTLR start "ruleWildcardInt"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7920:1: ruleWildcardInt returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleWildcardInt() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7923:28: ( ( (lv_value_0_0= RULE_INT ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7924:1: ( (lv_value_0_0= RULE_INT ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7924:1: ( (lv_value_0_0= RULE_INT ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7925:1: (lv_value_0_0= RULE_INT )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7925:1: (lv_value_0_0= RULE_INT )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7926:3: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleWildcardInt17806); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getWildcardIntAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getWildcardIntRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardInt"


    // $ANTLR start "entryRuleWildcardNull"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7950:1: entryRuleWildcardNull returns [EObject current=null] : iv_ruleWildcardNull= ruleWildcardNull EOF ;
    public final EObject entryRuleWildcardNull() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardNull = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7951:2: (iv_ruleWildcardNull= ruleWildcardNull EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7952:2: iv_ruleWildcardNull= ruleWildcardNull EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardNullRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardNull_in_entryRuleWildcardNull17846);
            iv_ruleWildcardNull=ruleWildcardNull();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardNull; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardNull17856); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardNull"


    // $ANTLR start "ruleWildcardNull"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7959:1: ruleWildcardNull returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleWildcardNull() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7962:28: ( ( () otherlv_1= 'null' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7963:1: ( () otherlv_1= 'null' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7963:1: ( () otherlv_1= 'null' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7963:2: () otherlv_1= 'null'
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7963:2: ()
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7964:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardNullAccess().getWildcardNullAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_80_in_ruleWildcardNull17905); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardNullAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardNull"


    // $ANTLR start "entryRuleWildcardString"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7984:1: entryRuleWildcardString returns [EObject current=null] : iv_ruleWildcardString= ruleWildcardString EOF ;
    public final EObject entryRuleWildcardString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardString = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7985:2: (iv_ruleWildcardString= ruleWildcardString EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7986:2: iv_ruleWildcardString= ruleWildcardString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardStringRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardString_in_entryRuleWildcardString17941);
            iv_ruleWildcardString=ruleWildcardString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardString; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardString17951); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardString"


    // $ANTLR start "ruleWildcardString"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7993:1: ruleWildcardString returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleWildcardString() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7996:28: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7997:1: ( (lv_value_0_0= RULE_STRING ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7997:1: ( (lv_value_0_0= RULE_STRING ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7998:1: (lv_value_0_0= RULE_STRING )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7998:1: (lv_value_0_0= RULE_STRING )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:7999:3: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleWildcardString17992); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getWildcardStringAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getWildcardStringRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardString"


    // $ANTLR start "entryRuleWildcardNew"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8023:1: entryRuleWildcardNew returns [EObject current=null] : iv_ruleWildcardNew= ruleWildcardNew EOF ;
    public final EObject entryRuleWildcardNew() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardNew = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8024:2: (iv_ruleWildcardNew= ruleWildcardNew EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8025:2: iv_ruleWildcardNew= ruleWildcardNew EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardNewRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardNew_in_entryRuleWildcardNew18032);
            iv_ruleWildcardNew=ruleWildcardNew();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardNew; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardNew18042); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardNew"


    // $ANTLR start "ruleWildcardNew"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8032:1: ruleWildcardNew returns [EObject current=null] : (otherlv_0= 'new' ( (lv_name_1_0= ruleWildcardQName ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' ) ;
    public final EObject ruleWildcardNew() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_name_1_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8035:28: ( (otherlv_0= 'new' ( (lv_name_1_0= ruleWildcardQName ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8036:1: (otherlv_0= 'new' ( (lv_name_1_0= ruleWildcardQName ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8036:1: (otherlv_0= 'new' ( (lv_name_1_0= ruleWildcardQName ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8036:3: otherlv_0= 'new' ( (lv_name_1_0= ruleWildcardQName ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')'
            {
            otherlv_0=(Token)match(input,70,FOLLOW_70_in_ruleWildcardNew18079); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWildcardNewAccess().getNewKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8040:1: ( (lv_name_1_0= ruleWildcardQName ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8041:1: (lv_name_1_0= ruleWildcardQName )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8041:1: (lv_name_1_0= ruleWildcardQName )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8042:3: lv_name_1_0= ruleWildcardQName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardNewAccess().getNameWildcardQNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardQName_in_ruleWildcardNew18100);
            lv_name_1_0=ruleWildcardQName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardNewRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"WildcardQName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,26,FOLLOW_26_in_ruleWildcardNew18112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getWildcardNewAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8062:1: ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_ID||(LA78_0>=RULE_INT && LA78_0<=RULE_STRING)||LA78_0==26||LA78_0==43||LA78_0==54||LA78_0==66||LA78_0==70||LA78_0==80||(LA78_0>=88 && LA78_0<=99)) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8062:2: ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8062:2: ( (lv_parameters_3_0= ruleWildcardExpression ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8063:1: (lv_parameters_3_0= ruleWildcardExpression )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8063:1: (lv_parameters_3_0= ruleWildcardExpression )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8064:3: lv_parameters_3_0= ruleWildcardExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardNewAccess().getParametersWildcardExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardExpression_in_ruleWildcardNew18134);
                    lv_parameters_3_0=ruleWildcardExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardNewRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_3_0, 
                              		"WildcardExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8080:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==21) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8080:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,21,FOLLOW_21_in_ruleWildcardNew18147); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getWildcardNewAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8084:1: ( (lv_parameters_5_0= ruleWildcardExpression ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8085:1: (lv_parameters_5_0= ruleWildcardExpression )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8085:1: (lv_parameters_5_0= ruleWildcardExpression )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8086:3: lv_parameters_5_0= ruleWildcardExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getWildcardNewAccess().getParametersWildcardExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleWildcardExpression_in_ruleWildcardNew18168);
                    	    lv_parameters_5_0=ruleWildcardExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getWildcardNewRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_5_0, 
                    	              		"WildcardExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,27,FOLLOW_27_in_ruleWildcardNew18184); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getWildcardNewAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardNew"


    // $ANTLR start "entryRuleWildcardQName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8114:1: entryRuleWildcardQName returns [EObject current=null] : iv_ruleWildcardQName= ruleWildcardQName EOF ;
    public final EObject entryRuleWildcardQName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardQName = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8115:2: (iv_ruleWildcardQName= ruleWildcardQName EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8116:2: iv_ruleWildcardQName= ruleWildcardQName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardQNameRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardQName_in_entryRuleWildcardQName18220);
            iv_ruleWildcardQName=ruleWildcardQName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardQName; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardQName18230); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardQName"


    // $ANTLR start "ruleWildcardQName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8123:1: ruleWildcardQName returns [EObject current=null] : ( (lv_name_0_0= ruleWildcardQNameTerminal ) ) ;
    public final EObject ruleWildcardQName() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8126:28: ( ( (lv_name_0_0= ruleWildcardQNameTerminal ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8127:1: ( (lv_name_0_0= ruleWildcardQNameTerminal ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8127:1: ( (lv_name_0_0= ruleWildcardQNameTerminal ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8128:1: (lv_name_0_0= ruleWildcardQNameTerminal )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8128:1: (lv_name_0_0= ruleWildcardQNameTerminal )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8129:3: lv_name_0_0= ruleWildcardQNameTerminal
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWildcardQNameAccess().getNameWildcardQNameTerminalParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_ruleWildcardQNameTerminal_in_ruleWildcardQName18275);
            lv_name_0_0=ruleWildcardQNameTerminal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWildcardQNameRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"WildcardQNameTerminal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardQName"


    // $ANTLR start "entryRuleWildcardQNameTerminal"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8153:1: entryRuleWildcardQNameTerminal returns [String current=null] : iv_ruleWildcardQNameTerminal= ruleWildcardQNameTerminal EOF ;
    public final String entryRuleWildcardQNameTerminal() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleWildcardQNameTerminal = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8154:2: (iv_ruleWildcardQNameTerminal= ruleWildcardQNameTerminal EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8155:2: iv_ruleWildcardQNameTerminal= ruleWildcardQNameTerminal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardQNameTerminalRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardQNameTerminal_in_entryRuleWildcardQNameTerminal18311);
            iv_ruleWildcardQNameTerminal=ruleWildcardQNameTerminal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardQNameTerminal.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardQNameTerminal18322); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardQNameTerminal"


    // $ANTLR start "ruleWildcardQNameTerminal"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8162:1: ruleWildcardQNameTerminal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '::' this_ID_2= RULE_ID )* ) ;
    public final AntlrDatatypeRuleToken ruleWildcardQNameTerminal() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8165:28: ( (this_ID_0= RULE_ID (kw= '::' this_ID_2= RULE_ID )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8166:1: (this_ID_0= RULE_ID (kw= '::' this_ID_2= RULE_ID )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8166:1: (this_ID_0= RULE_ID (kw= '::' this_ID_2= RULE_ID )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8166:6: this_ID_0= RULE_ID (kw= '::' this_ID_2= RULE_ID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleWildcardQNameTerminal18362); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getWildcardQNameTerminalAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8173:1: (kw= '::' this_ID_2= RULE_ID )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==100) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8174:2: kw= '::' this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,100,FOLLOW_100_in_ruleWildcardQNameTerminal18381); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getWildcardQNameTerminalAccess().getColonColonKeyword_1_0()); 
            	          
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleWildcardQNameTerminal18396); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_2, grammarAccess.getWildcardQNameTerminalAccess().getIDTerminalRuleCall_1_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardQNameTerminal"


    // $ANTLR start "entryRuleWildcardDereference"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8194:1: entryRuleWildcardDereference returns [EObject current=null] : iv_ruleWildcardDereference= ruleWildcardDereference EOF ;
    public final EObject entryRuleWildcardDereference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardDereference = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8195:2: (iv_ruleWildcardDereference= ruleWildcardDereference EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8196:2: iv_ruleWildcardDereference= ruleWildcardDereference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardDereferenceRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardDereference_in_entryRuleWildcardDereference18443);
            iv_ruleWildcardDereference=ruleWildcardDereference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardDereference; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardDereference18453); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardDereference"


    // $ANTLR start "ruleWildcardDereference"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8203:1: ruleWildcardDereference returns [EObject current=null] : (this_WildcardCall_0= ruleWildcardCall | this_WildcardField_1= ruleWildcardField ) ;
    public final EObject ruleWildcardDereference() throws RecognitionException {
        EObject current = null;

        EObject this_WildcardCall_0 = null;

        EObject this_WildcardField_1 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8206:28: ( (this_WildcardCall_0= ruleWildcardCall | this_WildcardField_1= ruleWildcardField ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8207:1: (this_WildcardCall_0= ruleWildcardCall | this_WildcardField_1= ruleWildcardField )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8207:1: (this_WildcardCall_0= ruleWildcardCall | this_WildcardField_1= ruleWildcardField )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==66) ) {
                int LA80_1 = input.LA(2);

                if ( (LA80_1==RULE_ID) ) {
                    int LA80_2 = input.LA(3);

                    if ( (LA80_2==26) ) {
                        alt80=1;
                    }
                    else if ( (LA80_2==EOF||LA80_2==14||LA80_2==21||LA80_2==27||LA80_2==43||(LA80_2>=48 && LA80_2<=49)||LA80_2==51||LA80_2==54||(LA80_2>=57 && LA80_2<=63)||LA80_2==66||(LA80_2>=85 && LA80_2<=87)) ) {
                        alt80=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8208:2: this_WildcardCall_0= ruleWildcardCall
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardDereferenceAccess().getWildcardCallParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardCall_in_ruleWildcardDereference18503);
                    this_WildcardCall_0=ruleWildcardCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardCall_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8221:2: this_WildcardField_1= ruleWildcardField
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getWildcardDereferenceAccess().getWildcardFieldParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_ruleWildcardField_in_ruleWildcardDereference18533);
                    this_WildcardField_1=ruleWildcardField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WildcardField_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardDereference"


    // $ANTLR start "entryRuleWildcardCall"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8240:1: entryRuleWildcardCall returns [EObject current=null] : iv_ruleWildcardCall= ruleWildcardCall EOF ;
    public final EObject entryRuleWildcardCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardCall = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8241:2: (iv_ruleWildcardCall= ruleWildcardCall EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8242:2: iv_ruleWildcardCall= ruleWildcardCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardCallRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardCall_in_entryRuleWildcardCall18568);
            iv_ruleWildcardCall=ruleWildcardCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardCall; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardCall18578); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardCall"


    // $ANTLR start "ruleWildcardCall"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8249:1: ruleWildcardCall returns [EObject current=null] : (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' ) ;
    public final EObject ruleWildcardCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;


         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8252:28: ( (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8253:1: (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8253:1: (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')' )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8253:3: otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '(' ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )? otherlv_6= ')'
            {
            otherlv_0=(Token)match(input,66,FOLLOW_66_in_ruleWildcardCall18615); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWildcardCallAccess().getFullStopKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8257:1: ( (lv_name_1_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8258:1: (lv_name_1_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8258:1: (lv_name_1_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8259:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleWildcardCall18632); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getWildcardCallAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getWildcardCallRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ID");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,26,FOLLOW_26_in_ruleWildcardCall18649); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getWildcardCallAccess().getLeftParenthesisKeyword_2());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8279:1: ( ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )* )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==RULE_ID||(LA82_0>=RULE_INT && LA82_0<=RULE_STRING)||LA82_0==26||LA82_0==43||LA82_0==54||LA82_0==66||LA82_0==70||LA82_0==80||(LA82_0>=88 && LA82_0<=99)) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8279:2: ( (lv_parameters_3_0= ruleWildcardExpression ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )*
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8279:2: ( (lv_parameters_3_0= ruleWildcardExpression ) )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8280:1: (lv_parameters_3_0= ruleWildcardExpression )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8280:1: (lv_parameters_3_0= ruleWildcardExpression )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8281:3: lv_parameters_3_0= ruleWildcardExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardCallAccess().getParametersWildcardExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_ruleWildcardExpression_in_ruleWildcardCall18671);
                    lv_parameters_3_0=ruleWildcardExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardCallRule());
                      	        }
                             		add(
                             			current, 
                             			"parameters",
                              		lv_parameters_3_0, 
                              		"WildcardExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8297:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) ) )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==21) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8297:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleWildcardExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,21,FOLLOW_21_in_ruleWildcardCall18684); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getWildcardCallAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8301:1: ( (lv_parameters_5_0= ruleWildcardExpression ) )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8302:1: (lv_parameters_5_0= ruleWildcardExpression )
                    	    {
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8302:1: (lv_parameters_5_0= ruleWildcardExpression )
                    	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8303:3: lv_parameters_5_0= ruleWildcardExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getWildcardCallAccess().getParametersWildcardExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_ruleWildcardExpression_in_ruleWildcardCall18705);
                    	    lv_parameters_5_0=ruleWildcardExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getWildcardCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"parameters",
                    	              		lv_parameters_5_0, 
                    	              		"WildcardExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,27,FOLLOW_27_in_ruleWildcardCall18721); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getWildcardCallAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardCall"


    // $ANTLR start "entryRuleWildcardField"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8331:1: entryRuleWildcardField returns [EObject current=null] : iv_ruleWildcardField= ruleWildcardField EOF ;
    public final EObject entryRuleWildcardField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardField = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8332:2: (iv_ruleWildcardField= ruleWildcardField EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8333:2: iv_ruleWildcardField= ruleWildcardField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardFieldRule()); 
            }
            pushFollow(FOLLOW_ruleWildcardField_in_entryRuleWildcardField18757);
            iv_ruleWildcardField=ruleWildcardField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardField; 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleWildcardField18767); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWildcardField"


    // $ANTLR start "ruleWildcardField"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8340:1: ruleWildcardField returns [EObject current=null] : (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleWildcardField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8343:28: ( (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8344:1: (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8344:1: (otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8344:3: otherlv_0= '.' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,66,FOLLOW_66_in_ruleWildcardField18804); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWildcardFieldAccess().getFullStopKeyword_0());
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8348:1: ( (lv_name_1_0= RULE_ID ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8349:1: (lv_name_1_0= RULE_ID )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8349:1: (lv_name_1_0= RULE_ID )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8350:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleWildcardField18821); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getWildcardFieldAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getWildcardFieldRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWildcardField"


    // $ANTLR start "entryRuleQName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8374:1: entryRuleQName returns [String current=null] : iv_ruleQName= ruleQName EOF ;
    public final String entryRuleQName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQName = null;


        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8375:2: (iv_ruleQName= ruleQName EOF )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8376:2: iv_ruleQName= ruleQName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQNameRule()); 
            }
            pushFollow(FOLLOW_ruleQName_in_entryRuleQName18863);
            iv_ruleQName=ruleQName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQName.getText(); 
            }
            match(input,EOF,FOLLOW_EOF_in_entryRuleQName18874); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQName"


    // $ANTLR start "ruleQName"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8383:1: ruleQName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) ;
    public final AntlrDatatypeRuleToken ruleQName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;

         enterRule(); 
            
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8386:28: ( (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8387:1: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8387:1: (this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )* )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8387:6: this_ID_0= RULE_ID (kw= '.' this_ID_2= RULE_ID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQName18914); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getQNameAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8394:1: (kw= '.' this_ID_2= RULE_ID )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==66) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8395:2: kw= '.' this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,66,FOLLOW_66_in_ruleQName18933); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleQName18948); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_2, grammarAccess.getQNameAccess().getIDTerminalRuleCall_1_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQName"


    // $ANTLR start "ruleVisibility"
    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8415:1: ruleVisibility returns [Enumerator current=null] : ( (enumLiteral_0= 'package' ) | (enumLiteral_1= 'public' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'private' ) ) ;
    public final Enumerator ruleVisibility() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8417:28: ( ( (enumLiteral_0= 'package' ) | (enumLiteral_1= 'public' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'private' ) ) )
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8418:1: ( (enumLiteral_0= 'package' ) | (enumLiteral_1= 'public' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'private' ) )
            {
            // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8418:1: ( (enumLiteral_0= 'package' ) | (enumLiteral_1= 'public' ) | (enumLiteral_2= 'protected' ) | (enumLiteral_3= 'private' ) )
            int alt84=4;
            switch ( input.LA(1) ) {
            case 101:
                {
                alt84=1;
                }
                break;
            case 102:
                {
                alt84=2;
                }
                break;
            case 103:
                {
                alt84=3;
                }
                break;
            case 104:
                {
                alt84=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8418:2: (enumLiteral_0= 'package' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8418:2: (enumLiteral_0= 'package' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8418:4: enumLiteral_0= 'package'
                    {
                    enumLiteral_0=(Token)match(input,101,FOLLOW_101_in_ruleVisibility19009); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPackageEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getPackageEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8424:6: (enumLiteral_1= 'public' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8424:6: (enumLiteral_1= 'public' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8424:8: enumLiteral_1= 'public'
                    {
                    enumLiteral_1=(Token)match(input,102,FOLLOW_102_in_ruleVisibility19026); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8430:6: (enumLiteral_2= 'protected' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8430:6: (enumLiteral_2= 'protected' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8430:8: enumLiteral_2= 'protected'
                    {
                    enumLiteral_2=(Token)match(input,103,FOLLOW_103_in_ruleVisibility19043); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8436:6: (enumLiteral_3= 'private' )
                    {
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8436:6: (enumLiteral_3= 'private' )
                    // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:8436:8: enumLiteral_3= 'private'
                    {
                    enumLiteral_3=(Token)match(input,104,FOLLOW_104_in_ruleVisibility19060); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibility"

    // $ANTLR start synpred18_InternalTransformationLanguage
    public final void synpred18_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject lv_declarations_2_0 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:909:1: ( (lv_declarations_2_0= ruleDeclaration ) )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:909:1: (lv_declarations_2_0= ruleDeclaration )
        {
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:909:1: (lv_declarations_2_0= ruleDeclaration )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:910:3: lv_declarations_2_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getBodyAccess().getDeclarationsDeclarationParserRuleCall_2_0()); 
          	    
        }
        pushFollow(FOLLOW_ruleDeclaration_in_synpred18_InternalTransformationLanguage1777);
        lv_declarations_2_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalTransformationLanguage

    // $ANTLR start synpred37_InternalTransformationLanguage
    public final void synpred37_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_NonExpr_0 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2204:2: (this_NonExpr_0= ruleNonExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2204:2: this_NonExpr_0= ruleNonExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleNonExpr_in_synpred37_InternalTransformationLanguage4832);
        this_NonExpr_0=ruleNonExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred37_InternalTransformationLanguage

    // $ANTLR start synpred40_InternalTransformationLanguage
    public final void synpred40_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_BinOpExpr_1 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2309:2: (this_BinOpExpr_1= ruleBinOpExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2309:2: this_BinOpExpr_1= ruleBinOpExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleBinOpExpr_in_synpred40_InternalTransformationLanguage5112);
        this_BinOpExpr_1=ruleBinOpExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred40_InternalTransformationLanguage

    // $ANTLR start synpred42_InternalTransformationLanguage
    public final void synpred42_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_InstanceOfExpr_3 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2335:2: (this_InstanceOfExpr_3= ruleInstanceOfExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2335:2: this_InstanceOfExpr_3= ruleInstanceOfExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleInstanceOfExpr_in_synpred42_InternalTransformationLanguage5172);
        this_InstanceOfExpr_3=ruleInstanceOfExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalTransformationLanguage

    // $ANTLR start synpred46_InternalTransformationLanguage
    public final void synpred46_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_AddExpr_0 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2453:2: (this_AddExpr_0= ruleAddExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2453:2: this_AddExpr_0= ruleAddExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleAddExpr_in_synpred46_InternalTransformationLanguage5482);
        this_AddExpr_0=ruleAddExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalTransformationLanguage

    // $ANTLR start synpred47_InternalTransformationLanguage
    public final void synpred47_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_AndExpr_1 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2466:2: (this_AndExpr_1= ruleAndExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2466:2: this_AndExpr_1= ruleAndExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleAndExpr_in_synpred47_InternalTransformationLanguage5512);
        this_AndExpr_1=ruleAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred47_InternalTransformationLanguage

    // $ANTLR start synpred48_InternalTransformationLanguage
    public final void synpred48_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_CmpExpr_2 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2479:2: (this_CmpExpr_2= ruleCmpExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2479:2: this_CmpExpr_2= ruleCmpExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleCmpExpr_in_synpred48_InternalTransformationLanguage5542);
        this_CmpExpr_2=ruleCmpExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred48_InternalTransformationLanguage

    // $ANTLR start synpred49_InternalTransformationLanguage
    public final void synpred49_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_CmpgExpr_3 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2492:2: (this_CmpgExpr_3= ruleCmpgExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2492:2: this_CmpgExpr_3= ruleCmpgExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleCmpgExpr_in_synpred49_InternalTransformationLanguage5572);
        this_CmpgExpr_3=ruleCmpgExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred49_InternalTransformationLanguage

    // $ANTLR start synpred50_InternalTransformationLanguage
    public final void synpred50_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_CmplExpr_4 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2505:2: (this_CmplExpr_4= ruleCmplExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2505:2: this_CmplExpr_4= ruleCmplExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleCmplExpr_in_synpred50_InternalTransformationLanguage5602);
        this_CmplExpr_4=ruleCmplExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_InternalTransformationLanguage

    // $ANTLR start synpred51_InternalTransformationLanguage
    public final void synpred51_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_ConditionalExpr_5 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2518:2: (this_ConditionalExpr_5= ruleConditionalExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2518:2: this_ConditionalExpr_5= ruleConditionalExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleConditionalExpr_in_synpred51_InternalTransformationLanguage5632);
        this_ConditionalExpr_5=ruleConditionalExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_InternalTransformationLanguage

    // $ANTLR start synpred52_InternalTransformationLanguage
    public final void synpred52_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_DivExpr_6 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2531:2: (this_DivExpr_6= ruleDivExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2531:2: this_DivExpr_6= ruleDivExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleDivExpr_in_synpred52_InternalTransformationLanguage5662);
        this_DivExpr_6=ruleDivExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_InternalTransformationLanguage

    // $ANTLR start synpred53_InternalTransformationLanguage
    public final void synpred53_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_MulExpr_7 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2544:2: (this_MulExpr_7= ruleMulExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2544:2: this_MulExpr_7= ruleMulExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleMulExpr_in_synpred53_InternalTransformationLanguage5692);
        this_MulExpr_7=ruleMulExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_InternalTransformationLanguage

    // $ANTLR start synpred54_InternalTransformationLanguage
    public final void synpred54_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_OrExpr_8 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2557:2: (this_OrExpr_8= ruleOrExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2557:2: this_OrExpr_8= ruleOrExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleOrExpr_in_synpred54_InternalTransformationLanguage5722);
        this_OrExpr_8=ruleOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_InternalTransformationLanguage

    // $ANTLR start synpred55_InternalTransformationLanguage
    public final void synpred55_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_RemExpr_9 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2570:2: (this_RemExpr_9= ruleRemExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2570:2: this_RemExpr_9= ruleRemExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleRemExpr_in_synpred55_InternalTransformationLanguage5752);
        this_RemExpr_9=ruleRemExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_InternalTransformationLanguage

    // $ANTLR start synpred56_InternalTransformationLanguage
    public final void synpred56_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_ShlExpr_10 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2583:2: (this_ShlExpr_10= ruleShlExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2583:2: this_ShlExpr_10= ruleShlExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleShlExpr_in_synpred56_InternalTransformationLanguage5782);
        this_ShlExpr_10=ruleShlExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred56_InternalTransformationLanguage

    // $ANTLR start synpred57_InternalTransformationLanguage
    public final void synpred57_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_ShrExpr_11 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2596:2: (this_ShrExpr_11= ruleShrExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2596:2: this_ShrExpr_11= ruleShrExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleShrExpr_in_synpred57_InternalTransformationLanguage5812);
        this_ShrExpr_11=ruleShrExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_InternalTransformationLanguage

    // $ANTLR start synpred58_InternalTransformationLanguage
    public final void synpred58_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_SubExpr_12 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2609:2: (this_SubExpr_12= ruleSubExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2609:2: this_SubExpr_12= ruleSubExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleSubExpr_in_synpred58_InternalTransformationLanguage5842);
        this_SubExpr_12=ruleSubExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_InternalTransformationLanguage

    // $ANTLR start synpred59_InternalTransformationLanguage
    public final void synpred59_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_UshrExpr_13 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2622:2: (this_UshrExpr_13= ruleUshrExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2622:2: this_UshrExpr_13= ruleUshrExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleUshrExpr_in_synpred59_InternalTransformationLanguage5872);
        this_UshrExpr_13=ruleUshrExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred59_InternalTransformationLanguage

    // $ANTLR start synpred60_InternalTransformationLanguage
    public final void synpred60_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_EqExpr_0 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2973:2: (this_EqExpr_0= ruleEqExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2973:2: this_EqExpr_0= ruleEqExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleEqExpr_in_synpred60_InternalTransformationLanguage6622);
        this_EqExpr_0=ruleEqExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_InternalTransformationLanguage

    // $ANTLR start synpred61_InternalTransformationLanguage
    public final void synpred61_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_GeExpr_1 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2986:2: (this_GeExpr_1= ruleGeExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2986:2: this_GeExpr_1= ruleGeExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleGeExpr_in_synpred61_InternalTransformationLanguage6652);
        this_GeExpr_1=ruleGeExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred61_InternalTransformationLanguage

    // $ANTLR start synpred62_InternalTransformationLanguage
    public final void synpred62_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_GtExpr_2 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2999:2: (this_GtExpr_2= ruleGtExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:2999:2: this_GtExpr_2= ruleGtExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleGtExpr_in_synpred62_InternalTransformationLanguage6682);
        this_GtExpr_2=ruleGtExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalTransformationLanguage

    // $ANTLR start synpred63_InternalTransformationLanguage
    public final void synpred63_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_LeExpr_3 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3012:2: (this_LeExpr_3= ruleLeExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3012:2: this_LeExpr_3= ruleLeExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleLeExpr_in_synpred63_InternalTransformationLanguage6712);
        this_LeExpr_3=ruleLeExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_InternalTransformationLanguage

    // $ANTLR start synpred64_InternalTransformationLanguage
    public final void synpred64_InternalTransformationLanguage_fragment() throws RecognitionException {   
        EObject this_LtExpr_4 = null;


        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3025:2: (this_LtExpr_4= ruleLtExpr )
        // ../soot.jimple.toolkits.transformation.dsl/src-gen/soot/jimple/toolkits/transformation/dsl/parser/antlr/internal/InternalTransformationLanguage.g:3025:2: this_LtExpr_4= ruleLtExpr
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_ruleLtExpr_in_synpred64_InternalTransformationLanguage6742);
        this_LtExpr_4=ruleLtExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_InternalTransformationLanguage

    // Delegated rules

    public final boolean synpred63_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalTransformationLanguage() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalTransformationLanguage_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA9 dfa9 = new DFA9(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA71 dfa71 = new DFA71(this);
    static final String DFA9_eotS =
        "\12\uffff";
    static final String DFA9_eofS =
        "\12\uffff";
    static final String DFA9_minS =
        "\6\4\1\uffff\1\4\1\31\1\uffff";
    static final String DFA9_maxS =
        "\1\150\4\30\1\4\1\uffff\1\102\1\73\1\uffff";
    static final String DFA9_acceptS =
        "\6\uffff\1\2\2\uffff\1\1";
    static final String DFA9_specialS =
        "\12\uffff}>";
    static final String[] DFA9_transitionS = {
            "\1\6\22\uffff\1\6\1\5\114\uffff\1\1\1\2\1\3\1\4",
            "\1\6\23\uffff\1\5",
            "\1\6\23\uffff\1\5",
            "\1\6\23\uffff\1\5",
            "\1\6\23\uffff\1\5",
            "\1\7",
            "",
            "\1\10\70\uffff\1\6\4\uffff\1\11",
            "\1\11\1\6\40\uffff\1\6",
            ""
    };

    static final short[] DFA9_eot = DFA.unpackEncodedString(DFA9_eotS);
    static final short[] DFA9_eof = DFA.unpackEncodedString(DFA9_eofS);
    static final char[] DFA9_min = DFA.unpackEncodedStringToUnsignedChars(DFA9_minS);
    static final char[] DFA9_max = DFA.unpackEncodedStringToUnsignedChars(DFA9_maxS);
    static final short[] DFA9_accept = DFA.unpackEncodedString(DFA9_acceptS);
    static final short[] DFA9_special = DFA.unpackEncodedString(DFA9_specialS);
    static final short[][] DFA9_transition;

    static {
        int numStates = DFA9_transitionS.length;
        DFA9_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA9_transition[i] = DFA.unpackEncodedString(DFA9_transitionS[i]);
        }
    }

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = DFA9_eot;
            this.eof = DFA9_eof;
            this.min = DFA9_min;
            this.max = DFA9_max;
            this.accept = DFA9_accept;
            this.special = DFA9_special;
            this.transition = DFA9_transition;
        }
        public String getDescription() {
            return "()* loopback of 584:1: ( (lv_fields_11_0= ruleField ) )*";
        }
    }
    static final String DFA16_eotS =
        "\13\uffff";
    static final String DFA16_eofS =
        "\13\uffff";
    static final String DFA16_minS =
        "\1\4\1\uffff\2\4\1\uffff\5\4\1\0";
    static final String DFA16_maxS =
        "\1\124\1\uffff\1\111\1\124\1\uffff\1\102\1\124\1\102\1\124\1\102"+
        "\1\0";
    static final String DFA16_acceptS =
        "\1\uffff\1\2\2\uffff\1\1\6\uffff";
    static final String DFA16_specialS =
        "\12\uffff\1\0}>";
    static final String[] DFA16_transitionS = {
            "\1\2\1\1\21\uffff\1\1\5\uffff\1\1\2\uffff\3\1\1\uffff\6\1\23"+
            "\uffff\1\1\2\uffff\2\1\1\uffff\2\1\10\uffff\1\1\6\uffff\1\1",
            "",
            "\1\4\31\uffff\2\1\42\uffff\1\3\6\uffff\1\1",
            "\1\5\70\uffff\1\1\26\uffff\1\1",
            "",
            "\1\4\75\uffff\1\6",
            "\1\7\70\uffff\1\1\26\uffff\1\1",
            "\1\4\75\uffff\1\10",
            "\1\11\70\uffff\1\1\26\uffff\1\1",
            "\1\4\75\uffff\1\12",
            "\1\uffff"
    };

    static final short[] DFA16_eot = DFA.unpackEncodedString(DFA16_eotS);
    static final short[] DFA16_eof = DFA.unpackEncodedString(DFA16_eofS);
    static final char[] DFA16_min = DFA.unpackEncodedStringToUnsignedChars(DFA16_minS);
    static final char[] DFA16_max = DFA.unpackEncodedStringToUnsignedChars(DFA16_maxS);
    static final short[] DFA16_accept = DFA.unpackEncodedString(DFA16_acceptS);
    static final short[] DFA16_special = DFA.unpackEncodedString(DFA16_specialS);
    static final short[][] DFA16_transition;

    static {
        int numStates = DFA16_transitionS.length;
        DFA16_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA16_transition[i] = DFA.unpackEncodedString(DFA16_transitionS[i]);
        }
    }

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = DFA16_eot;
            this.eof = DFA16_eof;
            this.min = DFA16_min;
            this.max = DFA16_max;
            this.accept = DFA16_accept;
            this.special = DFA16_special;
            this.transition = DFA16_transition;
        }
        public String getDescription() {
            return "()* loopback of 908:1: ( (lv_declarations_2_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_10 = input.LA(1);

                         
                        int index16_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalTransformationLanguage()) ) {s = 4;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index16_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA21_eotS =
        "\16\uffff";
    static final String DFA21_eofS =
        "\12\uffff\1\14\3\uffff";
    static final String DFA21_minS =
        "\1\4\11\uffff\1\4\3\uffff";
    static final String DFA21_maxS =
        "\1\124\11\uffff\1\124\3\uffff";
    static final String DFA21_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\uffff\1\14\1\12"+
        "\1\13";
    static final String DFA21_specialS =
        "\16\uffff}>";
    static final String[] DFA21_transitionS = {
            "\1\2\30\uffff\1\1\2\uffff\1\3\1\4\1\13\1\uffff\1\6\2\7\1\10"+
            "\1\11\1\12\23\uffff\1\2\2\uffff\2\5\1\uffff\2\5\10\uffff\1\2"+
            "\6\uffff\1\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\15\1\uffff\2\15\11\uffff\1\15\7\uffff\1\14\1\15\42\uffff"+
            "\1\15\2\uffff\2\15\1\uffff\5\15\3\uffff\3\15\2\uffff\1\15\3"+
            "\uffff\1\15",
            "",
            "",
            ""
    };

    static final short[] DFA21_eot = DFA.unpackEncodedString(DFA21_eotS);
    static final short[] DFA21_eof = DFA.unpackEncodedString(DFA21_eofS);
    static final char[] DFA21_min = DFA.unpackEncodedStringToUnsignedChars(DFA21_minS);
    static final char[] DFA21_max = DFA.unpackEncodedStringToUnsignedChars(DFA21_maxS);
    static final short[] DFA21_accept = DFA.unpackEncodedString(DFA21_acceptS);
    static final short[] DFA21_special = DFA.unpackEncodedString(DFA21_specialS);
    static final short[][] DFA21_transition;

    static {
        int numStates = DFA21_transitionS.length;
        DFA21_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA21_transition[i] = DFA.unpackEncodedString(DFA21_transitionS[i]);
        }
    }

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = DFA21_eot;
            this.eof = DFA21_eof;
            this.min = DFA21_min;
            this.max = DFA21_max;
            this.accept = DFA21_accept;
            this.special = DFA21_special;
            this.transition = DFA21_transition;
        }
        public String getDescription() {
            return "1141:1: (this_BreakpointStmt_0= ruleBreakpointStmt | this_DefinitionStmt_1= ruleDefinitionStmt | this_GotoStmt_2= ruleGotoStmt | this_IfStmt_3= ruleIfStmt | this_InvokeStmt_4= ruleInvokeStmt | this_LookupSwitchStmt_5= ruleLookupSwitchStmt | this_MonitorStmt_6= ruleMonitorStmt | this_NopStmt_7= ruleNopStmt | this_RetStmt_8= ruleRetStmt | this_ReturnVoidStmt_9= ruleReturnVoidStmt | this_ReturnStmt_10= ruleReturnStmt | this_TableSwitchStmt_11= ruleTableSwitchStmt )";
        }
    }
    static final String DFA25_eotS =
        "\24\uffff";
    static final String DFA25_eofS =
        "\24\uffff";
    static final String DFA25_minS =
        "\1\4\10\0\13\uffff";
    static final String DFA25_maxS =
        "\1\124\10\0\13\uffff";
    static final String DFA25_acceptS =
        "\11\uffff\1\2\11\uffff\1\1";
    static final String DFA25_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\13\uffff}>";
    static final String[] DFA25_transitionS = {
            "\1\5\1\uffff\1\3\1\4\11\uffff\1\1\10\uffff\1\11\42\uffff\1\7"+
            "\2\uffff\2\11\1\uffff\5\11\3\uffff\2\11\1\10\2\uffff\1\2\3\uffff"+
            "\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA25_eot = DFA.unpackEncodedString(DFA25_eotS);
    static final short[] DFA25_eof = DFA.unpackEncodedString(DFA25_eofS);
    static final char[] DFA25_min = DFA.unpackEncodedStringToUnsignedChars(DFA25_minS);
    static final char[] DFA25_max = DFA.unpackEncodedStringToUnsignedChars(DFA25_maxS);
    static final short[] DFA25_accept = DFA.unpackEncodedString(DFA25_acceptS);
    static final short[] DFA25_special = DFA.unpackEncodedString(DFA25_specialS);
    static final short[][] DFA25_transition;

    static {
        int numStates = DFA25_transitionS.length;
        DFA25_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA25_transition[i] = DFA.unpackEncodedString(DFA25_transitionS[i]);
        }
    }

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = DFA25_eot;
            this.eof = DFA25_eof;
            this.min = DFA25_min;
            this.max = DFA25_max;
            this.accept = DFA25_accept;
            this.special = DFA25_special;
            this.transition = DFA25_transition;
        }
        public String getDescription() {
            return "2203:1: (this_NonExpr_0= ruleNonExpr | this_Expr_1= ruleExpr )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_1 = input.LA(1);

                         
                        int index25_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA25_2 = input.LA(1);

                         
                        int index25_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA25_3 = input.LA(1);

                         
                        int index25_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA25_4 = input.LA(1);

                         
                        int index25_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA25_5 = input.LA(1);

                         
                        int index25_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA25_6 = input.LA(1);

                         
                        int index25_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA25_7 = input.LA(1);

                         
                        int index25_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA25_8 = input.LA(1);

                         
                        int index25_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index25_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA27_eotS =
        "\24\uffff";
    static final String DFA27_eofS =
        "\24\uffff";
    static final String DFA27_minS =
        "\1\4\7\uffff\4\0\10\uffff";
    static final String DFA27_maxS =
        "\1\124\7\uffff\4\0\10\uffff";
    static final String DFA27_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\7\uffff\1\3\1\5\3\uffff\1\6\1\uffff\1\4";
    static final String DFA27_specialS =
        "\10\uffff\1\0\1\1\1\2\1\3\10\uffff}>";
    static final String[] DFA27_transitionS = {
            "\1\10\1\uffff\2\4\11\uffff\1\4\10\uffff\1\14\42\uffff\1\12\2"+
            "\uffff\2\15\1\uffff\2\15\3\1\3\uffff\2\21\1\13\2\uffff\1\4\3"+
            "\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA27_eot = DFA.unpackEncodedString(DFA27_eotS);
    static final short[] DFA27_eof = DFA.unpackEncodedString(DFA27_eofS);
    static final char[] DFA27_min = DFA.unpackEncodedStringToUnsignedChars(DFA27_minS);
    static final char[] DFA27_max = DFA.unpackEncodedStringToUnsignedChars(DFA27_maxS);
    static final short[] DFA27_accept = DFA.unpackEncodedString(DFA27_acceptS);
    static final short[] DFA27_special = DFA.unpackEncodedString(DFA27_specialS);
    static final short[][] DFA27_transition;

    static {
        int numStates = DFA27_transitionS.length;
        DFA27_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA27_transition[i] = DFA.unpackEncodedString(DFA27_transitionS[i]);
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = DFA27_eot;
            this.eof = DFA27_eof;
            this.min = DFA27_min;
            this.max = DFA27_max;
            this.accept = DFA27_accept;
            this.special = DFA27_special;
            this.transition = DFA27_transition;
        }
        public String getDescription() {
            return "2295:1: (this_AnyNewExpr_0= ruleAnyNewExpr | this_BinOpExpr_1= ruleBinOpExpr | this_CastExpr_2= ruleCastExpr | this_InstanceOfExpr_3= ruleInstanceOfExpr | this_InvokeExpr_4= ruleInvokeExpr | this_UnopExpr_5= ruleUnopExpr )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_8 = input.LA(1);

                         
                        int index27_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalTransformationLanguage()) ) {s = 4;}

                        else if ( (synpred42_InternalTransformationLanguage()) ) {s = 19;}

                         
                        input.seek(index27_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_9 = input.LA(1);

                         
                        int index27_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalTransformationLanguage()) ) {s = 4;}

                        else if ( (synpred42_InternalTransformationLanguage()) ) {s = 19;}

                         
                        input.seek(index27_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA27_10 = input.LA(1);

                         
                        int index27_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalTransformationLanguage()) ) {s = 4;}

                        else if ( (synpred42_InternalTransformationLanguage()) ) {s = 19;}

                         
                        input.seek(index27_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA27_11 = input.LA(1);

                         
                        int index27_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalTransformationLanguage()) ) {s = 4;}

                        else if ( (synpred42_InternalTransformationLanguage()) ) {s = 19;}

                         
                        input.seek(index27_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA29_eotS =
        "\30\uffff";
    static final String DFA29_eofS =
        "\30\uffff";
    static final String DFA29_minS =
        "\1\4\10\0\17\uffff";
    static final String DFA29_maxS =
        "\1\124\10\0\17\uffff";
    static final String DFA29_acceptS =
        "\11\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1"+
        "\15\1\16\1\17";
    static final String DFA29_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\17\uffff}>";
    static final String[] DFA29_transitionS = {
            "\1\5\1\uffff\1\3\1\4\11\uffff\1\1\53\uffff\1\7\17\uffff\1\10"+
            "\2\uffff\1\2\3\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA29_eot = DFA.unpackEncodedString(DFA29_eotS);
    static final short[] DFA29_eof = DFA.unpackEncodedString(DFA29_eofS);
    static final char[] DFA29_min = DFA.unpackEncodedStringToUnsignedChars(DFA29_minS);
    static final char[] DFA29_max = DFA.unpackEncodedStringToUnsignedChars(DFA29_maxS);
    static final short[] DFA29_accept = DFA.unpackEncodedString(DFA29_acceptS);
    static final short[] DFA29_special = DFA.unpackEncodedString(DFA29_specialS);
    static final short[][] DFA29_transition;

    static {
        int numStates = DFA29_transitionS.length;
        DFA29_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA29_transition[i] = DFA.unpackEncodedString(DFA29_transitionS[i]);
        }
    }

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;
        }
        public String getDescription() {
            return "2452:1: (this_AddExpr_0= ruleAddExpr | this_AndExpr_1= ruleAndExpr | this_CmpExpr_2= ruleCmpExpr | this_CmpgExpr_3= ruleCmpgExpr | this_CmplExpr_4= ruleCmplExpr | this_ConditionalExpr_5= ruleConditionalExpr | this_DivExpr_6= ruleDivExpr | this_MulExpr_7= ruleMulExpr | this_OrExpr_8= ruleOrExpr | this_RemExpr_9= ruleRemExpr | this_ShlExpr_10= ruleShlExpr | this_ShrExpr_11= ruleShrExpr | this_SubExpr_12= ruleSubExpr | this_UshrExpr_13= ruleUshrExpr | this_XorExpr_14= ruleXorExpr )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_1 = input.LA(1);

                         
                        int index29_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA29_2 = input.LA(1);

                         
                        int index29_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA29_3 = input.LA(1);

                         
                        int index29_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA29_4 = input.LA(1);

                         
                        int index29_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA29_5 = input.LA(1);

                         
                        int index29_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA29_6 = input.LA(1);

                         
                        int index29_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA29_7 = input.LA(1);

                         
                        int index29_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA29_8 = input.LA(1);

                         
                        int index29_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred47_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred48_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred49_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred50_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (synpred51_InternalTransformationLanguage()) ) {s = 14;}

                        else if ( (synpred52_InternalTransformationLanguage()) ) {s = 15;}

                        else if ( (synpred53_InternalTransformationLanguage()) ) {s = 16;}

                        else if ( (synpred54_InternalTransformationLanguage()) ) {s = 17;}

                        else if ( (synpred55_InternalTransformationLanguage()) ) {s = 18;}

                        else if ( (synpred56_InternalTransformationLanguage()) ) {s = 19;}

                        else if ( (synpred57_InternalTransformationLanguage()) ) {s = 20;}

                        else if ( (synpred58_InternalTransformationLanguage()) ) {s = 21;}

                        else if ( (synpred59_InternalTransformationLanguage()) ) {s = 22;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index29_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA30_eotS =
        "\17\uffff";
    static final String DFA30_eofS =
        "\17\uffff";
    static final String DFA30_minS =
        "\1\4\10\0\6\uffff";
    static final String DFA30_maxS =
        "\1\124\10\0\6\uffff";
    static final String DFA30_acceptS =
        "\11\uffff\1\1\1\2\1\3\1\4\1\5\1\6";
    static final String DFA30_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\6\uffff}>";
    static final String[] DFA30_transitionS = {
            "\1\5\1\uffff\1\3\1\4\11\uffff\1\1\53\uffff\1\7\17\uffff\1\10"+
            "\2\uffff\1\2\3\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA30_eot = DFA.unpackEncodedString(DFA30_eotS);
    static final short[] DFA30_eof = DFA.unpackEncodedString(DFA30_eofS);
    static final char[] DFA30_min = DFA.unpackEncodedStringToUnsignedChars(DFA30_minS);
    static final char[] DFA30_max = DFA.unpackEncodedStringToUnsignedChars(DFA30_maxS);
    static final short[] DFA30_accept = DFA.unpackEncodedString(DFA30_acceptS);
    static final short[] DFA30_special = DFA.unpackEncodedString(DFA30_specialS);
    static final short[][] DFA30_transition;

    static {
        int numStates = DFA30_transitionS.length;
        DFA30_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA30_transition[i] = DFA.unpackEncodedString(DFA30_transitionS[i]);
        }
    }

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = DFA30_eot;
            this.eof = DFA30_eof;
            this.min = DFA30_min;
            this.max = DFA30_max;
            this.accept = DFA30_accept;
            this.special = DFA30_special;
            this.transition = DFA30_transition;
        }
        public String getDescription() {
            return "2972:1: (this_EqExpr_0= ruleEqExpr | this_GeExpr_1= ruleGeExpr | this_GtExpr_2= ruleGtExpr | this_LeExpr_3= ruleLeExpr | this_LtExpr_4= ruleLtExpr | this_NeExpr_5= ruleNeExpr )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_1 = input.LA(1);

                         
                        int index30_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA30_2 = input.LA(1);

                         
                        int index30_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA30_3 = input.LA(1);

                         
                        int index30_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA30_4 = input.LA(1);

                         
                        int index30_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA30_5 = input.LA(1);

                         
                        int index30_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA30_6 = input.LA(1);

                         
                        int index30_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA30_7 = input.LA(1);

                         
                        int index30_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA30_8 = input.LA(1);

                         
                        int index30_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalTransformationLanguage()) ) {s = 9;}

                        else if ( (synpred61_InternalTransformationLanguage()) ) {s = 10;}

                        else if ( (synpred62_InternalTransformationLanguage()) ) {s = 11;}

                        else if ( (synpred63_InternalTransformationLanguage()) ) {s = 12;}

                        else if ( (synpred64_InternalTransformationLanguage()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index30_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA71_eotS =
        "\13\uffff";
    static final String DFA71_eofS =
        "\5\uffff\1\11\4\uffff\1\11";
    static final String DFA71_minS =
        "\1\4\4\uffff\1\16\1\uffff\2\4\1\uffff\1\16";
    static final String DFA71_maxS =
        "\1\143\4\uffff\1\144\1\uffff\1\4\1\21\1\uffff\1\144";
    static final String DFA71_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\5\2\uffff\1\6\1\uffff";
    static final String DFA71_specialS =
        "\13\uffff}>";
    static final String[] DFA71_transitionS = {
            "\1\5\1\uffff\2\3\22\uffff\1\1\47\uffff\1\2\3\uffff\1\6\11\uffff"+
            "\1\3\10\uffff\11\4\2\3",
            "",
            "",
            "",
            "",
            "\1\11\6\uffff\1\11\5\uffff\1\11\17\uffff\1\11\4\uffff\2\11"+
            "\1\uffff\1\11\2\uffff\1\11\2\uffff\7\11\2\uffff\1\10\6\uffff"+
            "\1\4\13\uffff\3\11\14\uffff\1\7",
            "",
            "\1\12",
            "\1\11\14\uffff\1\4",
            "",
            "\1\11\6\uffff\1\11\5\uffff\1\11\17\uffff\1\11\4\uffff\2\11"+
            "\1\uffff\1\11\2\uffff\1\11\2\uffff\7\11\2\uffff\1\10\6\uffff"+
            "\1\4\13\uffff\3\11\14\uffff\1\7"
    };

    static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
    static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
    static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
    static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
    static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
    static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
    static final short[][] DFA71_transition;

    static {
        int numStates = DFA71_transitionS.length;
        DFA71_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;
        }
        public String getDescription() {
            return "7386:1: (this_WildcardParExpression_0= ruleWildcardParExpression | this_WildcardDereference_1= ruleWildcardDereference | this_WildcardLiteral_2= ruleWildcardLiteral | this_WildcardClassLiteral_3= ruleWildcardClassLiteral | this_WildcardNew_4= ruleWildcardNew | this_WildcardQName_5= ruleWildcardQName )";
        }
    }
 

    public static final BitSet FOLLOW_ruleTransformation_in_entryRuleTransformation81 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleTransformation91 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_ruleTransformation128 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_ruleTransformation140 = new BitSet(new long[]{0x200003F721060030L,0x000001E00010201BL});
    public static final BitSet FOLLOW_rulePattern_in_ruleTransformation161 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleTransformation173 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleTransformation185 = new BitSet(new long[]{0x200003F721060030L,0x000001E00010201BL});
    public static final BitSet FOLLOW_ruleReplacement_in_ruleTransformation206 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleTransformation218 = new BitSet(new long[]{0x0000000000014000L});
    public static final BitSet FOLLOW_16_in_ruleTransformation231 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_ruleTransformation252 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleTransformation264 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_ruleTransformation278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePattern_in_entryRulePattern314 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePattern324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSequencePattern_in_rulePattern374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethodPattern_in_rulePattern404 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTypePattern_in_rulePattern434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSequencePattern_in_entryRuleSequencePattern469 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSequencePattern479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatementSequence_in_ruleSequencePattern524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethodPattern_in_entryRuleMethodPattern559 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMethodPattern569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethod_in_ruleMethodPattern614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTypePattern_in_entryRuleTypePattern649 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleTypePattern659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleType_in_ruleTypePattern704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReplacement_in_entryRuleReplacement739 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReplacement749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatementSequence_in_ruleReplacement795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethod_in_ruleReplacement822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleType_in_ruleReplacement849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleType_in_entryRuleType885 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleType895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleType941 = new BitSet(new long[]{0x0000000000060000L});
    public static final BitSet FOLLOW_17_in_ruleType961 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_18_in_ruleType998 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleType1033 = new BitSet(new long[]{0x0000000000580000L});
    public static final BitSet FOLLOW_19_in_ruleType1046 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleType1067 = new BitSet(new long[]{0x0000000000500000L});
    public static final BitSet FOLLOW_20_in_ruleType1082 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleType1103 = new BitSet(new long[]{0x0000000000600000L});
    public static final BitSet FOLLOW_21_in_ruleType1116 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleType1137 = new BitSet(new long[]{0x0000000000600000L});
    public static final BitSet FOLLOW_22_in_ruleType1153 = new BitSet(new long[]{0x0000000001800010L,0x000001E000000000L});
    public static final BitSet FOLLOW_ruleField_in_ruleType1174 = new BitSet(new long[]{0x0000000001800010L,0x000001E000000000L});
    public static final BitSet FOLLOW_ruleMethod_in_ruleType1196 = new BitSet(new long[]{0x0000000001800010L,0x000001E000000000L});
    public static final BitSet FOLLOW_23_in_ruleType1209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleField_in_entryRuleField1245 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleField1255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleField1301 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_ruleField1320 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleField1354 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleField1371 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_ruleField1388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethod_in_entryRuleMethod1424 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMethod1434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibility_in_ruleMethod1480 = new BitSet(new long[]{0x0000000001000010L});
    public static final BitSet FOLLOW_24_in_ruleMethod1499 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleMethod1530 = new BitSet(new long[]{0x2000000000000010L});
    public static final BitSet FOLLOW_ruleMethodName_in_ruleMethod1556 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleMethod1568 = new BitSet(new long[]{0x0000000008000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleMethod1590 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleMethod1603 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleMethod1624 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleMethod1640 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_ruleBody_in_ruleMethod1661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBody_in_entryRuleBody1697 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBody1707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_ruleBody1756 = new BitSet(new long[]{0x200003F720800030L,0x000000000010201BL});
    public static final BitSet FOLLOW_ruleDeclaration_in_ruleBody1777 = new BitSet(new long[]{0x200003F720800030L,0x000000000010201BL});
    public static final BitSet FOLLOW_ruleLabelOrStatement_in_ruleBody1799 = new BitSet(new long[]{0x200003F720800030L,0x000000000010201BL});
    public static final BitSet FOLLOW_23_in_ruleBody1812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatementSequence_in_entryRuleStatementSequence1848 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatementSequence1858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelOrStatement_in_ruleStatementSequence1903 = new BitSet(new long[]{0x200003F720000032L,0x000000000010201BL});
    public static final BitSet FOLLOW_ruleDeclaration_in_entryRuleDeclaration1939 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDeclaration1949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleDeclaration1995 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleDeclaration2012 = new BitSet(new long[]{0x0000000002200000L});
    public static final BitSet FOLLOW_21_in_ruleDeclaration2030 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleDeclaration2047 = new BitSet(new long[]{0x0000000002200000L});
    public static final BitSet FOLLOW_25_in_ruleDeclaration2066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabelOrStatement_in_entryRuleLabelOrStatement2102 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabelOrStatement2112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_ruleLabelOrStatement2162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_ruleLabelOrStatement2193 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_ruleLabelOrStatement2204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_entryRuleStatement2241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatement2251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakpointStmt_in_ruleStatement2301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDefinitionStmt_in_ruleStatement2331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGotoStmt_in_ruleStatement2361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStmt_in_ruleStatement2391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInvokeStmt_in_ruleStatement2421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLookupSwitchStmt_in_ruleStatement2451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMonitorStmt_in_ruleStatement2481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNopStmt_in_ruleStatement2511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRetStmt_in_ruleStatement2541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnVoidStmt_in_ruleStatement2571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStmt_in_ruleStatement2601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTableSwitchStmt_in_ruleStatement2631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLabel_in_entryRuleLabel2666 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLabel2676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_LABELNAME_in_ruleLabel2718 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleLabel2735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBreakpointStmt_in_entryRuleBreakpointStmt2771 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBreakpointStmt2781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_ruleBreakpointStmt2830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDefinitionStmt_in_entryRuleDefinitionStmt2866 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDefinitionStmt2876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignStmt_in_ruleDefinitionStmt2926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIdentityStmt_in_ruleDefinitionStmt2956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignStmt_in_entryRuleAssignStmt2991 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssignStmt3001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRef_in_ruleAssignStmt3047 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_30_in_ruleAssignStmt3059 = new BitSet(new long[]{0x20000000040200D0L,0x00000000001138FBL});
    public static final BitSet FOLLOW_ruleValue_in_ruleAssignStmt3080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIdentityStmt_in_entryRuleIdentityStmt3116 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIdentityStmt3126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLocal_in_ruleIdentityStmt3172 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_ruleIdentityStmt3184 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_ruleIdentityRef_in_ruleIdentityStmt3205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGotoStmt_in_entryRuleGotoStmt3241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGotoStmt3251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleGotoStmt3288 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_LABELNAME_in_ruleGotoStmt3305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStmt_in_entryRuleIfStmt3346 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfStmt3356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_ruleIfStmt3393 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleConditionalExpr_in_ruleIfStmt3414 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleGotoStmt_in_ruleIfStmt3435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInvokeStmt_in_entryRuleInvokeStmt3471 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInvokeStmt3481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInvokeExpr_in_ruleInvokeStmt3526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleTableSwitchStmt_in_entryRuleTableSwitchStmt3561 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleTableSwitchStmt3571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_ruleTableSwitchStmt3608 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleTableSwitchStmt3620 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleLocal_in_ruleTableSwitchStmt3641 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleTableSwitchStmt3653 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_22_in_ruleTableSwitchStmt3665 = new BitSet(new long[]{0x0000040800000000L});
    public static final BitSet FOLLOW_ruleCase_in_ruleTableSwitchStmt3687 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_ruleTableSwitchStmt3699 = new BitSet(new long[]{0x0000040800000000L});
    public static final BitSet FOLLOW_35_in_ruleTableSwitchStmt3713 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleTableSwitchStmt3725 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleGotoStmt_in_ruleTableSwitchStmt3746 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_ruleTableSwitchStmt3758 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_ruleTableSwitchStmt3770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLookupSwitchStmt_in_entryRuleLookupSwitchStmt3806 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLookupSwitchStmt3816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_ruleLookupSwitchStmt3865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMonitorStmt_in_entryRuleMonitorStmt3901 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMonitorStmt3911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEnterMonitorStmt_in_ruleMonitorStmt3961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExitMonitorStmt_in_ruleMonitorStmt3991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEnterMonitorStmt_in_entryRuleEnterMonitorStmt4026 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEnterMonitorStmt4036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_ruleEnterMonitorStmt4073 = new BitSet(new long[]{0x20000000040200D0L,0x00000000001138FBL});
    public static final BitSet FOLLOW_ruleValue_in_ruleEnterMonitorStmt4094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExitMonitorStmt_in_entryRuleExitMonitorStmt4130 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExitMonitorStmt4140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_ruleExitMonitorStmt4177 = new BitSet(new long[]{0x20000000040200D0L,0x00000000001138FBL});
    public static final BitSet FOLLOW_ruleValue_in_ruleExitMonitorStmt4198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNopStmt_in_entryRuleNopStmt4234 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNopStmt4244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_ruleNopStmt4293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRetStmt_in_entryRuleRetStmt4329 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRetStmt4339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_ruleRetStmt4376 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleLocal_in_ruleRetStmt4397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnVoidStmt_in_entryRuleReturnVoidStmt4433 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReturnVoidStmt4443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_ruleReturnVoidStmt4492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStmt_in_entryRuleReturnStmt4528 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReturnStmt4538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_ruleReturnStmt4575 = new BitSet(new long[]{0x20000000040200D0L,0x00000000001138FBL});
    public static final BitSet FOLLOW_ruleValue_in_ruleReturnStmt4596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCase_in_entryRuleCase4632 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCase4642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleCase4679 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleCase4696 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleCase4713 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_ruleGotoStmt_in_ruleCase4734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValue_in_entryRuleValue4772 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleValue4782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleValue4832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpr_in_ruleValue4862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_entryRuleNonExpr4897 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNonExpr4907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstant_in_ruleNonExpr4957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRef_in_ruleNonExpr4987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpr_in_entryRuleExpr5022 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpr5032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnyNewExpr_in_ruleExpr5082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBinOpExpr_in_ruleExpr5112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCastExpr_in_ruleExpr5142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstanceOfExpr_in_ruleExpr5172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInvokeExpr_in_ruleExpr5202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnopExpr_in_ruleExpr5232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAnyNewExpr_in_entryRuleAnyNewExpr5267 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAnyNewExpr5277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNewArrayExpr_in_ruleAnyNewExpr5327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNewExpr_in_ruleAnyNewExpr5357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNewMultiArrayExpr_in_ruleAnyNewExpr5387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBinOpExpr_in_entryRuleBinOpExpr5422 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBinOpExpr5432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddExpr_in_ruleBinOpExpr5482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndExpr_in_ruleBinOpExpr5512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmpExpr_in_ruleBinOpExpr5542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmpgExpr_in_ruleBinOpExpr5572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmplExpr_in_ruleBinOpExpr5602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConditionalExpr_in_ruleBinOpExpr5632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDivExpr_in_ruleBinOpExpr5662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulExpr_in_ruleBinOpExpr5692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpr_in_ruleBinOpExpr5722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRemExpr_in_ruleBinOpExpr5752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShlExpr_in_ruleBinOpExpr5782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShrExpr_in_ruleBinOpExpr5812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSubExpr_in_ruleBinOpExpr5842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUshrExpr_in_ruleBinOpExpr5872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXorExpr_in_ruleBinOpExpr5902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddExpr_in_entryRuleAddExpr5937 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAddExpr5947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleAddExpr5993 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_ruleAddExpr6005 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleAddExpr6026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndExpr_in_entryRuleAndExpr6062 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAndExpr6072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleAndExpr6118 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_ruleAndExpr6130 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleAndExpr6151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmpExpr_in_entryRuleCmpExpr6187 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCmpExpr6197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleCmpExpr6243 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_ruleCmpExpr6255 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleCmpExpr6276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmpgExpr_in_entryRuleCmpgExpr6312 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCmpgExpr6322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleCmpgExpr6368 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_ruleCmpgExpr6380 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleCmpgExpr6401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmplExpr_in_entryRuleCmplExpr6437 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCmplExpr6447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleCmplExpr6493 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_47_in_ruleCmplExpr6505 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleCmplExpr6526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConditionalExpr_in_entryRuleConditionalExpr6562 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConditionalExpr6572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEqExpr_in_ruleConditionalExpr6622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGeExpr_in_ruleConditionalExpr6652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGtExpr_in_ruleConditionalExpr6682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLeExpr_in_ruleConditionalExpr6712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLtExpr_in_ruleConditionalExpr6742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNeExpr_in_ruleConditionalExpr6772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDivExpr_in_entryRuleDivExpr6807 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDivExpr6817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleDivExpr6863 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_ruleDivExpr6875 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleDivExpr6896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulExpr_in_entryRuleMulExpr6932 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMulExpr6942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleMulExpr6988 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_49_in_ruleMulExpr7000 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleMulExpr7021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpr_in_entryRuleOrExpr7057 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleOrExpr7067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleOrExpr7113 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_ruleOrExpr7125 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleOrExpr7146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRemExpr_in_entryRuleRemExpr7182 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRemExpr7192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleRemExpr7238 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_ruleRemExpr7250 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleRemExpr7271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShlExpr_in_entryRuleShlExpr7307 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleShlExpr7317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleShlExpr7363 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_ruleShlExpr7375 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleShlExpr7396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShrExpr_in_entryRuleShrExpr7432 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleShrExpr7442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleShrExpr7488 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_53_in_ruleShrExpr7500 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleShrExpr7521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSubExpr_in_entryRuleSubExpr7557 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSubExpr7567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleSubExpr7613 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_ruleSubExpr7625 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleSubExpr7646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUshrExpr_in_entryRuleUshrExpr7682 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUshrExpr7692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleUshrExpr7738 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_ruleUshrExpr7750 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleUshrExpr7771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXorExpr_in_entryRuleXorExpr7807 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXorExpr7817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleXorExpr7863 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_56_in_ruleXorExpr7875 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleXorExpr7896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEqExpr_in_entryRuleEqExpr7932 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEqExpr7942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleEqExpr7988 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_ruleEqExpr8000 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleEqExpr8021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGeExpr_in_entryRuleGeExpr8057 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGeExpr8067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleGeExpr8113 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_ruleGeExpr8125 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleGeExpr8146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGtExpr_in_entryRuleGtExpr8182 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGtExpr8192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleGtExpr8238 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_ruleGtExpr8250 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleGtExpr8271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLeExpr_in_entryRuleLeExpr8307 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLeExpr8317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleLeExpr8363 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_60_in_ruleLeExpr8375 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleLeExpr8396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLtExpr_in_entryRuleLtExpr8432 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLtExpr8442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleLtExpr8488 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_61_in_ruleLtExpr8500 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleLtExpr8521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNeExpr_in_entryRuleNeExpr8557 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNeExpr8567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleNeExpr8613 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_ruleNeExpr8625 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleNeExpr8646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCastExpr_in_entryRuleCastExpr8682 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCastExpr8692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleCastExpr8729 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleCastExpr8750 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleCastExpr8762 = new BitSet(new long[]{0x20000000040200D0L,0x00000000001138FBL});
    public static final BitSet FOLLOW_ruleValue_in_ruleCastExpr8783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstanceOfExpr_in_entryRuleInstanceOfExpr8819 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInstanceOfExpr8829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRef_in_ruleInstanceOfExpr8875 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_63_in_ruleInstanceOfExpr8887 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleInstanceOfExpr8908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSootMethodRef_in_entryRuleSootMethodRef8944 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSootMethodRef8954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleSootMethodRef8991 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleSootMethodRef9012 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleSootMethodRef9024 = new BitSet(new long[]{0x0000000000000010L,0x00000003FE000000L});
    public static final BitSet FOLLOW_ruleSootType_in_ruleSootMethodRef9045 = new BitSet(new long[]{0x2000000000000010L});
    public static final BitSet FOLLOW_ruleMethodName_in_ruleSootMethodRef9066 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleSootMethodRef9078 = new BitSet(new long[]{0x0000000008000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleSootMethodRef9100 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleSootMethodRef9113 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleSootMethodRef9134 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleSootMethodRef9150 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_ruleSootMethodRef9162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSootType_in_entryRuleSootType9198 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSootType9208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardPrimitiveType_in_ruleSootType9258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleSootType9288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInvokeExpr_in_entryRuleInvokeExpr9323 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInvokeExpr9333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstanceInvokeExpr_in_ruleInvokeExpr9383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStaticInvokeExpr_in_ruleInvokeExpr9413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstanceInvokeExpr_in_entryRuleInstanceInvokeExpr9448 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInstanceInvokeExpr9458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceInvokeExpr_in_ruleInstanceInvokeExpr9508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpecialInvokeExpr_in_ruleInstanceInvokeExpr9538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVirtualInvokeExpr_in_ruleInstanceInvokeExpr9568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStaticInvokeExpr_in_entryRuleStaticInvokeExpr9603 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStaticInvokeExpr9613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_ruleStaticInvokeExpr9662 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_ruleSootMethodRef_in_ruleStaticInvokeExpr9683 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleStaticInvokeExpr9695 = new BitSet(new long[]{0x20000000080200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleStaticInvokeExpr9717 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleStaticInvokeExpr9730 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleStaticInvokeExpr9751 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleStaticInvokeExpr9767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterfaceInvokeExpr_in_entryRuleInterfaceInvokeExpr9803 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInterfaceInvokeExpr9813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_ruleInterfaceInvokeExpr9850 = new BitSet(new long[]{0x0000000000000010L,0x0000000000100000L});
    public static final BitSet FOLLOW_ruleLocalOrWildcard_in_ruleInterfaceInvokeExpr9871 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_ruleInterfaceInvokeExpr9883 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_ruleSootMethodRef_in_ruleInterfaceInvokeExpr9904 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleInterfaceInvokeExpr9916 = new BitSet(new long[]{0x20000000080200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleInterfaceInvokeExpr9938 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleInterfaceInvokeExpr9951 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleInterfaceInvokeExpr9972 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleInterfaceInvokeExpr9988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSpecialInvokeExpr_in_entryRuleSpecialInvokeExpr10024 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSpecialInvokeExpr10034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_ruleSpecialInvokeExpr10071 = new BitSet(new long[]{0x0000000000000010L,0x0000000000100000L});
    public static final BitSet FOLLOW_ruleLocalOrWildcard_in_ruleSpecialInvokeExpr10092 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_ruleSpecialInvokeExpr10104 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_ruleSootMethodRef_in_ruleSpecialInvokeExpr10125 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleSpecialInvokeExpr10137 = new BitSet(new long[]{0x20000000080200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleSpecialInvokeExpr10159 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleSpecialInvokeExpr10172 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleSpecialInvokeExpr10193 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleSpecialInvokeExpr10209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVirtualInvokeExpr_in_entryRuleVirtualInvokeExpr10245 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVirtualInvokeExpr10255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_ruleVirtualInvokeExpr10292 = new BitSet(new long[]{0x0000000000000010L,0x0000000000100000L});
    public static final BitSet FOLLOW_ruleLocalOrWildcard_in_ruleVirtualInvokeExpr10313 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_ruleVirtualInvokeExpr10325 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_ruleSootMethodRef_in_ruleVirtualInvokeExpr10346 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleVirtualInvokeExpr10358 = new BitSet(new long[]{0x20000000080200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleVirtualInvokeExpr10380 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleVirtualInvokeExpr10393 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleVirtualInvokeExpr10414 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleVirtualInvokeExpr10430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLocalOrWildcard_in_entryRuleLocalOrWildcard10466 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLocalOrWildcard10476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLocal_in_ruleLocalOrWildcard10526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardName_in_ruleLocalOrWildcard10556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNewArrayExpr_in_entryRuleNewArrayExpr10591 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNewArrayExpr10601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_ruleNewArrayExpr10638 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleNewArrayExpr10650 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleNewArrayExpr10671 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleNewArrayExpr10683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_ruleDimension_in_ruleNewArrayExpr10704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNewExpr_in_entryRuleNewExpr10740 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNewExpr10750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_ruleNewExpr10787 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleNewExpr10808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNewMultiArrayExpr_in_entryRuleNewMultiArrayExpr10844 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNewMultiArrayExpr10854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_ruleNewMultiArrayExpr10891 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleNewMultiArrayExpr10903 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleNewMultiArrayExpr10924 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleNewMultiArrayExpr10936 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000300L});
    public static final BitSet FOLLOW_ruleDimension_in_ruleNewMultiArrayExpr10957 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000300L});
    public static final BitSet FOLLOW_72_in_ruleNewMultiArrayExpr10976 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_ruleDimension_in_entryRuleDimension11026 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDimension11036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_ruleDimension11073 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleDimension11090 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_ruleDimension11107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnopExpr_in_entryRuleUnopExpr11143 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnopExpr11153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLengthExpr_in_ruleUnopExpr11203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNegExpr_in_ruleUnopExpr11233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLengthExpr_in_entryRuleLengthExpr11268 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLengthExpr11278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_ruleLengthExpr11315 = new BitSet(new long[]{0x20000000040200D0L,0x00000000001138FBL});
    public static final BitSet FOLLOW_ruleValue_in_ruleLengthExpr11336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNegExpr_in_entryRuleNegExpr11372 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNegExpr11382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_ruleNegExpr11419 = new BitSet(new long[]{0x20000000040200D0L,0x00000000001138FBL});
    public static final BitSet FOLLOW_ruleValue_in_ruleNegExpr11440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLocal_in_entryRuleLocal11476 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLocal11486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleLocal11527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRef_in_entryRuleRef11567 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRef11577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConcreteRef_in_ruleRef11627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIdentityRef_in_ruleRef11657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLocalOrWildcard_in_ruleRef11687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIdentityRef_in_entryRuleIdentityRef11722 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIdentityRef11732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParameterRef_in_ruleIdentityRef11782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThisRef_in_ruleIdentityRef11812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCaughtExceptionRef_in_ruleIdentityRef11842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParameterRef_in_entryRuleParameterRef11877 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParameterRef11887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_ruleParameterRef11924 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleParameterRef11941 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleParameterRef11958 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleParameterRef11979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleThisRef_in_entryRuleThisRef12015 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleThisRef12025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_ruleThisRef12062 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_ruleThisRef12074 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleThisRef12086 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleThisRef12107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCaughtExceptionRef_in_entryRuleCaughtExceptionRef12143 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCaughtExceptionRef12153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_ruleCaughtExceptionRef12202 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_ruleCaughtExceptionRef12214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConcreteRef_in_entryRuleConcreteRef12250 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConcreteRef12260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayRef_in_ruleConcreteRef12310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFieldRef_in_ruleConcreteRef12340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArrayRef_in_entryRuleArrayRef12375 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleArrayRef12385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLocalOrWildcard_in_ruleArrayRef12431 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_ruleArrayRef12443 = new BitSet(new long[]{0x20000000000200D0L,0x0000000000112000L});
    public static final BitSet FOLLOW_ruleNonExpr_in_ruleArrayRef12464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_ruleArrayRef12476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFieldRef_in_entryRuleFieldRef12512 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFieldRef12522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStaticFieldRef_in_ruleFieldRef12572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstanceFieldRef_in_ruleFieldRef12602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStaticFieldRef_in_entryRuleStaticFieldRef12637 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStaticFieldRef12647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSootFieldRef_in_ruleStaticFieldRef12692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSootFieldRef_in_entryRuleSootFieldRef12727 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSootFieldRef12737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleSootFieldRef12774 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleSootFieldRef12795 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_ruleSootFieldRef12807 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleSootFieldRef12828 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSootFieldRef12845 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_ruleSootFieldRef12862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstanceFieldRef_in_entryRuleInstanceFieldRef12898 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInstanceFieldRef12908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLocalOrWildcard_in_ruleInstanceFieldRef12954 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_ruleInstanceFieldRef12966 = new BitSet(new long[]{0x2000000000000010L,0x0000000000100000L});
    public static final BitSet FOLLOW_ruleFieldRef_in_ruleInstanceFieldRef12987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConstant_in_entryRuleConstant13023 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleConstant13033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClassConstant_in_ruleConstant13083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullConstant_in_ruleConstant13113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumericConstant_in_ruleConstant13143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringConstant_in_ruleConstant13173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleClassConstant_in_entryRuleClassConstant13208 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleClassConstant13218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_ruleClassConstant13255 = new BitSet(new long[]{0x0000000000000010L,0x0000000000100000L});
    public static final BitSet FOLLOW_ruleQualifiedNameOrWildcard_in_ruleClassConstant13276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedNameOrWildcard_in_entryRuleQualifiedNameOrWildcard13312 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedNameOrWildcard13322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_ruleQualifiedNameOrWildcard13372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcard_in_ruleQualifiedNameOrWildcard13402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNullConstant_in_entryRuleNullConstant13439 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNullConstant13449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleNullConstant13498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumericConstant_in_entryRuleNumericConstant13534 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumericConstant13544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntConstant_in_ruleNumericConstant13594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLongConstant_in_ruleNumericConstant13624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoubleConstant_in_ruleNumericConstant13654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFloatConstant_in_ruleNumericConstant13684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntConstant_in_entryRuleIntConstant13719 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIntConstant13729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleIntConstant13770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLongConstant_in_entryRuleLongConstant13810 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLongConstant13820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleLongConstant13862 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_ruleLongConstant13879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDoubleConstant_in_entryRuleDoubleConstant13915 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleDoubleConstant13925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleDoubleConstant13967 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_ruleDoubleConstant13984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFloatConstant_in_entryRuleFloatConstant14020 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFloatConstant14030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleFloatConstant14072 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_ruleFloatConstant14089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStringConstant_in_entryRuleStringConstant14125 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStringConstant14135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleStringConstant14176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMethodName_in_entryRuleMethodName14219 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMethodName14230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleMethodName14269 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleMethodName14286 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_59_in_ruleMethodName14305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQualifiedName_in_entryRuleQualifiedName14347 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQualifiedName14357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQName_in_ruleQualifiedName14402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcard_in_entryRuleWildcard14437 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcard14447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_ruleWildcard14484 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_ruleWildcard14505 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_ruleWildcard14517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardName_in_entryRuleWildcardName14553 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardName14563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_ruleWildcardName14600 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleWildcardName14617 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_ruleWildcardName14634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_entryRuleWildcardExpression14670 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardExpression14680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardConditionalOrExpression_in_ruleWildcardExpression14725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardConditionalOrExpression_in_entryRuleWildcardConditionalOrExpression14760 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardConditionalOrExpression14770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardConditionalAndExpression_in_ruleWildcardConditionalOrExpression14816 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_ruleWildcardConditionalOrExpression14829 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardConditionalAndExpression_in_ruleWildcardConditionalOrExpression14850 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_ruleWildcardConditionalAndExpression_in_entryRuleWildcardConditionalAndExpression14888 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardConditionalAndExpression14898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardEqualityExpression_in_ruleWildcardConditionalAndExpression14944 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_ruleWildcardConditionalAndExpression14957 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardEqualityExpression_in_ruleWildcardConditionalAndExpression14978 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_ruleWildcardEqualityExpression_in_entryRuleWildcardEqualityExpression15016 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardEqualityExpression15026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardInstanceOfExpression_in_ruleWildcardEqualityExpression15072 = new BitSet(new long[]{0x4200000000000002L});
    public static final BitSet FOLLOW_57_in_ruleWildcardEqualityExpression15092 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_62_in_ruleWildcardEqualityExpression15129 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardInstanceOfExpression_in_ruleWildcardEqualityExpression15164 = new BitSet(new long[]{0x4200000000000002L});
    public static final BitSet FOLLOW_ruleWildcardInstanceOfExpression_in_entryRuleWildcardInstanceOfExpression15202 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardInstanceOfExpression15212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardRelationalExpression_in_ruleWildcardInstanceOfExpression15258 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_63_in_ruleWildcardInstanceOfExpression15271 = new BitSet(new long[]{0x0000000000000010L,0x00000003FE000000L});
    public static final BitSet FOLLOW_ruleWildcardQName_in_ruleWildcardInstanceOfExpression15292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardRelationalExpression_in_entryRuleWildcardRelationalExpression15330 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardRelationalExpression15340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardAdditiveExpression_in_ruleWildcardRelationalExpression15386 = new BitSet(new long[]{0x3C00000000000002L});
    public static final BitSet FOLLOW_ruleWildcardRelationalOp_in_ruleWildcardRelationalExpression15408 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardAdditiveExpression_in_ruleWildcardRelationalExpression15429 = new BitSet(new long[]{0x3C00000000000002L});
    public static final BitSet FOLLOW_ruleWildcardRelationalOp_in_entryRuleWildcardRelationalOp15468 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardRelationalOp15479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_ruleWildcardRelationalOp15517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_ruleWildcardRelationalOp15536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_ruleWildcardRelationalOp15555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_ruleWildcardRelationalOp15574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardAdditiveExpression_in_entryRuleWildcardAdditiveExpression15614 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardAdditiveExpression15624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardMultiplicativeExpression_in_ruleWildcardAdditiveExpression15670 = new BitSet(new long[]{0x0040080000000002L});
    public static final BitSet FOLLOW_43_in_ruleWildcardAdditiveExpression15690 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_54_in_ruleWildcardAdditiveExpression15727 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardMultiplicativeExpression_in_ruleWildcardAdditiveExpression15762 = new BitSet(new long[]{0x0040080000000002L});
    public static final BitSet FOLLOW_ruleWildcardMultiplicativeExpression_in_entryRuleWildcardMultiplicativeExpression15800 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardMultiplicativeExpression15810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardMultiplicativeExpression15856 = new BitSet(new long[]{0x000B000000000002L});
    public static final BitSet FOLLOW_49_in_ruleWildcardMultiplicativeExpression15876 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_48_in_ruleWildcardMultiplicativeExpression15913 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_51_in_ruleWildcardMultiplicativeExpression15950 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardMultiplicativeExpression15985 = new BitSet(new long[]{0x000B000000000002L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpression_in_entryRuleWildcardUnaryExpression16023 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardUnaryExpression16033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_ruleWildcardUnaryExpression16077 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardUnaryExpression16111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_ruleWildcardUnaryExpression16137 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardUnaryExpression16171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpressionNotPlusMinus_in_ruleWildcardUnaryExpression16199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpressionNotPlusMinus_in_entryRuleWildcardUnaryExpressionNotPlusMinus16235 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardUnaryExpressionNotPlusMinus16245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_ruleWildcardUnaryExpressionNotPlusMinus16289 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardUnaryExpression_in_ruleWildcardUnaryExpressionNotPlusMinus16323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardPrimary_in_ruleWildcardUnaryExpressionNotPlusMinus16352 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleWildcardDereference_in_ruleWildcardUnaryExpressionNotPlusMinus16373 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_ruleWildcardPrimary_in_entryRuleWildcardPrimary16411 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardPrimary16421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardParExpression_in_ruleWildcardPrimary16471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardDereference_in_ruleWildcardPrimary16501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardLiteral_in_ruleWildcardPrimary16531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardClassLiteral_in_ruleWildcardPrimary16561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardNew_in_ruleWildcardPrimary16591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardQName_in_ruleWildcardPrimary16621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardParExpression_in_entryRuleWildcardParExpression16656 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardParExpression16666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleWildcardParExpression16703 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_ruleWildcardParExpression16724 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_ruleWildcardParExpression16736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardClassLiteral_in_entryRuleWildcardClassLiteral16772 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardClassLiteral16782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardType_in_ruleWildcardClassLiteral16828 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000204L});
    public static final BitSet FOLLOW_73_in_ruleWildcardClassLiteral16847 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_ruleWildcardClassLiteral16878 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000204L});
    public static final BitSet FOLLOW_66_in_ruleWildcardClassLiteral16905 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_ruleWildcardClassLiteral16917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardType_in_entryRuleWildcardType16953 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardType16963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardPrimitiveType_in_ruleWildcardType17013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardQName_in_ruleWildcardType17043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardPrimitiveType_in_entryRuleWildcardPrimitiveType17078 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardPrimitiveType17088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_ruleWildcardPrimitiveType17138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_ruleWildcardPrimitiveType17170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_ruleWildcardPrimitiveType17202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_ruleWildcardPrimitiveType17234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_ruleWildcardPrimitiveType17266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_ruleWildcardPrimitiveType17298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_ruleWildcardPrimitiveType17330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_ruleWildcardPrimitiveType17362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_ruleWildcardPrimitiveType17394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardLiteral_in_entryRuleWildcardLiteral17431 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardLiteral17441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardBoolean_in_ruleWildcardLiteral17491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardInt_in_ruleWildcardLiteral17521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardNull_in_ruleWildcardLiteral17551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardString_in_ruleWildcardLiteral17581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardBoolean_in_entryRuleWildcardBoolean17616 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardBoolean17626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_ruleWildcardBoolean17669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_ruleWildcardBoolean17706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardInt_in_entryRuleWildcardInt17755 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardInt17765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleWildcardInt17806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardNull_in_entryRuleWildcardNull17846 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardNull17856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_ruleWildcardNull17905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardString_in_entryRuleWildcardString17941 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardString17951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleWildcardString17992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardNew_in_entryRuleWildcardNew18032 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardNew18042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_ruleWildcardNew18079 = new BitSet(new long[]{0x0000000000000010L,0x00000003FE000000L});
    public static final BitSet FOLLOW_ruleWildcardQName_in_ruleWildcardNew18100 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleWildcardNew18112 = new BitSet(new long[]{0x004008000C0000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_ruleWildcardNew18134 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleWildcardNew18147 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_ruleWildcardNew18168 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleWildcardNew18184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardQName_in_entryRuleWildcardQName18220 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardQName18230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardQNameTerminal_in_ruleWildcardQName18275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardQNameTerminal_in_entryRuleWildcardQNameTerminal18311 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardQNameTerminal18322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleWildcardQNameTerminal18362 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_100_in_ruleWildcardQNameTerminal18381 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleWildcardQNameTerminal18396 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_ruleWildcardDereference_in_entryRuleWildcardDereference18443 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardDereference18453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardCall_in_ruleWildcardDereference18503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardField_in_ruleWildcardDereference18533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardCall_in_entryRuleWildcardCall18568 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardCall18578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleWildcardCall18615 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleWildcardCall18632 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_ruleWildcardCall18649 = new BitSet(new long[]{0x004008000C0000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_ruleWildcardCall18671 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_21_in_ruleWildcardCall18684 = new BitSet(new long[]{0x00400800040000D0L,0x0000000FFF010044L});
    public static final BitSet FOLLOW_ruleWildcardExpression_in_ruleWildcardCall18705 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_27_in_ruleWildcardCall18721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWildcardField_in_entryRuleWildcardField18757 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWildcardField18767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_ruleWildcardField18804 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleWildcardField18821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleQName_in_entryRuleQName18863 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleQName18874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQName18914 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_ruleQName18933 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleQName18948 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_101_in_ruleVisibility19009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_ruleVisibility19026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_ruleVisibility19043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_ruleVisibility19060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDeclaration_in_synpred18_InternalTransformationLanguage1777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonExpr_in_synpred37_InternalTransformationLanguage4832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBinOpExpr_in_synpred40_InternalTransformationLanguage5112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInstanceOfExpr_in_synpred42_InternalTransformationLanguage5172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddExpr_in_synpred46_InternalTransformationLanguage5482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAndExpr_in_synpred47_InternalTransformationLanguage5512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmpExpr_in_synpred48_InternalTransformationLanguage5542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmpgExpr_in_synpred49_InternalTransformationLanguage5572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCmplExpr_in_synpred50_InternalTransformationLanguage5602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleConditionalExpr_in_synpred51_InternalTransformationLanguage5632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleDivExpr_in_synpred52_InternalTransformationLanguage5662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMulExpr_in_synpred53_InternalTransformationLanguage5692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleOrExpr_in_synpred54_InternalTransformationLanguage5722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRemExpr_in_synpred55_InternalTransformationLanguage5752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShlExpr_in_synpred56_InternalTransformationLanguage5782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleShrExpr_in_synpred57_InternalTransformationLanguage5812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSubExpr_in_synpred58_InternalTransformationLanguage5842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUshrExpr_in_synpred59_InternalTransformationLanguage5872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEqExpr_in_synpred60_InternalTransformationLanguage6622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGeExpr_in_synpred61_InternalTransformationLanguage6652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGtExpr_in_synpred62_InternalTransformationLanguage6682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLeExpr_in_synpred63_InternalTransformationLanguage6712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLtExpr_in_synpred64_InternalTransformationLanguage6742 = new BitSet(new long[]{0x0000000000000002L});

}