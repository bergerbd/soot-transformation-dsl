/*
* generated by Xtext
*/
package soot.jimple.toolkits.transformation.dsl.ui.labeling;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider; 

import soot.jimple.toolkits.transformation.dsl.transformationLanguage.VirtualInvokeExpr;
import soot.jimple.toolkits.transformation.dsl.transformationLanguage.WildcardName;
 
import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class TransformationLanguageLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public TransformationLanguageLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	public Object text(final VirtualInvokeExpr vInvoke) {
		return "VirtualInvoke";
	}
	
	public Object text(final WildcardName wName) {
		return "Wildcard " +wName.getWName();
	}
	
	public Object text(final Object object) {
		String name = object.getClass().getSimpleName();
		
		if(name.endsWith("Impl")) {
			return name.substring(0, name.length() - 4);
		}
		
		return name;
	}

/*
	//Labels and icons can be computed like this:
	
	String text(MyModel ele) {
	  return "my "+ele.getName();
	}
	 
    String image(MyModel ele) {
      return "MyModel.gif";
    }
*/
}
