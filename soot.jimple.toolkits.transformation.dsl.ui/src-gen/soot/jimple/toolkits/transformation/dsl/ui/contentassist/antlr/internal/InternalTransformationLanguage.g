/*
* generated by Xtext
*/
grammar InternalTransformationLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package soot.jimple.toolkits.transformation.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package soot.jimple.toolkits.transformation.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import soot.jimple.toolkits.transformation.dsl.services.TransformationLanguageGrammarAccess;

}

@parser::members {
 
 	private TransformationLanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TransformationLanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTransformation
entryRuleTransformation 
:
{ before(grammarAccess.getTransformationRule()); }
	 ruleTransformation
{ after(grammarAccess.getTransformationRule()); } 
	 EOF 
;

// Rule Transformation
ruleTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationAccess().getGroup()); }
(rule__Transformation__Group__0)
{ after(grammarAccess.getTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePattern
entryRulePattern 
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternAccess().getAlternatives()); }
(rule__Pattern__Alternatives)
{ after(grammarAccess.getPatternAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequencePattern
entryRuleSequencePattern 
:
{ before(grammarAccess.getSequencePatternRule()); }
	 ruleSequencePattern
{ after(grammarAccess.getSequencePatternRule()); } 
	 EOF 
;

// Rule SequencePattern
ruleSequencePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequencePatternAccess().getSequenceAssignment()); }
(rule__SequencePattern__SequenceAssignment)
{ after(grammarAccess.getSequencePatternAccess().getSequenceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodPattern
entryRuleMethodPattern 
:
{ before(grammarAccess.getMethodPatternRule()); }
	 ruleMethodPattern
{ after(grammarAccess.getMethodPatternRule()); } 
	 EOF 
;

// Rule MethodPattern
ruleMethodPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodPatternAccess().getMethodAssignment()); }
(rule__MethodPattern__MethodAssignment)
{ after(grammarAccess.getMethodPatternAccess().getMethodAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypePattern
entryRuleTypePattern 
:
{ before(grammarAccess.getTypePatternRule()); }
	 ruleTypePattern
{ after(grammarAccess.getTypePatternRule()); } 
	 EOF 
;

// Rule TypePattern
ruleTypePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypePatternAccess().getTypeAssignment()); }
(rule__TypePattern__TypeAssignment)
{ after(grammarAccess.getTypePatternAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReplacement
entryRuleReplacement 
:
{ before(grammarAccess.getReplacementRule()); }
	 ruleReplacement
{ after(grammarAccess.getReplacementRule()); } 
	 EOF 
;

// Rule Replacement
ruleReplacement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReplacementAccess().getAlternatives()); }
(rule__Replacement__Alternatives)
{ after(grammarAccess.getReplacementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBody
entryRuleBody 
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyAccess().getGroup()); }
(rule__Body__Group__0)
{ after(grammarAccess.getBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementSequence
entryRuleStatementSequence 
:
{ before(grammarAccess.getStatementSequenceRule()); }
	 ruleStatementSequence
{ after(grammarAccess.getStatementSequenceRule()); } 
	 EOF 
;

// Rule StatementSequence
ruleStatementSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getStatementSequenceAccess().getStatementsAssignment()); }
(rule__StatementSequence__StatementsAssignment)
{ after(grammarAccess.getStatementSequenceAccess().getStatementsAssignment()); }
)
(
{ before(grammarAccess.getStatementSequenceAccess().getStatementsAssignment()); }
(rule__StatementSequence__StatementsAssignment)*
{ after(grammarAccess.getStatementSequenceAccess().getStatementsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabelOrStatement
entryRuleLabelOrStatement 
:
{ before(grammarAccess.getLabelOrStatementRule()); }
	 ruleLabelOrStatement
{ after(grammarAccess.getLabelOrStatementRule()); } 
	 EOF 
;

// Rule LabelOrStatement
ruleLabelOrStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelOrStatementAccess().getAlternatives()); }
(rule__LabelOrStatement__Alternatives)
{ after(grammarAccess.getLabelOrStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getGroup()); }
(rule__Label__Group__0)
{ after(grammarAccess.getLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakpointStmt
entryRuleBreakpointStmt 
:
{ before(grammarAccess.getBreakpointStmtRule()); }
	 ruleBreakpointStmt
{ after(grammarAccess.getBreakpointStmtRule()); } 
	 EOF 
;

// Rule BreakpointStmt
ruleBreakpointStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakpointStmtAccess().getGroup()); }
(rule__BreakpointStmt__Group__0)
{ after(grammarAccess.getBreakpointStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionStmt
entryRuleDefinitionStmt 
:
{ before(grammarAccess.getDefinitionStmtRule()); }
	 ruleDefinitionStmt
{ after(grammarAccess.getDefinitionStmtRule()); } 
	 EOF 
;

// Rule DefinitionStmt
ruleDefinitionStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionStmtAccess().getAlternatives()); }
(rule__DefinitionStmt__Alternatives)
{ after(grammarAccess.getDefinitionStmtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignStmt
entryRuleAssignStmt 
:
{ before(grammarAccess.getAssignStmtRule()); }
	 ruleAssignStmt
{ after(grammarAccess.getAssignStmtRule()); } 
	 EOF 
;

// Rule AssignStmt
ruleAssignStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignStmtAccess().getGroup()); }
(rule__AssignStmt__Group__0)
{ after(grammarAccess.getAssignStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentityStmt
entryRuleIdentityStmt 
:
{ before(grammarAccess.getIdentityStmtRule()); }
	 ruleIdentityStmt
{ after(grammarAccess.getIdentityStmtRule()); } 
	 EOF 
;

// Rule IdentityStmt
ruleIdentityStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentityStmtAccess().getGroup()); }
(rule__IdentityStmt__Group__0)
{ after(grammarAccess.getIdentityStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGotoStmt
entryRuleGotoStmt 
:
{ before(grammarAccess.getGotoStmtRule()); }
	 ruleGotoStmt
{ after(grammarAccess.getGotoStmtRule()); } 
	 EOF 
;

// Rule GotoStmt
ruleGotoStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGotoStmtAccess().getGroup()); }
(rule__GotoStmt__Group__0)
{ after(grammarAccess.getGotoStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStmt
entryRuleIfStmt 
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStmtAccess().getGroup()); }
(rule__IfStmt__Group__0)
{ after(grammarAccess.getIfStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInvokeStmt
entryRuleInvokeStmt 
:
{ before(grammarAccess.getInvokeStmtRule()); }
	 ruleInvokeStmt
{ after(grammarAccess.getInvokeStmtRule()); } 
	 EOF 
;

// Rule InvokeStmt
ruleInvokeStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvokeStmtAccess().getInvokeExprAssignment()); }
(rule__InvokeStmt__InvokeExprAssignment)
{ after(grammarAccess.getInvokeStmtAccess().getInvokeExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableSwitchStmt
entryRuleTableSwitchStmt 
:
{ before(grammarAccess.getTableSwitchStmtRule()); }
	 ruleTableSwitchStmt
{ after(grammarAccess.getTableSwitchStmtRule()); } 
	 EOF 
;

// Rule TableSwitchStmt
ruleTableSwitchStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getGroup()); }
(rule__TableSwitchStmt__Group__0)
{ after(grammarAccess.getTableSwitchStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLookupSwitchStmt
entryRuleLookupSwitchStmt 
:
{ before(grammarAccess.getLookupSwitchStmtRule()); }
	 ruleLookupSwitchStmt
{ after(grammarAccess.getLookupSwitchStmtRule()); } 
	 EOF 
;

// Rule LookupSwitchStmt
ruleLookupSwitchStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLookupSwitchStmtAccess().getGroup()); }
(rule__LookupSwitchStmt__Group__0)
{ after(grammarAccess.getLookupSwitchStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMonitorStmt
entryRuleMonitorStmt 
:
{ before(grammarAccess.getMonitorStmtRule()); }
	 ruleMonitorStmt
{ after(grammarAccess.getMonitorStmtRule()); } 
	 EOF 
;

// Rule MonitorStmt
ruleMonitorStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMonitorStmtAccess().getAlternatives()); }
(rule__MonitorStmt__Alternatives)
{ after(grammarAccess.getMonitorStmtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnterMonitorStmt
entryRuleEnterMonitorStmt 
:
{ before(grammarAccess.getEnterMonitorStmtRule()); }
	 ruleEnterMonitorStmt
{ after(grammarAccess.getEnterMonitorStmtRule()); } 
	 EOF 
;

// Rule EnterMonitorStmt
ruleEnterMonitorStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnterMonitorStmtAccess().getGroup()); }
(rule__EnterMonitorStmt__Group__0)
{ after(grammarAccess.getEnterMonitorStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExitMonitorStmt
entryRuleExitMonitorStmt 
:
{ before(grammarAccess.getExitMonitorStmtRule()); }
	 ruleExitMonitorStmt
{ after(grammarAccess.getExitMonitorStmtRule()); } 
	 EOF 
;

// Rule ExitMonitorStmt
ruleExitMonitorStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExitMonitorStmtAccess().getGroup()); }
(rule__ExitMonitorStmt__Group__0)
{ after(grammarAccess.getExitMonitorStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNopStmt
entryRuleNopStmt 
:
{ before(grammarAccess.getNopStmtRule()); }
	 ruleNopStmt
{ after(grammarAccess.getNopStmtRule()); } 
	 EOF 
;

// Rule NopStmt
ruleNopStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNopStmtAccess().getGroup()); }
(rule__NopStmt__Group__0)
{ after(grammarAccess.getNopStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRetStmt
entryRuleRetStmt 
:
{ before(grammarAccess.getRetStmtRule()); }
	 ruleRetStmt
{ after(grammarAccess.getRetStmtRule()); } 
	 EOF 
;

// Rule RetStmt
ruleRetStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRetStmtAccess().getGroup()); }
(rule__RetStmt__Group__0)
{ after(grammarAccess.getRetStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnVoidStmt
entryRuleReturnVoidStmt 
:
{ before(grammarAccess.getReturnVoidStmtRule()); }
	 ruleReturnVoidStmt
{ after(grammarAccess.getReturnVoidStmtRule()); } 
	 EOF 
;

// Rule ReturnVoidStmt
ruleReturnVoidStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnVoidStmtAccess().getGroup()); }
(rule__ReturnVoidStmt__Group__0)
{ after(grammarAccess.getReturnVoidStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStmt
entryRuleReturnStmt 
:
{ before(grammarAccess.getReturnStmtRule()); }
	 ruleReturnStmt
{ after(grammarAccess.getReturnStmtRule()); } 
	 EOF 
;

// Rule ReturnStmt
ruleReturnStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStmtAccess().getGroup()); }
(rule__ReturnStmt__Group__0)
{ after(grammarAccess.getReturnStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonExpr
entryRuleNonExpr 
:
{ before(grammarAccess.getNonExprRule()); }
	 ruleNonExpr
{ after(grammarAccess.getNonExprRule()); } 
	 EOF 
;

// Rule NonExpr
ruleNonExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonExprAccess().getAlternatives()); }
(rule__NonExpr__Alternatives)
{ after(grammarAccess.getNonExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getAlternatives()); }
(rule__Expr__Alternatives)
{ after(grammarAccess.getExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyNewExpr
entryRuleAnyNewExpr 
:
{ before(grammarAccess.getAnyNewExprRule()); }
	 ruleAnyNewExpr
{ after(grammarAccess.getAnyNewExprRule()); } 
	 EOF 
;

// Rule AnyNewExpr
ruleAnyNewExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyNewExprAccess().getAlternatives()); }
(rule__AnyNewExpr__Alternatives)
{ after(grammarAccess.getAnyNewExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinOpExpr
entryRuleBinOpExpr 
:
{ before(grammarAccess.getBinOpExprRule()); }
	 ruleBinOpExpr
{ after(grammarAccess.getBinOpExprRule()); } 
	 EOF 
;

// Rule BinOpExpr
ruleBinOpExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinOpExprAccess().getAlternatives()); }
(rule__BinOpExpr__Alternatives)
{ after(grammarAccess.getBinOpExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpr
entryRuleAddExpr 
:
{ before(grammarAccess.getAddExprRule()); }
	 ruleAddExpr
{ after(grammarAccess.getAddExprRule()); } 
	 EOF 
;

// Rule AddExpr
ruleAddExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExprAccess().getGroup()); }
(rule__AddExpr__Group__0)
{ after(grammarAccess.getAddExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpr
entryRuleAndExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCmpExpr
entryRuleCmpExpr 
:
{ before(grammarAccess.getCmpExprRule()); }
	 ruleCmpExpr
{ after(grammarAccess.getCmpExprRule()); } 
	 EOF 
;

// Rule CmpExpr
ruleCmpExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCmpExprAccess().getGroup()); }
(rule__CmpExpr__Group__0)
{ after(grammarAccess.getCmpExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCmpgExpr
entryRuleCmpgExpr 
:
{ before(grammarAccess.getCmpgExprRule()); }
	 ruleCmpgExpr
{ after(grammarAccess.getCmpgExprRule()); } 
	 EOF 
;

// Rule CmpgExpr
ruleCmpgExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCmpgExprAccess().getGroup()); }
(rule__CmpgExpr__Group__0)
{ after(grammarAccess.getCmpgExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCmplExpr
entryRuleCmplExpr 
:
{ before(grammarAccess.getCmplExprRule()); }
	 ruleCmplExpr
{ after(grammarAccess.getCmplExprRule()); } 
	 EOF 
;

// Rule CmplExpr
ruleCmplExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCmplExprAccess().getGroup()); }
(rule__CmplExpr__Group__0)
{ after(grammarAccess.getCmplExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalExpr
entryRuleConditionalExpr 
:
{ before(grammarAccess.getConditionalExprRule()); }
	 ruleConditionalExpr
{ after(grammarAccess.getConditionalExprRule()); } 
	 EOF 
;

// Rule ConditionalExpr
ruleConditionalExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalExprAccess().getAlternatives()); }
(rule__ConditionalExpr__Alternatives)
{ after(grammarAccess.getConditionalExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivExpr
entryRuleDivExpr 
:
{ before(grammarAccess.getDivExprRule()); }
	 ruleDivExpr
{ after(grammarAccess.getDivExprRule()); } 
	 EOF 
;

// Rule DivExpr
ruleDivExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivExprAccess().getGroup()); }
(rule__DivExpr__Group__0)
{ after(grammarAccess.getDivExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMulExpr
entryRuleMulExpr 
:
{ before(grammarAccess.getMulExprRule()); }
	 ruleMulExpr
{ after(grammarAccess.getMulExprRule()); } 
	 EOF 
;

// Rule MulExpr
ruleMulExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMulExprAccess().getGroup()); }
(rule__MulExpr__Group__0)
{ after(grammarAccess.getMulExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpr
entryRuleOrExpr 
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExprAccess().getGroup()); }
(rule__OrExpr__Group__0)
{ after(grammarAccess.getOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemExpr
entryRuleRemExpr 
:
{ before(grammarAccess.getRemExprRule()); }
	 ruleRemExpr
{ after(grammarAccess.getRemExprRule()); } 
	 EOF 
;

// Rule RemExpr
ruleRemExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemExprAccess().getGroup()); }
(rule__RemExpr__Group__0)
{ after(grammarAccess.getRemExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShlExpr
entryRuleShlExpr 
:
{ before(grammarAccess.getShlExprRule()); }
	 ruleShlExpr
{ after(grammarAccess.getShlExprRule()); } 
	 EOF 
;

// Rule ShlExpr
ruleShlExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShlExprAccess().getGroup()); }
(rule__ShlExpr__Group__0)
{ after(grammarAccess.getShlExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShrExpr
entryRuleShrExpr 
:
{ before(grammarAccess.getShrExprRule()); }
	 ruleShrExpr
{ after(grammarAccess.getShrExprRule()); } 
	 EOF 
;

// Rule ShrExpr
ruleShrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShrExprAccess().getGroup()); }
(rule__ShrExpr__Group__0)
{ after(grammarAccess.getShrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubExpr
entryRuleSubExpr 
:
{ before(grammarAccess.getSubExprRule()); }
	 ruleSubExpr
{ after(grammarAccess.getSubExprRule()); } 
	 EOF 
;

// Rule SubExpr
ruleSubExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubExprAccess().getGroup()); }
(rule__SubExpr__Group__0)
{ after(grammarAccess.getSubExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUshrExpr
entryRuleUshrExpr 
:
{ before(grammarAccess.getUshrExprRule()); }
	 ruleUshrExpr
{ after(grammarAccess.getUshrExprRule()); } 
	 EOF 
;

// Rule UshrExpr
ruleUshrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUshrExprAccess().getGroup()); }
(rule__UshrExpr__Group__0)
{ after(grammarAccess.getUshrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXorExpr
entryRuleXorExpr 
:
{ before(grammarAccess.getXorExprRule()); }
	 ruleXorExpr
{ after(grammarAccess.getXorExprRule()); } 
	 EOF 
;

// Rule XorExpr
ruleXorExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXorExprAccess().getGroup()); }
(rule__XorExpr__Group__0)
{ after(grammarAccess.getXorExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqExpr
entryRuleEqExpr 
:
{ before(grammarAccess.getEqExprRule()); }
	 ruleEqExpr
{ after(grammarAccess.getEqExprRule()); } 
	 EOF 
;

// Rule EqExpr
ruleEqExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqExprAccess().getGroup()); }
(rule__EqExpr__Group__0)
{ after(grammarAccess.getEqExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGeExpr
entryRuleGeExpr 
:
{ before(grammarAccess.getGeExprRule()); }
	 ruleGeExpr
{ after(grammarAccess.getGeExprRule()); } 
	 EOF 
;

// Rule GeExpr
ruleGeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeExprAccess().getGroup()); }
(rule__GeExpr__Group__0)
{ after(grammarAccess.getGeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGtExpr
entryRuleGtExpr 
:
{ before(grammarAccess.getGtExprRule()); }
	 ruleGtExpr
{ after(grammarAccess.getGtExprRule()); } 
	 EOF 
;

// Rule GtExpr
ruleGtExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGtExprAccess().getGroup()); }
(rule__GtExpr__Group__0)
{ after(grammarAccess.getGtExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeExpr
entryRuleLeExpr 
:
{ before(grammarAccess.getLeExprRule()); }
	 ruleLeExpr
{ after(grammarAccess.getLeExprRule()); } 
	 EOF 
;

// Rule LeExpr
ruleLeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeExprAccess().getGroup()); }
(rule__LeExpr__Group__0)
{ after(grammarAccess.getLeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLtExpr
entryRuleLtExpr 
:
{ before(grammarAccess.getLtExprRule()); }
	 ruleLtExpr
{ after(grammarAccess.getLtExprRule()); } 
	 EOF 
;

// Rule LtExpr
ruleLtExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLtExprAccess().getGroup()); }
(rule__LtExpr__Group__0)
{ after(grammarAccess.getLtExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNeExpr
entryRuleNeExpr 
:
{ before(grammarAccess.getNeExprRule()); }
	 ruleNeExpr
{ after(grammarAccess.getNeExprRule()); } 
	 EOF 
;

// Rule NeExpr
ruleNeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNeExprAccess().getGroup()); }
(rule__NeExpr__Group__0)
{ after(grammarAccess.getNeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCastExpr
entryRuleCastExpr 
:
{ before(grammarAccess.getCastExprRule()); }
	 ruleCastExpr
{ after(grammarAccess.getCastExprRule()); } 
	 EOF 
;

// Rule CastExpr
ruleCastExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastExprAccess().getGroup()); }
(rule__CastExpr__Group__0)
{ after(grammarAccess.getCastExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceOfExpr
entryRuleInstanceOfExpr 
:
{ before(grammarAccess.getInstanceOfExprRule()); }
	 ruleInstanceOfExpr
{ after(grammarAccess.getInstanceOfExprRule()); } 
	 EOF 
;

// Rule InstanceOfExpr
ruleInstanceOfExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup()); }
(rule__InstanceOfExpr__Group__0)
{ after(grammarAccess.getInstanceOfExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSootMethodRef
entryRuleSootMethodRef 
:
{ before(grammarAccess.getSootMethodRefRule()); }
	 ruleSootMethodRef
{ after(grammarAccess.getSootMethodRefRule()); } 
	 EOF 
;

// Rule SootMethodRef
ruleSootMethodRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSootMethodRefAccess().getGroup()); }
(rule__SootMethodRef__Group__0)
{ after(grammarAccess.getSootMethodRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInvokeExpr
entryRuleInvokeExpr 
:
{ before(grammarAccess.getInvokeExprRule()); }
	 ruleInvokeExpr
{ after(grammarAccess.getInvokeExprRule()); } 
	 EOF 
;

// Rule InvokeExpr
ruleInvokeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvokeExprAccess().getAlternatives()); }
(rule__InvokeExpr__Alternatives)
{ after(grammarAccess.getInvokeExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceInvokeExpr
entryRuleInstanceInvokeExpr 
:
{ before(grammarAccess.getInstanceInvokeExprRule()); }
	 ruleInstanceInvokeExpr
{ after(grammarAccess.getInstanceInvokeExprRule()); } 
	 EOF 
;

// Rule InstanceInvokeExpr
ruleInstanceInvokeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceInvokeExprAccess().getAlternatives()); }
(rule__InstanceInvokeExpr__Alternatives)
{ after(grammarAccess.getInstanceInvokeExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticInvokeExpr
entryRuleStaticInvokeExpr 
:
{ before(grammarAccess.getStaticInvokeExprRule()); }
	 ruleStaticInvokeExpr
{ after(grammarAccess.getStaticInvokeExprRule()); } 
	 EOF 
;

// Rule StaticInvokeExpr
ruleStaticInvokeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getGroup()); }
(rule__StaticInvokeExpr__Group__0)
{ after(grammarAccess.getStaticInvokeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceInvokeExpr
entryRuleInterfaceInvokeExpr 
:
{ before(grammarAccess.getInterfaceInvokeExprRule()); }
	 ruleInterfaceInvokeExpr
{ after(grammarAccess.getInterfaceInvokeExprRule()); } 
	 EOF 
;

// Rule InterfaceInvokeExpr
ruleInterfaceInvokeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getGroup()); }
(rule__InterfaceInvokeExpr__Group__0)
{ after(grammarAccess.getInterfaceInvokeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecialInvokeExpr
entryRuleSpecialInvokeExpr 
:
{ before(grammarAccess.getSpecialInvokeExprRule()); }
	 ruleSpecialInvokeExpr
{ after(grammarAccess.getSpecialInvokeExprRule()); } 
	 EOF 
;

// Rule SpecialInvokeExpr
ruleSpecialInvokeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getGroup()); }
(rule__SpecialInvokeExpr__Group__0)
{ after(grammarAccess.getSpecialInvokeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVirtualInvokeExpr
entryRuleVirtualInvokeExpr 
:
{ before(grammarAccess.getVirtualInvokeExprRule()); }
	 ruleVirtualInvokeExpr
{ after(grammarAccess.getVirtualInvokeExprRule()); } 
	 EOF 
;

// Rule VirtualInvokeExpr
ruleVirtualInvokeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getGroup()); }
(rule__VirtualInvokeExpr__Group__0)
{ after(grammarAccess.getVirtualInvokeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalOrWildcard
entryRuleLocalOrWildcard 
:
{ before(grammarAccess.getLocalOrWildcardRule()); }
	 ruleLocalOrWildcard
{ after(grammarAccess.getLocalOrWildcardRule()); } 
	 EOF 
;

// Rule LocalOrWildcard
ruleLocalOrWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalOrWildcardAccess().getAlternatives()); }
(rule__LocalOrWildcard__Alternatives)
{ after(grammarAccess.getLocalOrWildcardAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcard
entryRuleWildcard 
:
{ before(grammarAccess.getWildcardRule()); }
	 ruleWildcard
{ after(grammarAccess.getWildcardRule()); } 
	 EOF 
;

// Rule Wildcard
ruleWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWildcardAccess().getGroup()); }
(rule__Wildcard__Group__0)
{ after(grammarAccess.getWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewArrayExpr
entryRuleNewArrayExpr 
:
{ before(grammarAccess.getNewArrayExprRule()); }
	 ruleNewArrayExpr
{ after(grammarAccess.getNewArrayExprRule()); } 
	 EOF 
;

// Rule NewArrayExpr
ruleNewArrayExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewArrayExprAccess().getGroup()); }
(rule__NewArrayExpr__Group__0)
{ after(grammarAccess.getNewArrayExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewExpr
entryRuleNewExpr 
:
{ before(grammarAccess.getNewExprRule()); }
	 ruleNewExpr
{ after(grammarAccess.getNewExprRule()); } 
	 EOF 
;

// Rule NewExpr
ruleNewExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewExprAccess().getGroup()); }
(rule__NewExpr__Group__0)
{ after(grammarAccess.getNewExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewMultiArrayExpr
entryRuleNewMultiArrayExpr 
:
{ before(grammarAccess.getNewMultiArrayExprRule()); }
	 ruleNewMultiArrayExpr
{ after(grammarAccess.getNewMultiArrayExprRule()); } 
	 EOF 
;

// Rule NewMultiArrayExpr
ruleNewMultiArrayExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getGroup()); }
(rule__NewMultiArrayExpr__Group__0)
{ after(grammarAccess.getNewMultiArrayExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDimension
entryRuleDimension 
:
{ before(grammarAccess.getDimensionRule()); }
	 ruleDimension
{ after(grammarAccess.getDimensionRule()); } 
	 EOF 
;

// Rule Dimension
ruleDimension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDimensionAccess().getGroup()); }
(rule__Dimension__Group__0)
{ after(grammarAccess.getDimensionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnopExpr
entryRuleUnopExpr 
:
{ before(grammarAccess.getUnopExprRule()); }
	 ruleUnopExpr
{ after(grammarAccess.getUnopExprRule()); } 
	 EOF 
;

// Rule UnopExpr
ruleUnopExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnopExprAccess().getAlternatives()); }
(rule__UnopExpr__Alternatives)
{ after(grammarAccess.getUnopExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLengthExpr
entryRuleLengthExpr 
:
{ before(grammarAccess.getLengthExprRule()); }
	 ruleLengthExpr
{ after(grammarAccess.getLengthExprRule()); } 
	 EOF 
;

// Rule LengthExpr
ruleLengthExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLengthExprAccess().getGroup()); }
(rule__LengthExpr__Group__0)
{ after(grammarAccess.getLengthExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegExpr
entryRuleNegExpr 
:
{ before(grammarAccess.getNegExprRule()); }
	 ruleNegExpr
{ after(grammarAccess.getNegExprRule()); } 
	 EOF 
;

// Rule NegExpr
ruleNegExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegExprAccess().getGroup()); }
(rule__NegExpr__Group__0)
{ after(grammarAccess.getNegExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocal
entryRuleLocal 
:
{ before(grammarAccess.getLocalRule()); }
	 ruleLocal
{ after(grammarAccess.getLocalRule()); } 
	 EOF 
;

// Rule Local
ruleLocal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalAccess().getNameAssignment()); }
(rule__Local__NameAssignment)
{ after(grammarAccess.getLocalAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRef
entryRuleRef 
:
{ before(grammarAccess.getRefRule()); }
	 ruleRef
{ after(grammarAccess.getRefRule()); } 
	 EOF 
;

// Rule Ref
ruleRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefAccess().getAlternatives()); }
(rule__Ref__Alternatives)
{ after(grammarAccess.getRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentityRef
entryRuleIdentityRef 
:
{ before(grammarAccess.getIdentityRefRule()); }
	 ruleIdentityRef
{ after(grammarAccess.getIdentityRefRule()); } 
	 EOF 
;

// Rule IdentityRef
ruleIdentityRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentityRefAccess().getAlternatives()); }
(rule__IdentityRef__Alternatives)
{ after(grammarAccess.getIdentityRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterRef
entryRuleParameterRef 
:
{ before(grammarAccess.getParameterRefRule()); }
	 ruleParameterRef
{ after(grammarAccess.getParameterRefRule()); } 
	 EOF 
;

// Rule ParameterRef
ruleParameterRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterRefAccess().getGroup()); }
(rule__ParameterRef__Group__0)
{ after(grammarAccess.getParameterRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThisRef
entryRuleThisRef 
:
{ before(grammarAccess.getThisRefRule()); }
	 ruleThisRef
{ after(grammarAccess.getThisRefRule()); } 
	 EOF 
;

// Rule ThisRef
ruleThisRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThisRefAccess().getGroup()); }
(rule__ThisRef__Group__0)
{ after(grammarAccess.getThisRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCaughtExceptionRef
entryRuleCaughtExceptionRef 
:
{ before(grammarAccess.getCaughtExceptionRefRule()); }
	 ruleCaughtExceptionRef
{ after(grammarAccess.getCaughtExceptionRefRule()); } 
	 EOF 
;

// Rule CaughtExceptionRef
ruleCaughtExceptionRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaughtExceptionRefAccess().getGroup()); }
(rule__CaughtExceptionRef__Group__0)
{ after(grammarAccess.getCaughtExceptionRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcreteRef
entryRuleConcreteRef 
:
{ before(grammarAccess.getConcreteRefRule()); }
	 ruleConcreteRef
{ after(grammarAccess.getConcreteRefRule()); } 
	 EOF 
;

// Rule ConcreteRef
ruleConcreteRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcreteRefAccess().getAlternatives()); }
(rule__ConcreteRef__Alternatives)
{ after(grammarAccess.getConcreteRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayRef
entryRuleArrayRef 
:
{ before(grammarAccess.getArrayRefRule()); }
	 ruleArrayRef
{ after(grammarAccess.getArrayRefRule()); } 
	 EOF 
;

// Rule ArrayRef
ruleArrayRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayRefAccess().getGroup()); }
(rule__ArrayRef__Group__0)
{ after(grammarAccess.getArrayRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldRef
entryRuleFieldRef 
:
{ before(grammarAccess.getFieldRefRule()); }
	 ruleFieldRef
{ after(grammarAccess.getFieldRefRule()); } 
	 EOF 
;

// Rule FieldRef
ruleFieldRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldRefAccess().getAlternatives()); }
(rule__FieldRef__Alternatives)
{ after(grammarAccess.getFieldRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticFieldRef
entryRuleStaticFieldRef 
:
{ before(grammarAccess.getStaticFieldRefRule()); }
	 ruleStaticFieldRef
{ after(grammarAccess.getStaticFieldRefRule()); } 
	 EOF 
;

// Rule StaticFieldRef
ruleStaticFieldRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticFieldRefAccess().getFieldRefAssignment()); }
(rule__StaticFieldRef__FieldRefAssignment)
{ after(grammarAccess.getStaticFieldRefAccess().getFieldRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSootFieldRef
entryRuleSootFieldRef 
:
{ before(grammarAccess.getSootFieldRefRule()); }
	 ruleSootFieldRef
{ after(grammarAccess.getSootFieldRefRule()); } 
	 EOF 
;

// Rule SootFieldRef
ruleSootFieldRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSootFieldRefAccess().getGroup()); }
(rule__SootFieldRef__Group__0)
{ after(grammarAccess.getSootFieldRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceFieldRef
entryRuleInstanceFieldRef 
:
{ before(grammarAccess.getInstanceFieldRefRule()); }
	 ruleInstanceFieldRef
{ after(grammarAccess.getInstanceFieldRefRule()); } 
	 EOF 
;

// Rule InstanceFieldRef
ruleInstanceFieldRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceFieldRefAccess().getGroup()); }
(rule__InstanceFieldRef__Group__0)
{ after(grammarAccess.getInstanceFieldRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getAlternatives()); }
(rule__Constant__Alternatives)
{ after(grammarAccess.getConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassConstant
entryRuleClassConstant 
:
{ before(grammarAccess.getClassConstantRule()); }
	 ruleClassConstant
{ after(grammarAccess.getClassConstantRule()); } 
	 EOF 
;

// Rule ClassConstant
ruleClassConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassConstantAccess().getGroup()); }
(rule__ClassConstant__Group__0)
{ after(grammarAccess.getClassConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameOrWildcard
entryRuleQualifiedNameOrWildcard 
:
{ before(grammarAccess.getQualifiedNameOrWildcardRule()); }
	 ruleQualifiedNameOrWildcard
{ after(grammarAccess.getQualifiedNameOrWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameOrWildcard
ruleQualifiedNameOrWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameOrWildcardAccess().getAlternatives()); }
(rule__QualifiedNameOrWildcard__Alternatives)
{ after(grammarAccess.getQualifiedNameOrWildcardAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWildcard
entryRuleQualifiedNameWildcard 
:
{ before(grammarAccess.getQualifiedNameWildcardRule()); }
	 ruleQualifiedNameWildcard
{ after(grammarAccess.getQualifiedNameWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWildcard
ruleQualifiedNameWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWildcardAccess().getGroup()); }
(rule__QualifiedNameWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullConstant
entryRuleNullConstant 
:
{ before(grammarAccess.getNullConstantRule()); }
	 ruleNullConstant
{ after(grammarAccess.getNullConstantRule()); } 
	 EOF 
;

// Rule NullConstant
ruleNullConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullConstantAccess().getGroup()); }
(rule__NullConstant__Group__0)
{ after(grammarAccess.getNullConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericConstant
entryRuleNumericConstant 
:
{ before(grammarAccess.getNumericConstantRule()); }
	 ruleNumericConstant
{ after(grammarAccess.getNumericConstantRule()); } 
	 EOF 
;

// Rule NumericConstant
ruleNumericConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericConstantAccess().getAlternatives()); }
(rule__NumericConstant__Alternatives)
{ after(grammarAccess.getNumericConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntConstant
entryRuleIntConstant 
:
{ before(grammarAccess.getIntConstantRule()); }
	 ruleIntConstant
{ after(grammarAccess.getIntConstantRule()); } 
	 EOF 
;

// Rule IntConstant
ruleIntConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConstantAccess().getValueAssignment()); }
(rule__IntConstant__ValueAssignment)
{ after(grammarAccess.getIntConstantAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLongConstant
entryRuleLongConstant 
:
{ before(grammarAccess.getLongConstantRule()); }
	 ruleLongConstant
{ after(grammarAccess.getLongConstantRule()); } 
	 EOF 
;

// Rule LongConstant
ruleLongConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLongConstantAccess().getGroup()); }
(rule__LongConstant__Group__0)
{ after(grammarAccess.getLongConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleConstant
entryRuleDoubleConstant 
:
{ before(grammarAccess.getDoubleConstantRule()); }
	 ruleDoubleConstant
{ after(grammarAccess.getDoubleConstantRule()); } 
	 EOF 
;

// Rule DoubleConstant
ruleDoubleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleConstantAccess().getGroup()); }
(rule__DoubleConstant__Group__0)
{ after(grammarAccess.getDoubleConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatConstant
entryRuleFloatConstant 
:
{ before(grammarAccess.getFloatConstantRule()); }
	 ruleFloatConstant
{ after(grammarAccess.getFloatConstantRule()); } 
	 EOF 
;

// Rule FloatConstant
ruleFloatConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatConstantAccess().getGroup()); }
(rule__FloatConstant__Group__0)
{ after(grammarAccess.getFloatConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstant
entryRuleStringConstant 
:
{ before(grammarAccess.getStringConstantRule()); }
	 ruleStringConstant
{ after(grammarAccess.getStringConstantRule()); } 
	 EOF 
;

// Rule StringConstant
ruleStringConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantAccess().getValueAssignment()); }
(rule__StringConstant__ValueAssignment)
{ after(grammarAccess.getStringConstantAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleMethodName
entryRuleMethodName 
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodNameAccess().getGroup()); }
(rule__MethodName__Group__0)
{ after(grammarAccess.getMethodNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameAssignment()); }
(rule__QualifiedName__NameAssignment)
{ after(grammarAccess.getQualifiedNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQName
entryRuleQName 
:
{ before(grammarAccess.getQNameRule()); }
	 ruleQName
{ after(grammarAccess.getQNameRule()); } 
	 EOF 
;

// Rule QName
ruleQName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQNameAccess().getGroup()); }
(rule__QName__Group__0)
{ after(grammarAccess.getQNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Pattern__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getSequencePatternParserRuleCall_0()); }
	ruleSequencePattern
{ after(grammarAccess.getPatternAccess().getSequencePatternParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPatternAccess().getMethodPatternParserRuleCall_1()); }
	ruleMethodPattern
{ after(grammarAccess.getPatternAccess().getMethodPatternParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPatternAccess().getTypePatternParserRuleCall_2()); }
	ruleTypePattern
{ after(grammarAccess.getPatternAccess().getTypePatternParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Replacement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplacementAccess().getSequenceAssignment_0()); }
(rule__Replacement__SequenceAssignment_0)
{ after(grammarAccess.getReplacementAccess().getSequenceAssignment_0()); }
)

    |(
{ before(grammarAccess.getReplacementAccess().getMethodAssignment_1()); }
(rule__Replacement__MethodAssignment_1)
{ after(grammarAccess.getReplacementAccess().getMethodAssignment_1()); }
)

    |(
{ before(grammarAccess.getReplacementAccess().getTypeAssignment_2()); }
(rule__Replacement__TypeAssignment_2)
{ after(grammarAccess.getReplacementAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getClassAssignment_1_0()); }
(rule__Type__ClassAssignment_1_0)
{ after(grammarAccess.getTypeAccess().getClassAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getInterfaceAssignment_1_1()); }
(rule__Type__InterfaceAssignment_1_1)
{ after(grammarAccess.getTypeAccess().getInterfaceAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabelOrStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelOrStatementAccess().getLabelParserRuleCall_0()); }
	ruleLabel
{ after(grammarAccess.getLabelOrStatementAccess().getLabelParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLabelOrStatementAccess().getGroup_1()); }
(rule__LabelOrStatement__Group_1__0)
{ after(grammarAccess.getLabelOrStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakpointStmtParserRuleCall_0()); }
	ruleBreakpointStmt
{ after(grammarAccess.getStatementAccess().getBreakpointStmtParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDefinitionStmtParserRuleCall_1()); }
	ruleDefinitionStmt
{ after(grammarAccess.getStatementAccess().getDefinitionStmtParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGotoStmtParserRuleCall_2()); }
	ruleGotoStmt
{ after(grammarAccess.getStatementAccess().getGotoStmtParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_3()); }
	ruleIfStmt
{ after(grammarAccess.getStatementAccess().getIfStmtParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInvokeStmtParserRuleCall_4()); }
	ruleInvokeStmt
{ after(grammarAccess.getStatementAccess().getInvokeStmtParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLookupSwitchStmtParserRuleCall_5()); }
	ruleLookupSwitchStmt
{ after(grammarAccess.getStatementAccess().getLookupSwitchStmtParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getMonitorStmtParserRuleCall_6()); }
	ruleMonitorStmt
{ after(grammarAccess.getStatementAccess().getMonitorStmtParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getNopStmtParserRuleCall_7()); }
	ruleNopStmt
{ after(grammarAccess.getStatementAccess().getNopStmtParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getRetStmtParserRuleCall_8()); }
	ruleRetStmt
{ after(grammarAccess.getStatementAccess().getRetStmtParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnVoidStmtParserRuleCall_9()); }
	ruleReturnVoidStmt
{ after(grammarAccess.getStatementAccess().getReturnVoidStmtParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_10()); }
	ruleReturnStmt
{ after(grammarAccess.getStatementAccess().getReturnStmtParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTableSwitchStmtParserRuleCall_11()); }
	ruleTableSwitchStmt
{ after(grammarAccess.getStatementAccess().getTableSwitchStmtParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionStmt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionStmtAccess().getAssignStmtParserRuleCall_0()); }
	ruleAssignStmt
{ after(grammarAccess.getDefinitionStmtAccess().getAssignStmtParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDefinitionStmtAccess().getIdentityStmtParserRuleCall_1()); }
	ruleIdentityStmt
{ after(grammarAccess.getDefinitionStmtAccess().getIdentityStmtParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MonitorStmt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonitorStmtAccess().getEnterMonitorStmtParserRuleCall_0()); }
	ruleEnterMonitorStmt
{ after(grammarAccess.getMonitorStmtAccess().getEnterMonitorStmtParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMonitorStmtAccess().getExitMonitorStmtParserRuleCall_1()); }
	ruleExitMonitorStmt
{ after(grammarAccess.getMonitorStmtAccess().getExitMonitorStmtParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNonExprParserRuleCall_0()); }
	ruleNonExpr
{ after(grammarAccess.getValueAccess().getNonExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getExprParserRuleCall_1()); }
	ruleExpr
{ after(grammarAccess.getValueAccess().getExprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonExprAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getNonExprAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonExprAccess().getRefParserRuleCall_1()); }
	ruleRef
{ after(grammarAccess.getNonExprAccess().getRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getAnyNewExprParserRuleCall_0()); }
	ruleAnyNewExpr
{ after(grammarAccess.getExprAccess().getAnyNewExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExprAccess().getBinOpExprParserRuleCall_1()); }
	ruleBinOpExpr
{ after(grammarAccess.getExprAccess().getBinOpExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExprAccess().getCastExprParserRuleCall_2()); }
	ruleCastExpr
{ after(grammarAccess.getExprAccess().getCastExprParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExprAccess().getInstanceOfExprParserRuleCall_3()); }
	ruleInstanceOfExpr
{ after(grammarAccess.getExprAccess().getInstanceOfExprParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExprAccess().getInvokeExprParserRuleCall_4()); }
	ruleInvokeExpr
{ after(grammarAccess.getExprAccess().getInvokeExprParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExprAccess().getUnopExprParserRuleCall_5()); }
	ruleUnopExpr
{ after(grammarAccess.getExprAccess().getUnopExprParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyNewExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyNewExprAccess().getNewArrayExprParserRuleCall_0()); }
	ruleNewArrayExpr
{ after(grammarAccess.getAnyNewExprAccess().getNewArrayExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnyNewExprAccess().getNewExprParserRuleCall_1()); }
	ruleNewExpr
{ after(grammarAccess.getAnyNewExprAccess().getNewExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnyNewExprAccess().getNewMultiArrayExprParserRuleCall_2()); }
	ruleNewMultiArrayExpr
{ after(grammarAccess.getAnyNewExprAccess().getNewMultiArrayExprParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinOpExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinOpExprAccess().getAddExprParserRuleCall_0()); }
	ruleAddExpr
{ after(grammarAccess.getBinOpExprAccess().getAddExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getAndExprParserRuleCall_1()); }
	ruleAndExpr
{ after(grammarAccess.getBinOpExprAccess().getAndExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getCmpExprParserRuleCall_2()); }
	ruleCmpExpr
{ after(grammarAccess.getBinOpExprAccess().getCmpExprParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getCmpgExprParserRuleCall_3()); }
	ruleCmpgExpr
{ after(grammarAccess.getBinOpExprAccess().getCmpgExprParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getCmplExprParserRuleCall_4()); }
	ruleCmplExpr
{ after(grammarAccess.getBinOpExprAccess().getCmplExprParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getConditionalExprParserRuleCall_5()); }
	ruleConditionalExpr
{ after(grammarAccess.getBinOpExprAccess().getConditionalExprParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getDivExprParserRuleCall_6()); }
	ruleDivExpr
{ after(grammarAccess.getBinOpExprAccess().getDivExprParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getMulExprParserRuleCall_7()); }
	ruleMulExpr
{ after(grammarAccess.getBinOpExprAccess().getMulExprParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getOrExprParserRuleCall_8()); }
	ruleOrExpr
{ after(grammarAccess.getBinOpExprAccess().getOrExprParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getRemExprParserRuleCall_9()); }
	ruleRemExpr
{ after(grammarAccess.getBinOpExprAccess().getRemExprParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getShlExprParserRuleCall_10()); }
	ruleShlExpr
{ after(grammarAccess.getBinOpExprAccess().getShlExprParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getShrExprParserRuleCall_11()); }
	ruleShrExpr
{ after(grammarAccess.getBinOpExprAccess().getShrExprParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getSubExprParserRuleCall_12()); }
	ruleSubExpr
{ after(grammarAccess.getBinOpExprAccess().getSubExprParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getUshrExprParserRuleCall_13()); }
	ruleUshrExpr
{ after(grammarAccess.getBinOpExprAccess().getUshrExprParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getBinOpExprAccess().getXorExprParserRuleCall_14()); }
	ruleXorExpr
{ after(grammarAccess.getBinOpExprAccess().getXorExprParserRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExprAccess().getEqExprParserRuleCall_0()); }
	ruleEqExpr
{ after(grammarAccess.getConditionalExprAccess().getEqExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConditionalExprAccess().getGeExprParserRuleCall_1()); }
	ruleGeExpr
{ after(grammarAccess.getConditionalExprAccess().getGeExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConditionalExprAccess().getGtExprParserRuleCall_2()); }
	ruleGtExpr
{ after(grammarAccess.getConditionalExprAccess().getGtExprParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConditionalExprAccess().getLeExprParserRuleCall_3()); }
	ruleLeExpr
{ after(grammarAccess.getConditionalExprAccess().getLeExprParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getConditionalExprAccess().getLtExprParserRuleCall_4()); }
	ruleLtExpr
{ after(grammarAccess.getConditionalExprAccess().getLtExprParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getConditionalExprAccess().getNeExprParserRuleCall_5()); }
	ruleNeExpr
{ after(grammarAccess.getConditionalExprAccess().getNeExprParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InvokeExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeExprAccess().getInstanceInvokeExprParserRuleCall_0()); }
	ruleInstanceInvokeExpr
{ after(grammarAccess.getInvokeExprAccess().getInstanceInvokeExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInvokeExprAccess().getStaticInvokeExprParserRuleCall_1()); }
	ruleStaticInvokeExpr
{ after(grammarAccess.getInvokeExprAccess().getStaticInvokeExprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceInvokeExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceInvokeExprAccess().getInterfaceInvokeExprParserRuleCall_0()); }
	ruleInterfaceInvokeExpr
{ after(grammarAccess.getInstanceInvokeExprAccess().getInterfaceInvokeExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInstanceInvokeExprAccess().getSpecialInvokeExprParserRuleCall_1()); }
	ruleSpecialInvokeExpr
{ after(grammarAccess.getInstanceInvokeExprAccess().getSpecialInvokeExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInstanceInvokeExprAccess().getVirtualInvokeExprParserRuleCall_2()); }
	ruleVirtualInvokeExpr
{ after(grammarAccess.getInstanceInvokeExprAccess().getVirtualInvokeExprParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalOrWildcard__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalOrWildcardAccess().getLocalParserRuleCall_0()); }
	ruleLocal
{ after(grammarAccess.getLocalOrWildcardAccess().getLocalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLocalOrWildcardAccess().getWildcardParserRuleCall_1()); }
	ruleWildcard
{ after(grammarAccess.getLocalOrWildcardAccess().getWildcardParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnopExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnopExprAccess().getLengthExprParserRuleCall_0()); }
	ruleLengthExpr
{ after(grammarAccess.getUnopExprAccess().getLengthExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnopExprAccess().getNegExprParserRuleCall_1()); }
	ruleNegExpr
{ after(grammarAccess.getUnopExprAccess().getNegExprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getConcreteRefParserRuleCall_0()); }
	ruleConcreteRef
{ after(grammarAccess.getRefAccess().getConcreteRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRefAccess().getIdentityRefParserRuleCall_1()); }
	ruleIdentityRef
{ after(grammarAccess.getRefAccess().getIdentityRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRefAccess().getLocalOrWildcardParserRuleCall_2()); }
	ruleLocalOrWildcard
{ after(grammarAccess.getRefAccess().getLocalOrWildcardParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityRefAccess().getParameterRefParserRuleCall_0()); }
	ruleParameterRef
{ after(grammarAccess.getIdentityRefAccess().getParameterRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdentityRefAccess().getThisRefParserRuleCall_1()); }
	ruleThisRef
{ after(grammarAccess.getIdentityRefAccess().getThisRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getIdentityRefAccess().getCaughtExceptionRefParserRuleCall_2()); }
	ruleCaughtExceptionRef
{ after(grammarAccess.getIdentityRefAccess().getCaughtExceptionRefParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcreteRefAccess().getArrayRefParserRuleCall_0()); }
	ruleArrayRef
{ after(grammarAccess.getConcreteRefAccess().getArrayRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConcreteRefAccess().getFieldRefParserRuleCall_1()); }
	ruleFieldRef
{ after(grammarAccess.getConcreteRefAccess().getFieldRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldRefAccess().getStaticFieldRefParserRuleCall_0()); }
	ruleStaticFieldRef
{ after(grammarAccess.getFieldRefAccess().getStaticFieldRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFieldRefAccess().getInstanceFieldRefParserRuleCall_1()); }
	ruleInstanceFieldRef
{ after(grammarAccess.getFieldRefAccess().getInstanceFieldRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getClassConstantParserRuleCall_0()); }
	ruleClassConstant
{ after(grammarAccess.getConstantAccess().getClassConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getNullConstantParserRuleCall_1()); }
	ruleNullConstant
{ after(grammarAccess.getConstantAccess().getNullConstantParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getNumericConstantParserRuleCall_2()); }
	ruleNumericConstant
{ after(grammarAccess.getConstantAccess().getNumericConstantParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getStringConstantParserRuleCall_3()); }
	ruleStringConstant
{ after(grammarAccess.getConstantAccess().getStringConstantParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameOrWildcard__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameOrWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameOrWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getQualifiedNameOrWildcardAccess().getQualifiedNameWildcardParserRuleCall_1()); }
	ruleQualifiedNameWildcard
{ after(grammarAccess.getQualifiedNameOrWildcardAccess().getQualifiedNameWildcardParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericConstant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericConstantAccess().getIntConstantParserRuleCall_0()); }
	ruleIntConstant
{ after(grammarAccess.getNumericConstantAccess().getIntConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumericConstantAccess().getLongConstantParserRuleCall_1()); }
	ruleLongConstant
{ after(grammarAccess.getNumericConstantAccess().getLongConstantParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNumericConstantAccess().getDoubleConstantParserRuleCall_2()); }
	ruleDoubleConstant
{ after(grammarAccess.getNumericConstantAccess().getDoubleConstantParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNumericConstantAccess().getFloatConstantParserRuleCall_3()); }
	ruleFloatConstant
{ after(grammarAccess.getNumericConstantAccess().getFloatConstantParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPackageEnumLiteralDeclaration_0()); }
(	'package' 
)
{ after(grammarAccess.getVisibilityAccess().getPackageEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_1()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2()); }
(	'protected' 
)
{ after(grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_3()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Transformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__0__Impl
	rule__Transformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getTransformationKeyword_0()); }

	'\u00ABtransformation\u00BB' 

{ after(grammarAccess.getTransformationAccess().getTransformationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__1__Impl
	rule__Transformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getReplaceKeyword_1()); }

	'\u00ABreplace\u00BB' 

{ after(grammarAccess.getTransformationAccess().getReplaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__2__Impl
	rule__Transformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getPatternAssignment_2()); }
(rule__Transformation__PatternAssignment_2)
{ after(grammarAccess.getTransformationAccess().getPatternAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__3__Impl
	rule__Transformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getEndKeyword_3()); }

	'\u00ABend\u00BB' 

{ after(grammarAccess.getTransformationAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__4__Impl
	rule__Transformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getByKeyword_4()); }

	'\u00ABby\u00BB' 

{ after(grammarAccess.getTransformationAccess().getByKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__5__Impl
	rule__Transformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getReplacementAssignment_5()); }
(rule__Transformation__ReplacementAssignment_5)
{ after(grammarAccess.getTransformationAccess().getReplacementAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__6__Impl
	rule__Transformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getEndKeyword_6()); }

	'\u00ABend\u00BB' 

{ after(grammarAccess.getTransformationAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transformation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getEndKeyword_7()); }

	'\u00ABend\u00BB' 

{ after(grammarAccess.getTransformationAccess().getEndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getVisibilityAssignment_0()); }
(rule__Type__VisibilityAssignment_0)?
{ after(grammarAccess.getTypeAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives_1()); }
(rule__Type__Alternatives_1)
{ after(grammarAccess.getTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_2()); }
(rule__Type__NameAssignment_2)
{ after(grammarAccess.getTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__3__Impl
	rule__Type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_3()); }
(rule__Type__Group_3__0)?
{ after(grammarAccess.getTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__4__Impl
	rule__Type__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_4()); }
(rule__Type__Group_4__0)?
{ after(grammarAccess.getTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__5__Impl
	rule__Type__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__6__Impl
	rule__Type__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFieldsAssignment_6()); }
(rule__Type__FieldsAssignment_6)*
{ after(grammarAccess.getTypeAccess().getFieldsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__7__Impl
	rule__Type__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMethodsAssignment_7()); }
(rule__Type__MethodsAssignment_7)*
{ after(grammarAccess.getTypeAccess().getMethodsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Type__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__0__Impl
	rule__Type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getTypeAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSuperClassAssignment_3_1()); }
(rule__Type__SuperClassAssignment_3_1)
{ after(grammarAccess.getTypeAccess().getSuperClassAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__0__Impl
	rule__Type__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getImplementsKeyword_4_0()); }

	'implements' 

{ after(grammarAccess.getTypeAccess().getImplementsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__1__Impl
	rule__Type__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getInterfacesAssignment_4_1()); }
(rule__Type__InterfacesAssignment_4_1)
{ after(grammarAccess.getTypeAccess().getInterfacesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_4_2()); }
(rule__Type__Group_4_2__0)*
{ after(grammarAccess.getTypeAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4_2__0__Impl
	rule__Type__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getTypeAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getInterfacesAssignment_4_2_1()); }
(rule__Type__InterfacesAssignment_4_2_1)
{ after(grammarAccess.getTypeAccess().getInterfacesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getVisibilityAssignment_0()); }
(rule__Field__VisibilityAssignment_0)?
{ after(grammarAccess.getFieldAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getStaticAssignment_1()); }
(rule__Field__StaticAssignment_1)
{ after(grammarAccess.getFieldAccess().getStaticAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
(rule__Field__TypeAssignment_2)
{ after(grammarAccess.getFieldAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_3()); }
(rule__Field__NameAssignment_3)
{ after(grammarAccess.getFieldAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getVisibilityAssignment_0()); }
(rule__Method__VisibilityAssignment_0)?
{ after(grammarAccess.getMethodAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getStaticAssignment_1()); }
(rule__Method__StaticAssignment_1)?
{ after(grammarAccess.getMethodAccess().getStaticAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeAssignment_2()); }
(rule__Method__TypeAssignment_2)
{ after(grammarAccess.getMethodAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_3()); }
(rule__Method__NameAssignment_3)
{ after(grammarAccess.getMethodAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_5()); }
(rule__Method__Group_5__0)?
{ after(grammarAccess.getMethodAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyAssignment_7()); }
(rule__Method__BodyAssignment_7)
{ after(grammarAccess.getMethodAccess().getBodyAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Method__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_5__0__Impl
	rule__Method__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersAssignment_5_0()); }
(rule__Method__ParametersAssignment_5_0)
{ after(grammarAccess.getMethodAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_5_1()); }
(rule__Method__Group_5_1__0)*
{ after(grammarAccess.getMethodAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_5_1__0__Impl
	rule__Method__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersAssignment_5_1_1()); }
(rule__Method__ParametersAssignment_5_1_1)
{ after(grammarAccess.getMethodAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getBodyAction_0()); }
(

)
{ after(grammarAccess.getBodyAccess().getBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getDeclarationsAssignment_2()); }
(rule__Body__DeclarationsAssignment_2)*
{ after(grammarAccess.getBodyAccess().getDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__3__Impl
	rule__Body__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getStatementsAssignment_3()); }
(rule__Body__StatementsAssignment_3)*
{ after(grammarAccess.getBodyAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeAssignment_0()); }
(rule__Declaration__TypeAssignment_0)
{ after(grammarAccess.getDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getLocalsAssignment_1()); }
(rule__Declaration__LocalsAssignment_1)
{ after(grammarAccess.getDeclarationAccess().getLocalsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_2()); }
(rule__Declaration__Group_2__0)*
{ after(grammarAccess.getDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__0__Impl
	rule__Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getDeclarationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getLocalsAssignment_2_1()); }
(rule__Declaration__LocalsAssignment_2_1)
{ after(grammarAccess.getDeclarationAccess().getLocalsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LabelOrStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabelOrStatement__Group_1__0__Impl
	rule__LabelOrStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelOrStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelOrStatementAccess().getStatementParserRuleCall_1_0()); }
	ruleStatement
{ after(grammarAccess.getLabelOrStatementAccess().getStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LabelOrStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LabelOrStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabelOrStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelOrStatementAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getLabelOrStatementAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Label__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_0()); }
(rule__Label__NameAssignment_0)
{ after(grammarAccess.getLabelAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getLabelAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BreakpointStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakpointStmt__Group__0__Impl
	rule__BreakpointStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakpointStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakpointStmtAccess().getBreakpointStmtAction_0()); }
(

)
{ after(grammarAccess.getBreakpointStmtAccess().getBreakpointStmtAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakpointStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakpointStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakpointStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakpointStmtAccess().getBreakpointKeyword_1()); }

	'breakpoint' 

{ after(grammarAccess.getBreakpointStmtAccess().getBreakpointKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignStmt__Group__0__Impl
	rule__AssignStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStmtAccess().getLhsAssignment_0()); }
(rule__AssignStmt__LhsAssignment_0)
{ after(grammarAccess.getAssignStmtAccess().getLhsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignStmt__Group__1__Impl
	rule__AssignStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStmtAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignStmtAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStmtAccess().getRhsAssignment_2()); }
(rule__AssignStmt__RhsAssignment_2)
{ after(grammarAccess.getAssignStmtAccess().getRhsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IdentityStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStmt__Group__0__Impl
	rule__IdentityStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStmtAccess().getLhsAssignment_0()); }
(rule__IdentityStmt__LhsAssignment_0)
{ after(grammarAccess.getIdentityStmtAccess().getLhsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentityStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStmt__Group__1__Impl
	rule__IdentityStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStmtAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getIdentityStmtAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentityStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentityStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStmtAccess().getRhsAssignment_2()); }
(rule__IdentityStmt__RhsAssignment_2)
{ after(grammarAccess.getIdentityStmtAccess().getRhsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GotoStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStmt__Group__0__Impl
	rule__GotoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }

	'goto' 

{ after(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStmtAccess().getTargetAssignment_1()); }
(rule__GotoStmt__TargetAssignment_1)
{ after(grammarAccess.getGotoStmtAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getConditionAssignment_1()); }
(rule__IfStmt__ConditionAssignment_1)
{ after(grammarAccess.getIfStmtAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getThenAssignment_2()); }
(rule__IfStmt__ThenAssignment_2)
{ after(grammarAccess.getIfStmtAccess().getThenAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TableSwitchStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__0__Impl
	rule__TableSwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getTableswitchKeyword_0()); }

	'tableswitch' 

{ after(grammarAccess.getTableSwitchStmtAccess().getTableswitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__1__Impl
	rule__TableSwitchStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTableSwitchStmtAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__2__Impl
	rule__TableSwitchStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getKeyAssignment_2()); }
(rule__TableSwitchStmt__KeyAssignment_2)
{ after(grammarAccess.getTableSwitchStmtAccess().getKeyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__3__Impl
	rule__TableSwitchStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTableSwitchStmtAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__4__Impl
	rule__TableSwitchStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getTableSwitchStmtAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__5__Impl
	rule__TableSwitchStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getGroup_5()); }
(rule__TableSwitchStmt__Group_5__0)*
{ after(grammarAccess.getTableSwitchStmtAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__6__Impl
	rule__TableSwitchStmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getDefaultKeyword_6()); }

	'default' 

{ after(grammarAccess.getTableSwitchStmtAccess().getDefaultKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__7__Impl
	rule__TableSwitchStmt__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getColonKeyword_7()); }

	':' 

{ after(grammarAccess.getTableSwitchStmtAccess().getColonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__8__Impl
	rule__TableSwitchStmt__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getDefaultAssignment_8()); }
(rule__TableSwitchStmt__DefaultAssignment_8)
{ after(grammarAccess.getTableSwitchStmtAccess().getDefaultAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__9__Impl
	rule__TableSwitchStmt__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getTableSwitchStmtAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getTableSwitchStmtAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__TableSwitchStmt__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group_5__0__Impl
	rule__TableSwitchStmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getCasesAssignment_5_0()); }
(rule__TableSwitchStmt__CasesAssignment_5_0)
{ after(grammarAccess.getTableSwitchStmtAccess().getCasesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableSwitchStmt__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableSwitchStmt__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getTableSwitchStmtAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LookupSwitchStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LookupSwitchStmt__Group__0__Impl
	rule__LookupSwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupSwitchStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLookupSwitchStmtAccess().getLookupSwitchStmtAction_0()); }
(

)
{ after(grammarAccess.getLookupSwitchStmtAccess().getLookupSwitchStmtAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LookupSwitchStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LookupSwitchStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupSwitchStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLookupSwitchStmtAccess().getLookupswitchKeyword_1()); }

	'lookupswitch' 

{ after(grammarAccess.getLookupSwitchStmtAccess().getLookupswitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnterMonitorStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnterMonitorStmt__Group__0__Impl
	rule__EnterMonitorStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnterMonitorStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnterMonitorStmtAccess().getEntermonitorKeyword_0()); }

	'entermonitor' 

{ after(grammarAccess.getEnterMonitorStmtAccess().getEntermonitorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnterMonitorStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnterMonitorStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnterMonitorStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnterMonitorStmtAccess().getOperandAssignment_1()); }
(rule__EnterMonitorStmt__OperandAssignment_1)
{ after(grammarAccess.getEnterMonitorStmtAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExitMonitorStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitMonitorStmt__Group__0__Impl
	rule__ExitMonitorStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitMonitorStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitMonitorStmtAccess().getExitmonitorKeyword_0()); }

	'exitmonitor' 

{ after(grammarAccess.getExitMonitorStmtAccess().getExitmonitorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitMonitorStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitMonitorStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitMonitorStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitMonitorStmtAccess().getOperandAssignment_1()); }
(rule__ExitMonitorStmt__OperandAssignment_1)
{ after(grammarAccess.getExitMonitorStmtAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NopStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NopStmt__Group__0__Impl
	rule__NopStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NopStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNopStmtAccess().getNopStmtAction_0()); }
(

)
{ after(grammarAccess.getNopStmtAccess().getNopStmtAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NopStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NopStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NopStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNopStmtAccess().getNopKeyword_1()); }

	'nop' 

{ after(grammarAccess.getNopStmtAccess().getNopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RetStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RetStmt__Group__0__Impl
	rule__RetStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RetStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRetStmtAccess().getRetKeyword_0()); }

	'ret' 

{ after(grammarAccess.getRetStmtAccess().getRetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RetStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RetStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RetStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRetStmtAccess().getTargetAssignment_1()); }
(rule__RetStmt__TargetAssignment_1)
{ after(grammarAccess.getRetStmtAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnVoidStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnVoidStmt__Group__0__Impl
	rule__ReturnVoidStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVoidStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnVoidStmtAccess().getReturnVoidStmtAction_0()); }
(

)
{ after(grammarAccess.getReturnVoidStmtAccess().getReturnVoidStmtAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnVoidStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnVoidStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnVoidStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnVoidStmtAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnVoidStmtAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group__0__Impl
	rule__ReturnStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getReturnStmtAccess().getReturnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getOperandAssignment_1()); }
(rule__ReturnStmt__OperandAssignment_1)
{ after(grammarAccess.getReturnStmtAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getValueAssignment_1()); }
(rule__Case__ValueAssignment_1)
{ after(grammarAccess.getCaseAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getCaseAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getTargetAssignment_3()); }
(rule__Case__TargetAssignment_3)
{ after(grammarAccess.getCaseAccess().getTargetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__AddExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpr__Group__0__Impl
	rule__AddExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getLeftOpAssignment_0()); }
(rule__AddExpr__LeftOpAssignment_0)
{ after(grammarAccess.getAddExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpr__Group__1__Impl
	rule__AddExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1()); }

	'+' 

{ after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getRightOpAssignment_2()); }
(rule__AddExpr__RightOpAssignment_2)
{ after(grammarAccess.getAddExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getLeftOpAssignment_0()); }
(rule__AndExpr__LeftOpAssignment_0)
{ after(grammarAccess.getAndExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
	rule__AndExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getAmpersandKeyword_1()); }

	'&' 

{ after(grammarAccess.getAndExprAccess().getAmpersandKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightOpAssignment_2()); }
(rule__AndExpr__RightOpAssignment_2)
{ after(grammarAccess.getAndExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CmpExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpExpr__Group__0__Impl
	rule__CmpExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpExprAccess().getLeftOpAssignment_0()); }
(rule__CmpExpr__LeftOpAssignment_0)
{ after(grammarAccess.getCmpExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpExpr__Group__1__Impl
	rule__CmpExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpExprAccess().getCmpKeyword_1()); }

	'cmp' 

{ after(grammarAccess.getCmpExprAccess().getCmpKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpExprAccess().getRightOpAssignment_2()); }
(rule__CmpExpr__RightOpAssignment_2)
{ after(grammarAccess.getCmpExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CmpgExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpgExpr__Group__0__Impl
	rule__CmpgExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpgExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpgExprAccess().getLeftOpAssignment_0()); }
(rule__CmpgExpr__LeftOpAssignment_0)
{ after(grammarAccess.getCmpgExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpgExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpgExpr__Group__1__Impl
	rule__CmpgExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpgExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpgExprAccess().getCmpgKeyword_1()); }

	'cmpg' 

{ after(grammarAccess.getCmpgExprAccess().getCmpgKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpgExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpgExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpgExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpgExprAccess().getRightOpAssignment_2()); }
(rule__CmpgExpr__RightOpAssignment_2)
{ after(grammarAccess.getCmpgExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CmplExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmplExpr__Group__0__Impl
	rule__CmplExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmplExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmplExprAccess().getLeftOpAssignment_0()); }
(rule__CmplExpr__LeftOpAssignment_0)
{ after(grammarAccess.getCmplExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmplExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmplExpr__Group__1__Impl
	rule__CmplExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CmplExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmplExprAccess().getCmplKeyword_1()); }

	'cmpl' 

{ after(grammarAccess.getCmplExprAccess().getCmplKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmplExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmplExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmplExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmplExprAccess().getRightOpAssignment_2()); }
(rule__CmplExpr__RightOpAssignment_2)
{ after(grammarAccess.getCmplExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DivExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpr__Group__0__Impl
	rule__DivExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExprAccess().getLeftOpAssignment_0()); }
(rule__DivExpr__LeftOpAssignment_0)
{ after(grammarAccess.getDivExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpr__Group__1__Impl
	rule__DivExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExprAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getDivExprAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExprAccess().getRightOpAssignment_2()); }
(rule__DivExpr__RightOpAssignment_2)
{ after(grammarAccess.getDivExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MulExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExpr__Group__0__Impl
	rule__MulExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getLeftOpAssignment_0()); }
(rule__MulExpr__LeftOpAssignment_0)
{ after(grammarAccess.getMulExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExpr__Group__1__Impl
	rule__MulExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getMulExprAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MulExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getRightOpAssignment_2()); }
(rule__MulExpr__RightOpAssignment_2)
{ after(grammarAccess.getMulExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getLeftOpAssignment_0()); }
(rule__OrExpr__LeftOpAssignment_0)
{ after(grammarAccess.getOrExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__1__Impl
	rule__OrExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getVerticalLineKeyword_1()); }

	'|' 

{ after(grammarAccess.getOrExprAccess().getVerticalLineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightOpAssignment_2()); }
(rule__OrExpr__RightOpAssignment_2)
{ after(grammarAccess.getOrExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RemExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpr__Group__0__Impl
	rule__RemExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExprAccess().getLeftOpAssignment_0()); }
(rule__RemExpr__LeftOpAssignment_0)
{ after(grammarAccess.getRemExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpr__Group__1__Impl
	rule__RemExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExprAccess().getPercentSignKeyword_1()); }

	'%' 

{ after(grammarAccess.getRemExprAccess().getPercentSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExprAccess().getRightOpAssignment_2()); }
(rule__RemExpr__RightOpAssignment_2)
{ after(grammarAccess.getRemExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ShlExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShlExpr__Group__0__Impl
	rule__ShlExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShlExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShlExprAccess().getLeftOpAssignment_0()); }
(rule__ShlExpr__LeftOpAssignment_0)
{ after(grammarAccess.getShlExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShlExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShlExpr__Group__1__Impl
	rule__ShlExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShlExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShlExprAccess().getLessThanSignLessThanSignKeyword_1()); }

	'<<' 

{ after(grammarAccess.getShlExprAccess().getLessThanSignLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShlExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShlExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShlExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShlExprAccess().getRightOpAssignment_2()); }
(rule__ShlExpr__RightOpAssignment_2)
{ after(grammarAccess.getShlExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ShrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShrExpr__Group__0__Impl
	rule__ShrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShrExprAccess().getLeftOpAssignment_0()); }
(rule__ShrExpr__LeftOpAssignment_0)
{ after(grammarAccess.getShrExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShrExpr__Group__1__Impl
	rule__ShrExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShrExprAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }

	'>>' 

{ after(grammarAccess.getShrExprAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShrExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShrExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShrExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShrExprAccess().getRightOpAssignment_2()); }
(rule__ShrExpr__RightOpAssignment_2)
{ after(grammarAccess.getShrExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpr__Group__0__Impl
	rule__SubExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExprAccess().getLeftOpAssignment_0()); }
(rule__SubExpr__LeftOpAssignment_0)
{ after(grammarAccess.getSubExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpr__Group__1__Impl
	rule__SubExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSubExprAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExprAccess().getRightOpAssignment_2()); }
(rule__SubExpr__RightOpAssignment_2)
{ after(grammarAccess.getSubExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UshrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UshrExpr__Group__0__Impl
	rule__UshrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UshrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUshrExprAccess().getLeftOpAssignment_0()); }
(rule__UshrExpr__LeftOpAssignment_0)
{ after(grammarAccess.getUshrExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UshrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UshrExpr__Group__1__Impl
	rule__UshrExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UshrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUshrExprAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1()); }

	'>>>' 

{ after(grammarAccess.getUshrExprAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UshrExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UshrExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UshrExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUshrExprAccess().getRightOpAssignment_2()); }
(rule__UshrExpr__RightOpAssignment_2)
{ after(grammarAccess.getUshrExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XorExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group__0__Impl
	rule__XorExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getLeftOpAssignment_0()); }
(rule__XorExpr__LeftOpAssignment_0)
{ after(grammarAccess.getXorExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group__1__Impl
	rule__XorExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getCircumflexAccentKeyword_1()); }

	'^' 

{ after(grammarAccess.getXorExprAccess().getCircumflexAccentKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getRightOpAssignment_2()); }
(rule__XorExpr__RightOpAssignment_2)
{ after(grammarAccess.getXorExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EqExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqExpr__Group__0__Impl
	rule__EqExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getLeftOpAssignment_0()); }
(rule__EqExpr__LeftOpAssignment_0)
{ after(grammarAccess.getEqExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqExpr__Group__1__Impl
	rule__EqExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getEqualsSignEqualsSignKeyword_1()); }

	'==' 

{ after(grammarAccess.getEqExprAccess().getEqualsSignEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getRightOpAssignment_2()); }
(rule__EqExpr__RightOpAssignment_2)
{ after(grammarAccess.getEqExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeExpr__Group__0__Impl
	rule__GeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeExprAccess().getLeftOpAssignment_0()); }
(rule__GeExpr__LeftOpAssignment_0)
{ after(grammarAccess.getGeExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeExpr__Group__1__Impl
	rule__GeExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeExprAccess().getGreaterThanSignEqualsSignKeyword_1()); }

	'>=' 

{ after(grammarAccess.getGeExprAccess().getGreaterThanSignEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeExprAccess().getRightOpAssignment_2()); }
(rule__GeExpr__RightOpAssignment_2)
{ after(grammarAccess.getGeExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GtExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GtExpr__Group__0__Impl
	rule__GtExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GtExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGtExprAccess().getLeftOpAssignment_0()); }
(rule__GtExpr__LeftOpAssignment_0)
{ after(grammarAccess.getGtExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GtExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GtExpr__Group__1__Impl
	rule__GtExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GtExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGtExprAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getGtExprAccess().getGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GtExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GtExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GtExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGtExprAccess().getRightOpAssignment_2()); }
(rule__GtExpr__RightOpAssignment_2)
{ after(grammarAccess.getGtExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeExpr__Group__0__Impl
	rule__LeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeExprAccess().getLeftOpAssignment_0()); }
(rule__LeExpr__LeftOpAssignment_0)
{ after(grammarAccess.getLeExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeExpr__Group__1__Impl
	rule__LeExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeExprAccess().getLessThanSignEqualsSignKeyword_1()); }

	'<=' 

{ after(grammarAccess.getLeExprAccess().getLessThanSignEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LeExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LeExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeExprAccess().getRightOpAssignment_2()); }
(rule__LeExpr__RightOpAssignment_2)
{ after(grammarAccess.getLeExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LtExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtExpr__Group__0__Impl
	rule__LtExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LtExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtExprAccess().getLeftOpAssignment_0()); }
(rule__LtExpr__LeftOpAssignment_0)
{ after(grammarAccess.getLtExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LtExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtExpr__Group__1__Impl
	rule__LtExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LtExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtExprAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getLtExprAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LtExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LtExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LtExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtExprAccess().getRightOpAssignment_2()); }
(rule__LtExpr__RightOpAssignment_2)
{ after(grammarAccess.getLtExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NeExpr__Group__0__Impl
	rule__NeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNeExprAccess().getLeftOpAssignment_0()); }
(rule__NeExpr__LeftOpAssignment_0)
{ after(grammarAccess.getNeExprAccess().getLeftOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NeExpr__Group__1__Impl
	rule__NeExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNeExprAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getNeExprAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NeExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NeExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNeExprAccess().getRightOpAssignment_2()); }
(rule__NeExpr__RightOpAssignment_2)
{ after(grammarAccess.getNeExprAccess().getRightOpAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CastExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpr__Group__0__Impl
	rule__CastExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExprAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getCastExprAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpr__Group__1__Impl
	rule__CastExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExprAccess().getTypeAssignment_1()); }
(rule__CastExpr__TypeAssignment_1)
{ after(grammarAccess.getCastExprAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpr__Group__2__Impl
	rule__CastExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExprAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCastExprAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExprAccess().getOperandAssignment_3()); }
(rule__CastExpr__OperandAssignment_3)
{ after(grammarAccess.getCastExprAccess().getOperandAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InstanceOfExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group__0__Impl
	rule__InstanceOfExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getOperandAssignment_0()); }
(rule__InstanceOfExpr__OperandAssignment_0)
{ after(grammarAccess.getInstanceOfExprAccess().getOperandAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group__1__Impl
	rule__InstanceOfExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getInstanceofKeyword_1()); }

	'instanceof' 

{ after(grammarAccess.getInstanceOfExprAccess().getInstanceofKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getTypeAssignment_2()); }
(rule__InstanceOfExpr__TypeAssignment_2)
{ after(grammarAccess.getInstanceOfExprAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SootMethodRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__0__Impl
	rule__SootMethodRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getSootMethodRefAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__1__Impl
	rule__SootMethodRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getClassAssignment_1()); }
(rule__SootMethodRef__ClassAssignment_1)
{ after(grammarAccess.getSootMethodRefAccess().getClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__2__Impl
	rule__SootMethodRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSootMethodRefAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__3__Impl
	rule__SootMethodRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getTypeAssignment_3()); }
(rule__SootMethodRef__TypeAssignment_3)
{ after(grammarAccess.getSootMethodRefAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__4__Impl
	rule__SootMethodRef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getNameAssignment_4()); }
(rule__SootMethodRef__NameAssignment_4)
{ after(grammarAccess.getSootMethodRefAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__5__Impl
	rule__SootMethodRef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getSootMethodRefAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__6__Impl
	rule__SootMethodRef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getGroup_6()); }
(rule__SootMethodRef__Group_6__0)?
{ after(grammarAccess.getSootMethodRefAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__7__Impl
	rule__SootMethodRef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getSootMethodRefAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getGreaterThanSignKeyword_8()); }

	'>' 

{ after(grammarAccess.getSootMethodRefAccess().getGreaterThanSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__SootMethodRef__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group_6__0__Impl
	rule__SootMethodRef__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getParametersAssignment_6_0()); }
(rule__SootMethodRef__ParametersAssignment_6_0)
{ after(grammarAccess.getSootMethodRefAccess().getParametersAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getGroup_6_1()); }
(rule__SootMethodRef__Group_6_1__0)*
{ after(grammarAccess.getSootMethodRefAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SootMethodRef__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group_6_1__0__Impl
	rule__SootMethodRef__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getSootMethodRefAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootMethodRef__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootMethodRef__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getParametersAssignment_6_1_1()); }
(rule__SootMethodRef__ParametersAssignment_6_1_1)
{ after(grammarAccess.getSootMethodRefAccess().getParametersAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticInvokeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group__0__Impl
	rule__StaticInvokeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getStaticInvokeExprAction_0()); }
(

)
{ after(grammarAccess.getStaticInvokeExprAccess().getStaticInvokeExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInvokeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group__1__Impl
	rule__StaticInvokeExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getStaticinvokeKeyword_1()); }

	'staticinvoke' 

{ after(grammarAccess.getStaticInvokeExprAccess().getStaticinvokeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInvokeExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group__2__Impl
	rule__StaticInvokeExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getMethodAssignment_2()); }
(rule__StaticInvokeExpr__MethodAssignment_2)
{ after(grammarAccess.getStaticInvokeExprAccess().getMethodAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInvokeExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group__3__Impl
	rule__StaticInvokeExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getStaticInvokeExprAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInvokeExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group__4__Impl
	rule__StaticInvokeExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getGroup_4()); }
(rule__StaticInvokeExpr__Group_4__0)?
{ after(grammarAccess.getStaticInvokeExprAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInvokeExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getStaticInvokeExprAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StaticInvokeExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group_4__0__Impl
	rule__StaticInvokeExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getParametersAssignment_4_0()); }
(rule__StaticInvokeExpr__ParametersAssignment_4_0)
{ after(grammarAccess.getStaticInvokeExprAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInvokeExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getGroup_4_1()); }
(rule__StaticInvokeExpr__Group_4_1__0)*
{ after(grammarAccess.getStaticInvokeExprAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StaticInvokeExpr__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group_4_1__0__Impl
	rule__StaticInvokeExpr__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getStaticInvokeExprAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInvokeExpr__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StaticInvokeExpr__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getParametersAssignment_4_1_1()); }
(rule__StaticInvokeExpr__ParametersAssignment_4_1_1)
{ after(grammarAccess.getStaticInvokeExprAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceInvokeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group__0__Impl
	rule__InterfaceInvokeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getInterfaceinvokeKeyword_0()); }

	'interfaceinvoke' 

{ after(grammarAccess.getInterfaceInvokeExprAccess().getInterfaceinvokeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group__1__Impl
	rule__InterfaceInvokeExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getBaseAssignment_1()); }
(rule__InterfaceInvokeExpr__BaseAssignment_1)
{ after(grammarAccess.getInterfaceInvokeExprAccess().getBaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group__2__Impl
	rule__InterfaceInvokeExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getInterfaceInvokeExprAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group__3__Impl
	rule__InterfaceInvokeExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getMethodAssignment_3()); }
(rule__InterfaceInvokeExpr__MethodAssignment_3)
{ after(grammarAccess.getInterfaceInvokeExprAccess().getMethodAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group__4__Impl
	rule__InterfaceInvokeExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getInterfaceInvokeExprAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group__5__Impl
	rule__InterfaceInvokeExpr__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getGroup_5()); }
(rule__InterfaceInvokeExpr__Group_5__0)?
{ after(grammarAccess.getInterfaceInvokeExprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getInterfaceInvokeExprAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__InterfaceInvokeExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group_5__0__Impl
	rule__InterfaceInvokeExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getParametersAssignment_5_0()); }
(rule__InterfaceInvokeExpr__ParametersAssignment_5_0)
{ after(grammarAccess.getInterfaceInvokeExprAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getGroup_5_1()); }
(rule__InterfaceInvokeExpr__Group_5_1__0)*
{ after(grammarAccess.getInterfaceInvokeExprAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceInvokeExpr__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group_5_1__0__Impl
	rule__InterfaceInvokeExpr__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getInterfaceInvokeExprAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceInvokeExpr__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceInvokeExpr__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getParametersAssignment_5_1_1()); }
(rule__InterfaceInvokeExpr__ParametersAssignment_5_1_1)
{ after(grammarAccess.getInterfaceInvokeExprAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecialInvokeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group__0__Impl
	rule__SpecialInvokeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getSpecialinvokeKeyword_0()); }

	'specialinvoke' 

{ after(grammarAccess.getSpecialInvokeExprAccess().getSpecialinvokeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group__1__Impl
	rule__SpecialInvokeExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getBaseAssignment_1()); }
(rule__SpecialInvokeExpr__BaseAssignment_1)
{ after(grammarAccess.getSpecialInvokeExprAccess().getBaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group__2__Impl
	rule__SpecialInvokeExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getSpecialInvokeExprAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group__3__Impl
	rule__SpecialInvokeExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getMethodAssignment_3()); }
(rule__SpecialInvokeExpr__MethodAssignment_3)
{ after(grammarAccess.getSpecialInvokeExprAccess().getMethodAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group__4__Impl
	rule__SpecialInvokeExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getSpecialInvokeExprAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group__5__Impl
	rule__SpecialInvokeExpr__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getGroup_5()); }
(rule__SpecialInvokeExpr__Group_5__0)?
{ after(grammarAccess.getSpecialInvokeExprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getSpecialInvokeExprAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SpecialInvokeExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group_5__0__Impl
	rule__SpecialInvokeExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getParametersAssignment_5_0()); }
(rule__SpecialInvokeExpr__ParametersAssignment_5_0)
{ after(grammarAccess.getSpecialInvokeExprAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getGroup_5_1()); }
(rule__SpecialInvokeExpr__Group_5_1__0)*
{ after(grammarAccess.getSpecialInvokeExprAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecialInvokeExpr__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group_5_1__0__Impl
	rule__SpecialInvokeExpr__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getSpecialInvokeExprAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecialInvokeExpr__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecialInvokeExpr__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getParametersAssignment_5_1_1()); }
(rule__SpecialInvokeExpr__ParametersAssignment_5_1_1)
{ after(grammarAccess.getSpecialInvokeExprAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VirtualInvokeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group__0__Impl
	rule__VirtualInvokeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getVirtualinvokeKeyword_0()); }

	'virtualinvoke' 

{ after(grammarAccess.getVirtualInvokeExprAccess().getVirtualinvokeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group__1__Impl
	rule__VirtualInvokeExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getBaseAssignment_1()); }
(rule__VirtualInvokeExpr__BaseAssignment_1)
{ after(grammarAccess.getVirtualInvokeExprAccess().getBaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group__2__Impl
	rule__VirtualInvokeExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getVirtualInvokeExprAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group__3__Impl
	rule__VirtualInvokeExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getMethodAssignment_3()); }
(rule__VirtualInvokeExpr__MethodAssignment_3)
{ after(grammarAccess.getVirtualInvokeExprAccess().getMethodAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group__4__Impl
	rule__VirtualInvokeExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getVirtualInvokeExprAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group__5__Impl
	rule__VirtualInvokeExpr__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getGroup_5()); }
(rule__VirtualInvokeExpr__Group_5__0)?
{ after(grammarAccess.getVirtualInvokeExprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getVirtualInvokeExprAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__VirtualInvokeExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group_5__0__Impl
	rule__VirtualInvokeExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getParametersAssignment_5_0()); }
(rule__VirtualInvokeExpr__ParametersAssignment_5_0)
{ after(grammarAccess.getVirtualInvokeExprAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getGroup_5_1()); }
(rule__VirtualInvokeExpr__Group_5_1__0)*
{ after(grammarAccess.getVirtualInvokeExprAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VirtualInvokeExpr__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group_5_1__0__Impl
	rule__VirtualInvokeExpr__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getVirtualInvokeExprAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualInvokeExpr__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualInvokeExpr__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getParametersAssignment_5_1_1()); }
(rule__VirtualInvokeExpr__ParametersAssignment_5_1_1)
{ after(grammarAccess.getVirtualInvokeExprAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Wildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group__0__Impl
	rule__Wildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getLeftPointingDoubleAngleQuotationMarkKeyword_0()); }

	'\u00AB' 

{ after(grammarAccess.getWildcardAccess().getLeftPointingDoubleAngleQuotationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group__1__Impl
	rule__Wildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getNameAssignment_1()); }
(rule__Wildcard__NameAssignment_1)
{ after(grammarAccess.getWildcardAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getRightPointingDoubleAngleQuotationMarkKeyword_2()); }

	'\u00BB' 

{ after(grammarAccess.getWildcardAccess().getRightPointingDoubleAngleQuotationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NewArrayExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewArrayExpr__Group__0__Impl
	rule__NewArrayExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewArrayExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewArrayExprAccess().getNewarrayKeyword_0()); }

	'newarray' 

{ after(grammarAccess.getNewArrayExprAccess().getNewarrayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewArrayExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewArrayExpr__Group__1__Impl
	rule__NewArrayExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewArrayExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewArrayExprAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getNewArrayExprAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewArrayExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewArrayExpr__Group__2__Impl
	rule__NewArrayExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewArrayExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewArrayExprAccess().getTypeAssignment_2()); }
(rule__NewArrayExpr__TypeAssignment_2)
{ after(grammarAccess.getNewArrayExprAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewArrayExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewArrayExpr__Group__3__Impl
	rule__NewArrayExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewArrayExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewArrayExprAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getNewArrayExprAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewArrayExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewArrayExpr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewArrayExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewArrayExprAccess().getSizeAssignment_4()); }
(rule__NewArrayExpr__SizeAssignment_4)
{ after(grammarAccess.getNewArrayExprAccess().getSizeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NewExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewExpr__Group__0__Impl
	rule__NewExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewExprAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getNewExprAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewExprAccess().getTypeAssignment_1()); }
(rule__NewExpr__TypeAssignment_1)
{ after(grammarAccess.getNewExprAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NewMultiArrayExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMultiArrayExpr__Group__0__Impl
	rule__NewMultiArrayExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getNewmultiarrayKeyword_0()); }

	'newmultiarray' 

{ after(grammarAccess.getNewMultiArrayExprAccess().getNewmultiarrayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMultiArrayExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMultiArrayExpr__Group__1__Impl
	rule__NewMultiArrayExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getNewMultiArrayExprAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMultiArrayExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMultiArrayExpr__Group__2__Impl
	rule__NewMultiArrayExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getTypeAssignment_2()); }
(rule__NewMultiArrayExpr__TypeAssignment_2)
{ after(grammarAccess.getNewMultiArrayExprAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMultiArrayExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMultiArrayExpr__Group__3__Impl
	rule__NewMultiArrayExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getNewMultiArrayExprAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMultiArrayExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMultiArrayExpr__Group__4__Impl
	rule__NewMultiArrayExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getSizeAssignment_4()); }
(rule__NewMultiArrayExpr__SizeAssignment_4)*
{ after(grammarAccess.getNewMultiArrayExprAccess().getSizeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMultiArrayExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMultiArrayExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getEmptySizeAssignment_5()); }
(rule__NewMultiArrayExpr__EmptySizeAssignment_5)*
{ after(grammarAccess.getNewMultiArrayExprAccess().getEmptySizeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Dimension__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group__0__Impl
	rule__Dimension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getDimensionAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group__1__Impl
	rule__Dimension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getSizeAssignment_1()); }
(rule__Dimension__SizeAssignment_1)
{ after(grammarAccess.getDimensionAccess().getSizeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getDimensionAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LengthExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthExpr__Group__0__Impl
	rule__LengthExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthExprAccess().getLengthofKeyword_0()); }

	'lengthof' 

{ after(grammarAccess.getLengthExprAccess().getLengthofKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LengthExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LengthExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LengthExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthExprAccess().getOperandAssignment_1()); }
(rule__LengthExpr__OperandAssignment_1)
{ after(grammarAccess.getLengthExprAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NegExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpr__Group__0__Impl
	rule__NegExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExprAccess().getNegKeyword_0()); }

	'neg' 

{ after(grammarAccess.getNegExprAccess().getNegKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExprAccess().getOperandAssignment_1()); }
(rule__NegExpr__OperandAssignment_1)
{ after(grammarAccess.getNegExprAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterRef__Group__0__Impl
	rule__ParameterRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterRefAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getParameterRefAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterRef__Group__1__Impl
	rule__ParameterRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterRefAccess().getNameAssignment_1()); }
(rule__ParameterRef__NameAssignment_1)
{ after(grammarAccess.getParameterRefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterRef__Group__2__Impl
	rule__ParameterRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterRefAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getParameterRefAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterRefAccess().getTypeAssignment_3()); }
(rule__ParameterRef__TypeAssignment_3)
{ after(grammarAccess.getParameterRefAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ThisRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisRef__Group__0__Impl
	rule__ThisRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisRefAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getThisRefAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisRef__Group__1__Impl
	rule__ThisRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisRefAccess().getThisKeyword_1()); }

	'this' 

{ after(grammarAccess.getThisRefAccess().getThisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisRef__Group__2__Impl
	rule__ThisRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisRefAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getThisRefAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisRefAccess().getTypeAssignment_3()); }
(rule__ThisRef__TypeAssignment_3)
{ after(grammarAccess.getThisRefAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CaughtExceptionRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaughtExceptionRef__Group__0__Impl
	rule__CaughtExceptionRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaughtExceptionRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaughtExceptionRefAccess().getCaughtExceptionRefAction_0()); }
(

)
{ after(grammarAccess.getCaughtExceptionRefAccess().getCaughtExceptionRefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaughtExceptionRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaughtExceptionRef__Group__1__Impl
	rule__CaughtExceptionRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaughtExceptionRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaughtExceptionRefAccess().getCommercialAtKeyword_1()); }

	'@' 

{ after(grammarAccess.getCaughtExceptionRefAccess().getCommercialAtKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CaughtExceptionRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CaughtExceptionRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaughtExceptionRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaughtExceptionRefAccess().getCaughtexceptionKeyword_2()); }

	'caughtexception' 

{ after(grammarAccess.getCaughtExceptionRefAccess().getCaughtexceptionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArrayRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRef__Group__0__Impl
	rule__ArrayRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRefAccess().getBaseAssignment_0()); }
(rule__ArrayRef__BaseAssignment_0)
{ after(grammarAccess.getArrayRefAccess().getBaseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRef__Group__1__Impl
	rule__ArrayRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRefAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayRefAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRef__Group__2__Impl
	rule__ArrayRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRefAccess().getIndexAssignment_2()); }
(rule__ArrayRef__IndexAssignment_2)
{ after(grammarAccess.getArrayRefAccess().getIndexAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRefAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayRefAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SootFieldRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootFieldRef__Group__0__Impl
	rule__SootFieldRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getSootFieldRefAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootFieldRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootFieldRef__Group__1__Impl
	rule__SootFieldRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getClassAssignment_1()); }
(rule__SootFieldRef__ClassAssignment_1)
{ after(grammarAccess.getSootFieldRefAccess().getClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootFieldRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootFieldRef__Group__2__Impl
	rule__SootFieldRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSootFieldRefAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootFieldRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootFieldRef__Group__3__Impl
	rule__SootFieldRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getTypeAssignment_3()); }
(rule__SootFieldRef__TypeAssignment_3)
{ after(grammarAccess.getSootFieldRefAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootFieldRef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootFieldRef__Group__4__Impl
	rule__SootFieldRef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getNameAssignment_4()); }
(rule__SootFieldRef__NameAssignment_4)
{ after(grammarAccess.getSootFieldRefAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SootFieldRef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SootFieldRef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getGreaterThanSignKeyword_5()); }

	'>' 

{ after(grammarAccess.getSootFieldRefAccess().getGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InstanceFieldRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceFieldRef__Group__0__Impl
	rule__InstanceFieldRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceFieldRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceFieldRefAccess().getBaseAssignment_0()); }
(rule__InstanceFieldRef__BaseAssignment_0)
{ after(grammarAccess.getInstanceFieldRefAccess().getBaseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceFieldRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceFieldRef__Group__1__Impl
	rule__InstanceFieldRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceFieldRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceFieldRefAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getInstanceFieldRefAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceFieldRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceFieldRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceFieldRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceFieldRefAccess().getFieldRefAssignment_2()); }
(rule__InstanceFieldRef__FieldRefAssignment_2)
{ after(grammarAccess.getInstanceFieldRefAccess().getFieldRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassConstant__Group__0__Impl
	rule__ClassConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassConstantAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassConstantAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassConstantAccess().getNameAssignment_1()); }
(rule__ClassConstant__NameAssignment_1)
{ after(grammarAccess.getClassConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWildcard__Group__0__Impl
	rule__QualifiedNameWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWildcardAccess().getLeftPointingDoubleAngleQuotationMarkKeyword_0()); }

	'\u00AB' 

{ after(grammarAccess.getQualifiedNameWildcardAccess().getLeftPointingDoubleAngleQuotationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWildcard__Group__1__Impl
	rule__QualifiedNameWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWildcardAccess().getNameAssignment_1()); }
(rule__QualifiedNameWildcard__NameAssignment_1)
{ after(grammarAccess.getQualifiedNameWildcardAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWildcardAccess().getRightPointingDoubleAngleQuotationMarkKeyword_2()); }

	'\u00BB' 

{ after(grammarAccess.getQualifiedNameWildcardAccess().getRightPointingDoubleAngleQuotationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NullConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullConstant__Group__0__Impl
	rule__NullConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullConstantAccess().getNullConstantAction_0()); }
(

)
{ after(grammarAccess.getNullConstantAccess().getNullConstantAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullConstantAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullConstantAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LongConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LongConstant__Group__0__Impl
	rule__LongConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LongConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLongConstantAccess().getValueAssignment_0()); }
(rule__LongConstant__ValueAssignment_0)
{ after(grammarAccess.getLongConstantAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LongConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LongConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LongConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLongConstantAccess().getLKeyword_1()); }

	'L' 

{ after(grammarAccess.getLongConstantAccess().getLKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoubleConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleConstant__Group__0__Impl
	rule__DoubleConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstantAccess().getValueAssignment_0()); }
(rule__DoubleConstant__ValueAssignment_0)
{ after(grammarAccess.getDoubleConstantAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstantAccess().getDKeyword_1()); }

	'D' 

{ after(grammarAccess.getDoubleConstantAccess().getDKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FloatConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatConstant__Group__0__Impl
	rule__FloatConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatConstantAccess().getValueAssignment_0()); }
(rule__FloatConstant__ValueAssignment_0)
{ after(grammarAccess.getFloatConstantAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FloatConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FloatConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatConstantAccess().getFKeyword_1()); }

	'F' 

{ after(grammarAccess.getFloatConstantAccess().getFKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__0__Impl
	rule__MethodName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getLessThanSignKeyword_0()); }
(
	'<' 
)?
{ after(grammarAccess.getMethodNameAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__1__Impl
	rule__MethodName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getGreaterThanSignKeyword_2()); }
(
	'>' 
)?
{ after(grammarAccess.getMethodNameAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group__0__Impl
	rule__QName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getGroup_1()); }
(rule__QName__Group_1__0)*
{ after(grammarAccess.getQNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group_1__0__Impl
	rule__QName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Transformation__PatternAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getPatternPatternParserRuleCall_2_0()); }
	rulePattern{ after(grammarAccess.getTransformationAccess().getPatternPatternParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__ReplacementAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationAccess().getReplacementReplacementParserRuleCall_5_0()); }
	ruleReplacement{ after(grammarAccess.getTransformationAccess().getReplacementReplacementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequencePattern__SequenceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequencePatternAccess().getSequenceStatementSequenceParserRuleCall_0()); }
	ruleStatementSequence{ after(grammarAccess.getSequencePatternAccess().getSequenceStatementSequenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPattern__MethodAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternAccess().getMethodMethodParserRuleCall_0()); }
	ruleMethod{ after(grammarAccess.getMethodPatternAccess().getMethodMethodParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePattern__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePatternAccess().getTypeTypeParserRuleCall_0()); }
	ruleType{ after(grammarAccess.getTypePatternAccess().getTypeTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Replacement__SequenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplacementAccess().getSequenceStatementSequenceParserRuleCall_0_0()); }
	ruleStatementSequence{ after(grammarAccess.getReplacementAccess().getSequenceStatementSequenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Replacement__MethodAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplacementAccess().getMethodMethodParserRuleCall_1_0()); }
	ruleMethod{ after(grammarAccess.getReplacementAccess().getMethodMethodParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Replacement__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplacementAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getReplacementAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getTypeAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ClassAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getClassClassKeyword_1_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getClassClassKeyword_1_0_0()); }

	'class' 

{ after(grammarAccess.getTypeAccess().getClassClassKeyword_1_0_0()); }
)

{ after(grammarAccess.getTypeAccess().getClassClassKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__InterfaceAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getInterfaceInterfaceKeyword_1_1_0()); }
(
{ before(grammarAccess.getTypeAccess().getInterfaceInterfaceKeyword_1_1_0()); }

	'interface' 

{ after(grammarAccess.getTypeAccess().getInterfaceInterfaceKeyword_1_1_0()); }
)

{ after(grammarAccess.getTypeAccess().getInterfaceInterfaceKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getTypeAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SuperClassAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSuperClassQualifiedNameParserRuleCall_3_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTypeAccess().getSuperClassQualifiedNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__InterfacesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getInterfacesQualifiedNameParserRuleCall_4_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTypeAccess().getInterfacesQualifiedNameParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__InterfacesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getInterfacesQualifiedNameParserRuleCall_4_2_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTypeAccess().getInterfacesQualifiedNameParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__FieldsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFieldsFieldParserRuleCall_6_0()); }
	ruleField{ after(grammarAccess.getTypeAccess().getFieldsFieldParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__MethodsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getMethodsMethodParserRuleCall_7_0()); }
	ruleMethod{ after(grammarAccess.getTypeAccess().getMethodsMethodParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getFieldAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__StaticAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getStaticStaticKeyword_1_0()); }
(
{ before(grammarAccess.getFieldAccess().getStaticStaticKeyword_1_0()); }

	'static' 

{ after(grammarAccess.getFieldAccess().getStaticStaticKeyword_1_0()); }
)

{ after(grammarAccess.getFieldAccess().getStaticStaticKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getFieldAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getMethodAccess().getVisibilityVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__StaticAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getStaticStaticKeyword_1_0()); }
(
{ before(grammarAccess.getMethodAccess().getStaticStaticKeyword_1_0()); }

	'static' 

{ after(grammarAccess.getMethodAccess().getStaticStaticKeyword_1_0()); }
)

{ after(grammarAccess.getMethodAccess().getStaticStaticKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getTypeIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameMethodNameParserRuleCall_3_0()); }
	ruleMethodName{ after(grammarAccess.getMethodAccess().getNameMethodNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersQualifiedNameParserRuleCall_5_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getMethodAccess().getParametersQualifiedNameParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParametersQualifiedNameParserRuleCall_5_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getMethodAccess().getParametersQualifiedNameParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BodyAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyBodyParserRuleCall_7_0()); }
	ruleBody{ after(grammarAccess.getMethodAccess().getBodyBodyParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__DeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
	ruleDeclaration{ after(grammarAccess.getBodyAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getStatementsLabelOrStatementParserRuleCall_3_0()); }
	ruleLabelOrStatement{ after(grammarAccess.getBodyAccess().getStatementsLabelOrStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementSequence__StatementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementSequenceAccess().getStatementsLabelOrStatementParserRuleCall_0()); }
	ruleLabelOrStatement{ after(grammarAccess.getStatementSequenceAccess().getStatementsLabelOrStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getDeclarationAccess().getTypeQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__LocalsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getLocalsIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getLocalsIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__LocalsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getLocalsIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getLocalsIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameLABELNAMETerminalRuleCall_0_0()); }
	RULE_LABELNAME{ after(grammarAccess.getLabelAccess().getNameLABELNAMETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStmt__LhsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStmtAccess().getLhsRefParserRuleCall_0_0()); }
	ruleRef{ after(grammarAccess.getAssignStmtAccess().getLhsRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignStmt__RhsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignStmtAccess().getRhsValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getAssignStmtAccess().getRhsValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStmt__LhsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStmtAccess().getLhsLocalParserRuleCall_0_0()); }
	ruleLocal{ after(grammarAccess.getIdentityStmtAccess().getLhsLocalParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentityStmt__RhsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityStmtAccess().getRhsIdentityRefParserRuleCall_2_0()); }
	ruleIdentityRef{ after(grammarAccess.getIdentityStmtAccess().getRhsIdentityRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoStmtAccess().getTargetLABELNAMETerminalRuleCall_1_0()); }
	RULE_LABELNAME{ after(grammarAccess.getGotoStmtAccess().getTargetLABELNAMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getConditionConditionalExprParserRuleCall_1_0()); }
	ruleConditionalExpr{ after(grammarAccess.getIfStmtAccess().getConditionConditionalExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ThenAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getThenGotoStmtParserRuleCall_2_0()); }
	ruleGotoStmt{ after(grammarAccess.getIfStmtAccess().getThenGotoStmtParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InvokeStmt__InvokeExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeStmtAccess().getInvokeExprInvokeExprParserRuleCall_0()); }
	ruleInvokeExpr{ after(grammarAccess.getInvokeStmtAccess().getInvokeExprInvokeExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__KeyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getKeyLocalParserRuleCall_2_0()); }
	ruleLocal{ after(grammarAccess.getTableSwitchStmtAccess().getKeyLocalParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__CasesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getCasesCaseParserRuleCall_5_0_0()); }
	ruleCase{ after(grammarAccess.getTableSwitchStmtAccess().getCasesCaseParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableSwitchStmt__DefaultAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableSwitchStmtAccess().getDefaultGotoStmtParserRuleCall_8_0()); }
	ruleGotoStmt{ after(grammarAccess.getTableSwitchStmtAccess().getDefaultGotoStmtParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnterMonitorStmt__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnterMonitorStmtAccess().getOperandValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getEnterMonitorStmtAccess().getOperandValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExitMonitorStmt__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitMonitorStmtAccess().getOperandValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getExitMonitorStmtAccess().getOperandValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RetStmt__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRetStmtAccess().getTargetLocalParserRuleCall_1_0()); }
	ruleLocal{ after(grammarAccess.getRetStmtAccess().getTargetLocalParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStmtAccess().getOperandValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getReturnStmtAccess().getOperandValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getCaseAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__TargetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getTargetGotoStmtParserRuleCall_3_0()); }
	ruleGotoStmt{ after(grammarAccess.getCaseAccess().getTargetGotoStmtParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getAddExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getAddExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getAndExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getAndExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getCmpExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getCmpExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpgExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpgExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getCmpgExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpgExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpgExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getCmpgExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmplExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmplExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getCmplExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmplExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmplExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getCmplExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getDivExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getDivExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getMulExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMulExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getMulExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getOrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getOrExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getRemExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getRemExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShlExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShlExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getShlExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShlExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShlExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getShlExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShrExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getShrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShrExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShrExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getShrExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getSubExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getSubExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UshrExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUshrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getUshrExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UshrExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUshrExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getUshrExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getXorExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getXorExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getEqExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getEqExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getGeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getGeExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GtExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGtExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getGtExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GtExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGtExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getGtExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getLeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getLeExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LtExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getLtExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LtExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLtExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getLtExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NeExpr__LeftOpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
	ruleNonExpr{ after(grammarAccess.getNeExprAccess().getLeftOpNonExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NeExpr__RightOpAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNeExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getNeExprAccess().getRightOpNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpr__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExprAccess().getTypeQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getCastExprAccess().getTypeQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpr__OperandAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExprAccess().getOperandValueParserRuleCall_3_0()); }
	ruleValue{ after(grammarAccess.getCastExprAccess().getOperandValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__OperandAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getOperandRefParserRuleCall_0_0()); }
	ruleRef{ after(grammarAccess.getInstanceOfExprAccess().getOperandRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getInstanceOfExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__ClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getClassQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getSootMethodRefAccess().getClassQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getSootMethodRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getNameMethodNameParserRuleCall_4_0()); }
	ruleMethodName{ after(grammarAccess.getSootMethodRefAccess().getNameMethodNameParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__ParametersAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getParametersQualifiedNameParserRuleCall_6_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getSootMethodRefAccess().getParametersQualifiedNameParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootMethodRef__ParametersAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootMethodRefAccess().getParametersQualifiedNameParserRuleCall_6_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getSootMethodRefAccess().getParametersQualifiedNameParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__MethodAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getMethodSootMethodRefParserRuleCall_2_0()); }
	ruleSootMethodRef{ after(grammarAccess.getStaticInvokeExprAccess().getMethodSootMethodRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getParametersNonExprParserRuleCall_4_0_0()); }
	ruleNonExpr{ after(grammarAccess.getStaticInvokeExprAccess().getParametersNonExprParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInvokeExpr__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticInvokeExprAccess().getParametersNonExprParserRuleCall_4_1_1_0()); }
	ruleNonExpr{ after(grammarAccess.getStaticInvokeExprAccess().getParametersNonExprParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__BaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); }
	ruleLocalOrWildcard{ after(grammarAccess.getInterfaceInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__MethodAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); }
	ruleSootMethodRef{ after(grammarAccess.getInterfaceInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); }
	ruleNonExpr{ after(grammarAccess.getInterfaceInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceInvokeExpr__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); }
	ruleNonExpr{ after(grammarAccess.getInterfaceInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__BaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); }
	ruleLocalOrWildcard{ after(grammarAccess.getSpecialInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__MethodAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); }
	ruleSootMethodRef{ after(grammarAccess.getSpecialInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); }
	ruleNonExpr{ after(grammarAccess.getSpecialInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecialInvokeExpr__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecialInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); }
	ruleNonExpr{ after(grammarAccess.getSpecialInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__BaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); }
	ruleLocalOrWildcard{ after(grammarAccess.getVirtualInvokeExprAccess().getBaseLocalOrWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__MethodAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); }
	ruleSootMethodRef{ after(grammarAccess.getVirtualInvokeExprAccess().getMethodSootMethodRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); }
	ruleNonExpr{ after(grammarAccess.getVirtualInvokeExprAccess().getParametersNonExprParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualInvokeExpr__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); }
	ruleNonExpr{ after(grammarAccess.getVirtualInvokeExprAccess().getParametersNonExprParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWildcardAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewArrayExpr__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewArrayExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getNewArrayExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewArrayExpr__SizeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewArrayExprAccess().getSizeDimensionParserRuleCall_4_0()); }
	ruleDimension{ after(grammarAccess.getNewArrayExprAccess().getSizeDimensionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewExpr__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewExprAccess().getTypeQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getNewExprAccess().getTypeQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getNewMultiArrayExprAccess().getTypeQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__SizeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getSizeDimensionParserRuleCall_4_0()); }
	ruleDimension{ after(grammarAccess.getNewMultiArrayExprAccess().getSizeDimensionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMultiArrayExpr__EmptySizeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getEmptySizeLeftSquareBracketRightSquareBracketKeyword_5_0()); }
(
{ before(grammarAccess.getNewMultiArrayExprAccess().getEmptySizeLeftSquareBracketRightSquareBracketKeyword_5_0()); }

	'[]' 

{ after(grammarAccess.getNewMultiArrayExprAccess().getEmptySizeLeftSquareBracketRightSquareBracketKeyword_5_0()); }
)

{ after(grammarAccess.getNewMultiArrayExprAccess().getEmptySizeLeftSquareBracketRightSquareBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__SizeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getSizeINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getDimensionAccess().getSizeINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LengthExpr__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLengthExprAccess().getOperandValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getLengthExprAccess().getOperandValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpr__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExprAccess().getOperandValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getNegExprAccess().getOperandValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Local__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getLocalAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterRef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterRefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterRefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterRef__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getParameterRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThisRef__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getThisRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRef__BaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRefAccess().getBaseLocalOrWildcardParserRuleCall_0_0()); }
	ruleLocalOrWildcard{ after(grammarAccess.getArrayRefAccess().getBaseLocalOrWildcardParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRef__IndexAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRefAccess().getIndexNonExprParserRuleCall_2_0()); }
	ruleNonExpr{ after(grammarAccess.getArrayRefAccess().getIndexNonExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFieldRef__FieldRefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticFieldRefAccess().getFieldRefSootFieldRefParserRuleCall_0()); }
	ruleSootFieldRef{ after(grammarAccess.getStaticFieldRefAccess().getFieldRefSootFieldRefParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__ClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getClassQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getSootFieldRefAccess().getClassQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getSootFieldRefAccess().getTypeQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SootFieldRef__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSootFieldRefAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getSootFieldRefAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceFieldRef__BaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceFieldRefAccess().getBaseLocalOrWildcardParserRuleCall_0_0()); }
	ruleLocalOrWildcard{ after(grammarAccess.getInstanceFieldRefAccess().getBaseLocalOrWildcardParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceFieldRef__FieldRefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceFieldRefAccess().getFieldRefFieldRefParserRuleCall_2_0()); }
	ruleFieldRef{ after(grammarAccess.getInstanceFieldRefAccess().getFieldRefFieldRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassConstant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassConstantAccess().getNameQualifiedNameOrWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameOrWildcard{ after(grammarAccess.getClassConstantAccess().getNameQualifiedNameOrWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWildcard__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWildcardAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameWildcardAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConstant__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstantAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntConstantAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LongConstant__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLongConstantAccess().getValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getLongConstantAccess().getValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConstant__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstantAccess().getValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getDoubleConstantAccess().getValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstant__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatConstantAccess().getValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getFloatConstantAccess().getValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstant__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringConstantAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameQNameParserRuleCall_0()); }
	ruleQName{ after(grammarAccess.getQualifiedNameAccess().getNameQNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_LABELNAME : 'label' ('0'..'9')+;

RULE_ID : '$'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


